{"version":3,"sources":["./src/app/modules/user/pages/user-posts-page/user-posts-page-range.const.ts","./src/app/shared/functions/fetch-articles-with-topics.function.ts","./src/app/shared/classes/pageable-conetnt.class.ts","./src/app/shared/classes/abstract-user-posts.class.ts"],"names":[],"mappings":"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","file":"default~pages-user-drafts-page-user-drafts-page-module~pages-user-posts-page-user-posts-page-module-es2015.js","sourcesContent":["import { FeedOrderEnum } from '@api/schemas/feed/feed-order.enum';\nimport { IFeedParams } from '@api/schemas/feed/feed-params.interface';\nimport { IToggleItem } from '@shared/interfaces/toggle-item.interface';\nimport { LocaleEnum } from '@api/schemas/locale/locale.enum';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport function getUserPostsRanges(translateService: TranslateService): IToggleItem<never, IFeedParams>[] {\n  return [\n    {\n      id: 10,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_DAY'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24,\n      },\n    },\n    {\n      id: 6,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_3_DAYS'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 3,\n      },\n    },\n    {\n      id: 7,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_WEEK'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 7,\n      },\n    },\n    {\n      id: 8,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_MONTH'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 30,\n      },\n    },\n    {\n      id: 9,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_YEAR'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 30 * 12,\n      },\n    },\n    {\n      id: 1,\n      text: translateService.instant('COMMON.THE_NEWEST_FIRST'),\n      query: { order: FeedOrderEnum.TIME },\n    },\n    {\n      id: 2,\n      text: translateService.instant('COMMON.FROM_A_TO_Z_'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.RUSSIAN, asc: true },\n    },\n    {\n      id: 3,\n      text: translateService.instant('COMMON.FROM_Z_TO_A_'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.RUSSIAN },\n    },\n    {\n      id: 4,\n      text: translateService.instant('COMMON.FROM_A_TO_Z'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.ENGLISH, asc: true },\n    },\n    {\n      id: 5,\n      text: translateService.instant('COMMON.FROM_Z_TO_A'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.ENGLISH },\n    },\n  ];\n}\n","import { Observable, of } from 'rxjs';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { ITopicViewFull } from '@api/schemas/topic/topic-view-full.interface';\nimport { map, defaultIfEmpty } from 'rxjs/operators';\nimport { TopicsService } from '@api/routes/topics.service';\n\nexport function fetchArticlesWithTopics$(\n  page: IPageResponse<IArticleView>,\n  topicsService: TopicsService\n): Observable<IPageResponse<[IArticleView, ITopicView]>> {\n    const topics: number[] = [];\n    page.content.forEach((article: IArticleView) => {\n        if (article.topics.length > 0) {\n            topics.push(article.topics[0]);\n        }\n    });\n    return page.content.length > 0 ? topicsService.getMultiple$(topics).pipe(defaultIfEmpty([]), map((topicsRet: ITopicViewFull[]) => {\n        const content: [IArticleView, ITopicView][] = [];\n        page.content.forEach((article: IArticleView) => {\n            if (article.topics.length > 0) {\n                content.push([article, topicsRet.find((x: ITopicViewFull) => x.meta.id === article.topics[0]) as ITopicView]);\n            } else {\n                content.push([article, null]);\n            }\n        });\n        return { ...page, content };\n    })) : of({ ...page, content: [] });\n}\n","import { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { debounce, filter, first, tap, mapTo } from 'rxjs/operators';\n\nexport const NO_CONTENT = Symbol('NO_CONTENT');\n\nexport class PageableContent<T, O = any> {\n  public readonly isFetching$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public readonly content$: Subject<T[]> = new Subject<T[]>();\n  public readonly options$: BehaviorSubject<O>;\n  public readonly end$ = new Subject();\n\n  public content: T[] = [];\n  public page = -1;\n  public totalPages = 1;\n\n  private readonly fetchCommand$: Subject<never> = new Subject<never>();\n\n  constructor(\n    private readonly fetchNextFn$: (page: number, options: O) => Observable<IPageResponse<T>>,\n    options: O = null\n  ) {\n    this.options$ = new BehaviorSubject<O>(options);\n    this.fetchCommand$.pipe(debounce(() => this.isFetching$.pipe(filter((_: boolean) => !_)))).subscribe(() => this.fetchNextPage());\n  }\n\n  public fetch(): void {\n    if (this.page < this.totalPages - 1) {\n      this.fetchCommand$.next();\n    }\n  }\n\n  public reset$(hard: boolean = true): Observable<any> {\n    return this.isFetching$.pipe(\n      filter((it: boolean) => !it),\n      first(),\n      tap(() => {\n        if (hard) {\n          this.content.splice(0, this.content.length);\n        }\n        this.page = -1;\n        this.totalPages = 1;\n      }),\n    );\n  }\n\n  public setOptionsWithReset$(options: O, hard: boolean = true): Observable<O> {\n    return this.reset$(hard).pipe(\n      tap(() => {\n        this.options$.next(options);\n        this.fetch();\n      }),\n      mapTo(options),\n    );\n  }\n\n  private fetchNextPage(): void {\n    this.isFetching$.next(true);\n    this.fetchNextFn$(this.page + 1, this.options$.value).subscribe(\n      (response: IPageResponse<T>) => {\n        this.page = response.page;\n        this.totalPages = response.totalPages;\n        this.content$.next(response.content);\n        if (this.page >= this.totalPages - 1) {\n          this.end$.next();\n        }\n        this.content.push(...response.content);\n        this.isFetching$.next(false);\n      },\n      (error: any) => {\n        this.isFetching$.next(false);\n        if (error !== Symbol('NO_CONTENT')) {\n          throw error;\n        }\n      },\n    );\n  }\n}\n","import { AbstractComponent } from './abstract-component.class';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { IToggleItem } from '@shared/interfaces/toggle-item.interface';\nimport { IFeedParams } from '@api/schemas/feed/feed-params.interface';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from '@app/services/session.service';\nimport { FeedService } from '@api/routes/feed.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { takeUntil, map, switchMap } from 'rxjs/operators';\nimport { UsersService } from '@api/routes/users.service';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { fetchArticlesWithTopics$ } from '@shared/functions/fetch-articles-with-topics.function';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { getUserPostsRanges } from '@modules/user/pages/user-posts-page/user-posts-page-range.const';\nimport { Component, OnInit } from '@angular/core';\nimport { PageableContent } from './pageable-conetnt.class';\nimport { idMap } from '@shared/utils/id-map.operator';\n\ninterface IUserPostListRouteData {\n    query: IFeedParams;\n}\n\ntype PageableOptions = [IUserPostListRouteData, IUserViewFull, number];\n\n@Component({\n    template: ''\n})\n// tslint:disable-next-line:component-class-suffix\nexport class AbstractUserPosts extends AbstractComponent implements OnInit {\n    public readonly pageable: PageableContent<[IArticleView, ITopicView], PageableOptions> =\n      new PageableContent<[IArticleView, ITopicView], PageableOptions>(this.fetchContent$.bind(this), null);\n    public readonly ranges: IToggleItem<never, IFeedParams>[] = getUserPostsRanges(this.translateService);\n\n    public articles: [IArticleView, ITopicView][] = [];\n    public pinned: [IArticleView, ITopicView] = null;\n    public drafts = false;\n\n    public activeRange = 1;\n    public selectedRange: IToggleItem = this.ranges[5];\n\n    constructor(\n        protected readonly activatedRoute: ActivatedRoute,\n        protected readonly sessionService: SessionService,\n        protected readonly feedService: FeedService,\n        protected readonly translateService: TranslateService,\n        protected readonly usersService: UsersService,\n        protected readonly topicsService: TopicsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.pageable.content$.pipe(takeUntil(this.ngOnDestroy$)).subscribe((content: [IArticleView, ITopicView][]) => {\n            if (content && content[0] && content[0][0].pinned) {\n                this.pinned = content[0];\n                content.splice(content.indexOf(content[0]), 1);\n            }\n            this.articles.push(...content);\n        });\n\n        const id$: Observable<number> = this.activatedRoute.paramMap.pipe(\n            idMap(),\n            switchMap((id: string | number) => this.usersService.getSingle$(id)),\n            map((user: IUserViewFull) => user.meta.id),\n            takeUntil(this.ngOnDestroy$),\n        );\n\n        combineLatest([this.activatedRoute.data as Observable<IUserPostListRouteData>, this.sessionService.user$, id$]).pipe(\n            takeUntil(this.ngOnDestroy$)\n        ).subscribe((options: [IUserPostListRouteData, IUserViewFull, number]) => {\n            this.articles.splice(0, this.articles.length);\n            this.pageable.options$.next(options);\n            this.pageable.fetch();\n        });\n    }\n\n    private fetchContent$(page: number, options: PageableOptions): Observable<IPageResponse<[IArticleView, ITopicView]>> {\n        const query: {} = this.selectedRange ? this.selectedRange.query : { query: null };\n        let result: Observable<IPageResponse<[IArticleView, ITopicView]>>;\n        if (options !== null) {\n            if (options[0].query.stage && options[0].query.stage[0] === 'DRAFT') {\n                this.drafts = true;\n            }\n            if (options[0].query.bookmark) {\n                options[0].query.bookmarked = options[2];\n                result = this.feedService.feedRequest$({ ...options[0].query, ...query, page }).pipe(\n                    switchMap((_: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(_, this.topicsService))\n                );\n            } else {\n                result = this.feedService.feedRequest$({ ...options[0].query, author: options[2], pinned: true, ...query, page }).pipe(\n                    switchMap((_: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(_, this.topicsService))\n                );\n            }\n        } else {\n            result = this.feedService.feedRequest$({ ...query, page }).pipe(\n                switchMap((_: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(_, this.topicsService))\n            );\n        }\n        return result;\n    }\n\n    public rangeEvent(range: IToggleItem): void {\n        this.selectedRange = range;\n        this.activeRange = range.id;\n        this.articles = [];\n        this.pageable.page = -1;\n    }\n\n    public remove(article: [IArticleView, ITopicView]): void {\n        this.articles.splice(this.articles.indexOf(article), 1);\n    }\n}\n"],"sourceRoot":"webpack:///"}