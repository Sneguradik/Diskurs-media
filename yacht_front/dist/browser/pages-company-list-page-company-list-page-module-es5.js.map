{"version":3,"sources":["webpack:///src/app/modules/content-overview/pages/company-list-page/company-list-page.module.ts","webpack:///src/app/modules/content-overview/pages/company-list-page/company-list-page.component.ts","webpack:///src/app/modules/content-overview/pages/company-list-page/company-list-page.component.html","webpack:///src/app/modules/content-overview/pages/company-list-page/company-list-page-routing.module.ts"],"names":["CompanyListPageModule","forChild","declarations","imports","CompanyListPageComponent","translateService","sidebarWrapperService","companiesService","sessionService","companies","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","fetchNextPage","isLoading","currentPage","totalPages","isLoading$","get$","query","undefined","selectedRange","selectedFilter","pipe","ngOnDestroy$","subscribe","response","handledItems","content","filter","item","meta","id","userId","push","page","remove","company","reset","selector","templateUrl","styleUrls","routes","path","component","CompanyListPageRoutingModule","exports"],"mappings":"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","file":"pages-company-list-page-company-list-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompanyListPageRoutingModule } from './company-list-page-routing.module';\nimport { CompanyListPageComponent } from './company-list-page.component';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { FiltersModule } from '@shared/modules/filters/filters.module';\nimport { RangesModule } from '@shared/modules/ranges/ranges.module';\nimport { NavbarModule } from '@modules/content-overview/navbar/navbar.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UserViewModule } from '@shared/modules/user-view/user-view.module';\n\n\n@NgModule({\n  declarations: [CompanyListPageComponent],\n  imports: [\n    CommonModule,\n    CompanyListPageRoutingModule,\n    SharedUiModule,\n    SharedPipesModule,\n    SharedComponentsModule,\n    SvgModule,\n    FiltersModule,\n    RangesModule,\n    NavbarModule,\n    TranslateModule.forChild(),\n    UserViewModule\n  ]\n})\nexport class CompanyListPageModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractUserListComponent } from '@shared/classes/abstract-user-list-component';\nimport { CompaniesService } from '@api/routes/companies.service';\nimport { SessionService } from '@app/services/session.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICompanyView } from '@api/schemas/company/company-view.interface';\nimport { extractQuery } from '@shared/functions/extract-query.function';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-company-list-page',\n  templateUrl: './company-list-page.component.html',\n  styleUrls: ['./company-list-page.component.scss']\n})\nexport class CompanyListPageComponent extends AbstractUserListComponent implements OnInit, OnDestroy {\n  public companies: ICompanyView[] = [];\n\n  constructor(\n    protected readonly translateService: TranslateService,\n    private readonly sidebarWrapperService: SidebarWrapperService,\n    private readonly companiesService: CompaniesService,\n    private readonly sessionService: SessionService\n  ) {\n    super(translateService);\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    super.ngOnInit();\n  }\n\n  public fetchNextPage(): void {\n    if (!this.isLoading && this.currentPage < this.totalPages - 1) {\n      this.isLoading$.next(true);\n      this.currentPage += 1;\n      this.companiesService.get$(this.currentPage, {\n        query: this.query || undefined,\n        ...extractQuery(this.selectedRange),\n        ...extractQuery(this.selectedFilter),\n      }).pipe(takeUntil(this.ngOnDestroy$)).subscribe((response: IPageResponse<ICompanyView>) => {\n        const handledItems = response.content.filter((item: ICompanyView) => item.meta.id !== this.sessionService.userId);\n        this.companies.push(...handledItems);\n        this.currentPage = response.page;\n        this.totalPages = response.totalPages;\n        this.isLoading$.next(false);\n      });\n    }\n  }\n\n  public remove(id: number): void {\n    this.companies = this.companies.filter((company: ICompanyView) => company.meta.id !== id);\n  }\n\n  public reset(): void {\n    this.currentPage = -1;\n    this.totalPages = 1;\n    this.companies = [];\n    this.fetchNextPage();\n  }\n}\n","<app-navbar [searchPlaceholder]=\"'COMMON.SEARCH_BY_COMPANY' | translate\" activeItem=\"{{ 'COMMON.COMPANIES' | translate }}\" (search)=\"handleSearch($event)\"></app-navbar>\n<app-filters [filters]=\"filters\" [activeFilter]=\"activeFilter\" (toggleFilter)=\"filterEvent($event)\"></app-filters>\n<app-ranges [ranges]=\"ranges\" [activeRange]=\"activeRange\" (toggleRange)=\"rangeEvent($event)\"></app-ranges>\n\n<ul class=\"block-card item-space-20\">\n    <app-user-view\n        *ngFor=\"let company of companies\"\n        [data]=\"company\"\n        (gone)=\"remove($event)\">\n        <footer>\n            <div class=\"row\">\n                <p class=\"stats-item\">\n                    {{ 'COMMON.PUBLICATIONS_' | translate}}\n                    <span class=\"stats-item__value\">{{ company.postCount | bigNumbers }}</span>\n                </p>\n                <p class=\"stats-item\">\n                    {{ 'COMMON.VACANCIES_' | translate}}\n                    <span class=\"stats-item__value\">{{ company.jobCount | bigNumbers }}</span>\n                </p>\n                <p class=\"stats-item\">\n                    {{ 'COMMON.EVENT_'  | translate}}\n                    <span class=\"stats-item__value\">{{ company.eventCount | bigNumbers }}</span>\n                </p>\n                <aside class=\"subscribers\">\n                    <p class=\"stats-item\">\n                        {{ 'COMMON.SUBSCRIBERS' | translate}}\n                        <span class=\"stats-item__value\">{{ company.subscribers.count | bigNumbers }}</span>\n                    </p>\n                </aside>\n            </div>\n            <p class=\"description\">\n                {{ company.info.bio }}\n            </p>\n        </footer>\n    </app-user-view>\n</ul>\n\n<app-pagination [page]=\"currentPage\" [maxPages]=\"totalPages\" [enabled]=\"!isLoading\" (onPage)=\"fetchNextPage()\"></app-pagination>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompanyListPageComponent } from './company-list-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyListPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyListPageRoutingModule { }\n"]}