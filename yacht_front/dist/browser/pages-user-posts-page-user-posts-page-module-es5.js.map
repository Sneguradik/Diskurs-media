{"version":3,"sources":["webpack:///src/app/modules/user/pages/user-posts-page/user-posts-page.component.ts","webpack:///src/app/modules/user/pages/user-posts-page/user-posts-page.component.html","webpack:///src/app/modules/user/pages/user-posts-page/user-posts-page-routing.module.ts","webpack:///src/app/modules/user/pages/user-posts-page/user-posts-page.module.ts"],"names":["UserPostsPageComponent","activatedRoute","sessionService","feedService","translateService","usersService","topicsService","sidebarWrapperService","platformService","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","isServer","articles","snapshot","data","feed","selector","templateUrl","styleUrls","routes","path","component","query","stage","PUBLISHED","REVIEWING","BLOCKED","resolve","UserPostsPageRoutingModule","forChild","imports","exports","UserPostsPageModule","declarations"],"mappings":"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","file":"pages-user-posts-page-user-posts-page-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractUserPosts } from '@shared/classes/abstract-user-posts.class';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from '@app/services/session.service';\nimport { FeedService } from '@api/routes/feed.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UsersService } from '@api/routes/users.service';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { PlatformService } from '@shared/services/platform.service';\n\n@Component({\n  selector: 'app-user-posts-page',\n  templateUrl: './user-posts-page.component.html',\n  styleUrls: ['./user-posts-page.component.scss']\n})\nexport class UserPostsPageComponent extends AbstractUserPosts implements OnInit, OnDestroy {\n  constructor(\n    activatedRoute: ActivatedRoute,\n    sessionService: SessionService,\n    feedService: FeedService,\n    translateService: TranslateService,\n    usersService: UsersService,\n    topicsService: TopicsService,\n    private readonly sidebarWrapperService: SidebarWrapperService,\n    private readonly platformService: PlatformService\n  ) {\n    super(activatedRoute, sessionService, feedService, translateService, usersService, topicsService);\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    super.ngOnInit();\n\n    if (this.platformService.isServer) {\n      this.articles = this.activatedRoute.snapshot.data.feed;\n    }\n  }\n}\n","<app-user-header></app-user-header>\n\n<ul *ngIf=\"pinned\" class=\"block-card item-space-20\">\n    <li>\n        <app-feed-article-view [options]=\"{ pinnedMark: true, pictureOn: true, menuOn: !drafts }\" [data]=\"pinned[0]\" [topic]=\"pinned[1]\" (pinned)=\"pinned[0].pinned = false; articles.push(pinned); pinned=$event;\" (gone)=\"remove(pinned)\"></app-feed-article-view>\n    </li>\n</ul>\n<div style=\"margin-bottom: 50px;\"></div>\n\n<app-ranges [ranges]=\"ranges\" [activeRange]=\"activeRange\" (toggleRange)=\"rangeEvent($event)\"></app-ranges>\n<ul class=\"block-card item-space-20\">\n    <li *ngFor=\"let article of articles; let i = index\">\n        <app-feed-article-view [data]=\"article[0]\" [topic]=\"article[1]\" [options]=\"{ pictureOn: true, menuOn: !drafts }\" (gone)=\"remove(article)\" (pinned)=\"pinned=$event; remove(article); pinned[0].pinned = true;\"></app-feed-article-view>\n    </li>\n</ul>\n\n<app-pagination [pageable]=\"pageable\" [fireFirstPage]=\"false\"></app-pagination>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPostsPageComponent } from './user-posts-page.component';\nimport { PublicationStageEnum } from '@api/schemas/article/publication-stage.enum';\nimport { UsersResolverService } from '@shared/services/users-resolver.service';\nimport { FeedResolverService } from '@shared/services/feed-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserPostsPageComponent,\n    data: {\n      query: {\n        stage: [\n          PublicationStageEnum[PublicationStageEnum.PUBLISHED],\n          PublicationStageEnum[PublicationStageEnum.REVIEWING],\n          PublicationStageEnum[PublicationStageEnum.BLOCKED]],\n      },\n    },\n    resolve: { data: UsersResolverService, feed: FeedResolverService }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserPostsPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserPostsPageRoutingModule } from './user-posts-page-routing.module';\nimport { UserPostsPageComponent } from './user-posts-page.component';\nimport { RangesModule } from '@shared/modules/ranges/ranges.module';\nimport { UserHeaderModule } from '@modules/user/user-header/user-header.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { FeedModule } from '@shared/modules/feed/feed.module';\n\n\n@NgModule({\n  declarations: [UserPostsPageComponent],\n  imports: [\n    CommonModule,\n    UserPostsPageRoutingModule,\n    RangesModule,\n    UserHeaderModule,\n    SharedComponentsModule,\n    FeedModule\n  ]\n})\nexport class UserPostsPageModule { }\n"]}