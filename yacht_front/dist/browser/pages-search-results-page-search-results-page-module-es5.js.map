{"version":3,"sources":["webpack:///src/app/modules/search/pages/search-results-page/search-results-page.module.ts","webpack:///src/app/modules/search/pages/search-results-page/search-results-page-routing.module.ts","webpack:///src/app/modules/search/pages/search-results-page/search-results-page.component.ts","webpack:///src/app/modules/search/pages/search-results-page/search-results-page.component.html","webpack:///src/app/shared/functions/fetch-articles-with-topics.function.ts","webpack:///src/app/shared/classes/pageable-conetnt.class.ts"],"names":["SearchResultsPageModule","forChild","declarations","imports","routes","path","component","SearchResultsPageRoutingModule","exports","SearchResultsPageComponent","activatedRoute","feedService","topicsService","sidebarWrapperService","query","pageable","fetch$","bind","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","urlQuery$","queryParams","pipe","p","ngOnDestroy$","subscribe","q","setValue","inputQuery$","valueChanges","query$","_","setOptionsWithReset$","page","feedRequest$","selector","templateUrl","styleUrls","fetchArticlesWithTopics$","topics","content","forEach","length","push","getMultiple$","topicsRet","find","x","meta","id","NO_CONTENT","Symbol","PageableContent","fetchNextFn$","options","isFetching$","content$","end$","totalPages","fetchCommand$","options$","fetchNextPage","fetch","reset$","hard","it","splice","value","response","error"],"mappings":"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","file":"pages-search-results-page-search-results-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SearchResultsPageRoutingModule } from './search-results-page-routing.module';\nimport { SearchResultsPageComponent } from './search-results-page.component';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { FeedModule } from '@shared/modules/feed/feed.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  declarations: [SearchResultsPageComponent],\n  imports: [\n    CommonModule,\n    SearchResultsPageRoutingModule,\n    SharedComponentsModule,\n    FeedModule,\n    SharedUiModule,\n    TranslateModule.forChild()\n  ]\n})\nexport class SearchResultsPageModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchResultsPageComponent } from './search-results-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchResultsPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchResultsPageRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { FeedService } from '@api/routes/feed.service';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { PageableContent } from '@shared/classes/pageable-conetnt.class';\nimport { fetchArticlesWithTopics$ } from '@shared/functions/fetch-articles-with-topics.function';\nimport { merge, Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-search-results-page',\n  templateUrl: './search-results-page.component.html',\n  styleUrls: ['./search-results-page.component.scss']\n})\nexport class SearchResultsPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public readonly query: FormControl = new FormControl();\n  public readonly pageable: PageableContent<[IArticleView, ITopicView], string> =\n    new PageableContent<[IArticleView, ITopicView], string>(this.fetch$.bind(this));\n\n  constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly feedService: FeedService,\n    private readonly topicsService: TopicsService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    const urlQuery$: Observable<any> = this.activatedRoute.queryParams.pipe(map((p: Params) => p['q'] || ''));\n    urlQuery$.pipe(takeUntil(this.ngOnDestroy$)).subscribe((q: any) => this.query.setValue(q));\n    const inputQuery$: Observable<any> = this.query.valueChanges;\n    const query$ = merge(urlQuery$, inputQuery$);\n    query$.pipe(\n      filter((_: any) => !!_),\n      distinctUntilChanged(),\n      debounceTime(750),\n      switchMap((q: any) => this.pageable.setOptionsWithReset$(q)),\n      takeUntil(this.ngOnDestroy$),\n    ).subscribe();\n  }\n\n  private fetch$(page: number, query: string): Observable<IPageResponse<[IArticleView, ITopicView]>> {\n    return this.feedService.feedRequest$({\n      page,\n      query,\n    }).pipe(switchMap((_: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(_, this.topicsService)));\n  }\n}\n","<section class=\"block-card margin-bottom-30\">\n    <h2 class=\"fade-1 margin-bottom-20\">{{ 'COMMON.SEARCH_PUBLICATIONS' | translate }}<a [routerLink]=\"['/tags']\">{{ 'COMMON.SEARCH_BY_TAGS' | translate }}</a></h2>\n    <app-ui-search [control]=\"query\"></app-ui-search>\n</section>\n\n<ng-container *ngIf=\"query.value\">\n    <h3 *ngIf=\"pageable.totalPages === 0\" class=\"text-center fade-1\">Ничего не найдено!</h3>\n    <h3 *ngIf=\"pageable.page === -1\" class=\"text-center fade-2\">Загрузка...</h3>\n</ng-container>\n\n<ul class=\"block-card item-space-20 no-empty\">\n    <li *ngFor=\"let a of pageable.content\">\n        <app-feed-article-view [data]=\"a[0]\" [topic]=\"a[1]\" [options]=\"{ pictureOn: true, menuOn: true }\"></app-feed-article-view>\n    </li>\n</ul>\n\n<app-pagination [pageable]=\"pageable\" [fireFirstPage]=\"false\"></app-pagination>\n","import { Observable, of } from 'rxjs';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { ITopicViewFull } from '@api/schemas/topic/topic-view-full.interface';\nimport { map, defaultIfEmpty } from 'rxjs/operators';\nimport { TopicsService } from '@api/routes/topics.service';\n\nexport function fetchArticlesWithTopics$(\n  page: IPageResponse<IArticleView>,\n  topicsService: TopicsService\n): Observable<IPageResponse<[IArticleView, ITopicView]>> {\n    const topics: number[] = [];\n    page.content.forEach((article: IArticleView) => {\n        if (article.topics.length > 0) {\n            topics.push(article.topics[0]);\n        }\n    });\n    return page.content.length > 0 ? topicsService.getMultiple$(topics).pipe(defaultIfEmpty([]), map((topicsRet: ITopicViewFull[]) => {\n        const content: [IArticleView, ITopicView][] = [];\n        page.content.forEach((article: IArticleView) => {\n            if (article.topics.length > 0) {\n                content.push([article, topicsRet.find((x: ITopicViewFull) => x.meta.id === article.topics[0]) as ITopicView]);\n            } else {\n                content.push([article, null]);\n            }\n        });\n        return { ...page, content };\n    })) : of({ ...page, content: [] });\n}\n","import { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { debounce, filter, first, tap, mapTo } from 'rxjs/operators';\n\nexport const NO_CONTENT = Symbol('NO_CONTENT');\n\nexport class PageableContent<T, O = any> {\n  public readonly isFetching$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public readonly content$: Subject<T[]> = new Subject<T[]>();\n  public readonly options$: BehaviorSubject<O>;\n  public readonly end$ = new Subject();\n\n  public content: T[] = [];\n  public page = -1;\n  public totalPages = 1;\n\n  private readonly fetchCommand$: Subject<never> = new Subject<never>();\n\n  constructor(\n    private readonly fetchNextFn$: (page: number, options: O) => Observable<IPageResponse<T>>,\n    options: O = null\n  ) {\n    this.options$ = new BehaviorSubject<O>(options);\n    this.fetchCommand$.pipe(debounce(() => this.isFetching$.pipe(filter((_: boolean) => !_)))).subscribe(() => this.fetchNextPage());\n  }\n\n  public fetch(): void {\n    if (this.page < this.totalPages - 1) {\n      this.fetchCommand$.next();\n    }\n  }\n\n  public reset$(hard: boolean = true): Observable<any> {\n    return this.isFetching$.pipe(\n      filter((it: boolean) => !it),\n      first(),\n      tap(() => {\n        if (hard) {\n          this.content.splice(0, this.content.length);\n        }\n        this.page = -1;\n        this.totalPages = 1;\n      }),\n    );\n  }\n\n  public setOptionsWithReset$(options: O, hard: boolean = true): Observable<O> {\n    return this.reset$(hard).pipe(\n      tap(() => {\n        this.options$.next(options);\n        this.fetch();\n      }),\n      mapTo(options),\n    );\n  }\n\n  private fetchNextPage(): void {\n    this.isFetching$.next(true);\n    this.fetchNextFn$(this.page + 1, this.options$.value).subscribe(\n      (response: IPageResponse<T>) => {\n        this.page = response.page;\n        this.totalPages = response.totalPages;\n        this.content$.next(response.content);\n        if (this.page >= this.totalPages - 1) {\n          this.end$.next();\n        }\n        this.content.push(...response.content);\n        this.isFetching$.next(false);\n      },\n      (error: any) => {\n        this.isFetching$.next(false);\n        if (error !== Symbol('NO_CONTENT')) {\n          throw error;\n        }\n      },\n    );\n  }\n}\n"]}