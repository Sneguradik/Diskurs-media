{"version":3,"sources":["./src/app/modules/content-overview/pages/tag-list-page/tag-list-page.component.ts","./src/app/modules/content-overview/pages/tag-list-page/tag-list-page.component.html","./src/app/shared/classes/pageable-conetnt.class.ts","./src/app/modules/content-overview/pages/tag-list-page/tag-list-page-routing.module.ts","./src/app/modules/content-overview/pages/tag-list-page/tag-list-page.module.ts"],"names":[],"mappings":"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","file":"pages-tag-list-page-tag-list-page-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { Subject, Observable } from 'rxjs';\nimport { PageableContent } from '@shared/classes/pageable-conetnt.class';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { ITagView } from '@api/schemas/tags/tag-view.interface';\nimport { TagOrderEnum } from '@api/schemas/tags/tag-order.enum';\nimport { SessionService } from '@app/services/session.service';\nimport { TagsService } from '@api/routes/tags.service';\nimport { ITagQuery } from '@api/schemas/tags/tag-query.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { takeUntil, startWith, map, filter, debounceTime, switchMap } from 'rxjs/operators';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-tag-list-page',\n  templateUrl: './tag-list-page.component.html',\n  styleUrls: ['./tag-list-page.component.scss']\n})\nexport class TagListPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public readonly searchQuery$: Subject<string> = new Subject<string>();\n  public readonly recent: PageableContent<ITagView, IUserViewFull> =\n    new PageableContent<ITagView, IUserViewFull>((page: number) => this.fetch$(page, { seen: true }));\n  public readonly popular: PageableContent<ITagView> =\n    new PageableContent<ITagView>((page: number) => this.fetch$(page, { order: TagOrderEnum.POST_COUNT }));\n  public readonly found: PageableContent<ITagView, string> =\n    new PageableContent<ITagView, string>((page: number, query: string) => this.fetch$(page, { query }));\n\n  public hasSearchQuery$: Observable<boolean>;\n\n  constructor(\n    private readonly tagsService: TagsService,\n    private readonly sessionService: SessionService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    this.popular.fetch();\n    this.setQueries();\n  }\n\n  private setQueries(): void {\n    this.hasSearchQuery$ = this.searchQuery$.pipe(\n      startWith(false),\n      map((_: string | boolean) => !!_),\n      takeUntil(this.ngOnDestroy$),\n    );\n    this.sessionService.user$.pipe(\n      filter((_: IUserViewFull) => !!_),\n      switchMap((user: IUserViewFull) => this.recent.setOptionsWithReset$(user)),\n      takeUntil(this.ngOnDestroy$),\n    ).subscribe();\n    this.searchQuery$.pipe(\n      debounceTime(750),\n      filter((_: string) => !!_),\n      switchMap((query: string) => this.found.setOptionsWithReset$(query)),\n      takeUntil(this.ngOnDestroy$),\n    ).subscribe();\n    this.searchQuery$.pipe(\n      filter((_: string) => !_),\n      switchMap(() => this.found.reset$()),\n      takeUntil(this.ngOnDestroy$),\n    ).subscribe();\n  }\n\n  public fetch$(page: number, query: ITagQuery): Observable<IPageResponse<ITagView>> {\n    return this.tagsService.get$(page, query).pipe(takeUntil(this.ngOnDestroy$));\n  }\n\n  public handleSearch(query: string): void {\n    this.searchQuery$.next(query);\n  }\n}\n","<app-navbar class=\"margin-bottom-44\" activeItem=\"# Теги\" [searchPlaceholder]=\"'COMMON.SEARCH_BY_TAGS' | translate\" (search)=\"handleSearch($event)\"></app-navbar>\n<ul class=\"block-card tag-list\">\n    <ng-container [ngSwitch]=\"hasSearchQuery$ | async\">\n        <ng-container *ngSwitchCase=\"true\">\n            <h2>Результаты поиска</h2>\n            <ul class=\"tags\">\n                <li *ngFor=\"let tag of found.content\">\n                    <a [routerLink]=\"['/tags', tag.meta.id]\"># {{ tag.content }}</a>\n                </li>\n            </ul>\n            <button *ngIf=\"found.page != -1 && found.page < found.totalPages - 1\" class=\"show-more\" (click)=\"found.fetch()\">\n                <span>{{ 'COMMON.SHOW_MORE' | translate}}</span>\n                <svg name=\"chevron/down\"></svg>\n            </button>\n            <p *ngIf=\"found.totalPages == 0\">{{ 'COMMON.TAGS_NOT_FOUND_' | translate}}</p>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"false\">\n            <div class=\"tag-popular\">\n                <h2>{{ 'COMMON.POPULAR_TAGS' | translate}}</h2>\n                <ul class=\"tags\">\n                    <li *ngFor=\"let tag of popular.content\">\n                        <a [routerLink]=\"['/tags', tag.meta.id]\"># {{ tag.content }}</a>\n                    </li>\n                </ul>\n                <button *ngIf=\"popular.page < popular.totalPages - 1\" class=\"show-more\" (click)=\"popular.fetch()\">\n                    <span>{{ 'COMMON.SHOW_MORE' | translate}}</span>\n                    <svg name=\"chevron/down\"></svg>\n                </button>\n                <p *ngIf=\"popular.totalPages == 0\">{{ 'COMMON.TAGS_NOT_FOUND_POPULAR' | translate}}</p>\n            </div>\n            <div *appLoggedIn class=\"tag-recent\">\n                <h2>{{ 'COMMON.RECENTLY_VIEWED' | translate}}</h2>\n                <ul class=\"tags\">\n                    <li *ngFor=\"let tag of recent.content\">\n                        <a [routerLink]=\"['/tags', tag.meta.id]\"># {{ tag.content }}</a>\n                    </li>\n                </ul>\n                <button *ngIf=\"recent.page < recent.totalPages - 1\" class=\"show-more\" (click)=\"recent.fetch()\">\n                    <span>{{ 'COMMON.SHOW_MORE' | translate}}</span>\n                    <svg name=\"chevron/down\"></svg>\n                </button>\n                <p *ngIf=\"recent.totalPages == 0\">{{ 'COMMON.TAGS_NOT_FOUND_RECENT' | translate}}</p>\n            </div>\n        </ng-container>\n    </ng-container>\n</ul>\n","import { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { debounce, filter, first, tap, mapTo } from 'rxjs/operators';\n\nexport const NO_CONTENT = Symbol('NO_CONTENT');\n\nexport class PageableContent<T, O = any> {\n  public readonly isFetching$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public readonly content$: Subject<T[]> = new Subject<T[]>();\n  public readonly options$: BehaviorSubject<O>;\n  public readonly end$ = new Subject();\n\n  public content: T[] = [];\n  public page = -1;\n  public totalPages = 1;\n\n  private readonly fetchCommand$: Subject<never> = new Subject<never>();\n\n  constructor(\n    private readonly fetchNextFn$: (page: number, options: O) => Observable<IPageResponse<T>>,\n    options: O = null\n  ) {\n    this.options$ = new BehaviorSubject<O>(options);\n    this.fetchCommand$.pipe(debounce(() => this.isFetching$.pipe(filter((_: boolean) => !_)))).subscribe(() => this.fetchNextPage());\n  }\n\n  public fetch(): void {\n    if (this.page < this.totalPages - 1) {\n      this.fetchCommand$.next();\n    }\n  }\n\n  public reset$(hard: boolean = true): Observable<any> {\n    return this.isFetching$.pipe(\n      filter((it: boolean) => !it),\n      first(),\n      tap(() => {\n        if (hard) {\n          this.content.splice(0, this.content.length);\n        }\n        this.page = -1;\n        this.totalPages = 1;\n      }),\n    );\n  }\n\n  public setOptionsWithReset$(options: O, hard: boolean = true): Observable<O> {\n    return this.reset$(hard).pipe(\n      tap(() => {\n        this.options$.next(options);\n        this.fetch();\n      }),\n      mapTo(options),\n    );\n  }\n\n  private fetchNextPage(): void {\n    this.isFetching$.next(true);\n    this.fetchNextFn$(this.page + 1, this.options$.value).subscribe(\n      (response: IPageResponse<T>) => {\n        this.page = response.page;\n        this.totalPages = response.totalPages;\n        this.content$.next(response.content);\n        if (this.page >= this.totalPages - 1) {\n          this.end$.next();\n        }\n        this.content.push(...response.content);\n        this.isFetching$.next(false);\n      },\n      (error: any) => {\n        this.isFetching$.next(false);\n        if (error !== Symbol('NO_CONTENT')) {\n          throw error;\n        }\n      },\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TagListPageComponent } from './tag-list-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TagListPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TagListPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TagListPageRoutingModule } from './tag-list-page-routing.module';\nimport { TagListPageComponent } from './tag-list-page.component';\nimport { NavbarModule } from '@modules/content-overview/navbar/navbar.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\nimport { RouterModule } from '@angular/router';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\n\n\n@NgModule({\n  declarations: [TagListPageComponent],\n  imports: [\n    CommonModule,\n    TagListPageRoutingModule,\n    NavbarModule,\n    TranslateModule.forChild(),\n    CommonDirectivesModule,\n    RouterModule,\n    SvgModule\n  ]\n})\nexport class TagListPageModule { }\n"],"sourceRoot":"webpack:///"}