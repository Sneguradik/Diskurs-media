{"version":3,"sources":["webpack:///src/app/modules/dashboard/shared/ui/dashboard-select/dashboard-select.component.ts","webpack:///src/app/modules/dashboard/shared/ui/dashboard-select/dashboard-select.component.html","webpack:///src/app/modules/dashboard/shared/ui/dashboard-select/dashboard-select.module.ts","webpack:///src/app/modules/dashboard/shared/classes/dashboard-constants.class.ts"],"names":["DashboardSelectComponent","ref","items","dropdownWidth","selected","SelectItemConstant","selectedChange","changeRes","dropdown","clickOut","event","nativeElement","contains","target","ngOnChanges","changes","currentValue","previousValue","emit","clear","ngOnDestroy","select","item","switchDropdownState","selector","templateUrl","styleUrls","DashboardSelectModule","declarations","exports","imports","DashboardConstants","title","id","payload","RangeParamsConstant","before","after","checkbox","TagsStatConstant","all","ActivityConstant","count","users","companies","registrations","presence","activity","materials","articles","comments","news"],"mappings":"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","file":"default~pages-ads-management-page-ads-management-page-module~pages-ratings-management-page-ratings-m~fc7da21b-es5.js","sourcesContent":["import { Component, EventEmitter, Output, Input, SimpleChanges, OnChanges, OnDestroy, HostListener, ElementRef } from '@angular/core';\nimport { DashboardConstants } from '../../classes/dashboard-constants.class';\nimport { ISelectItem } from './select-item.interface';\n\n@Component({\n  selector: 'app-dashboard-select',\n  templateUrl: './dashboard-select.component.html',\n  styleUrls: ['./dashboard-select.component.scss'],\n})\nexport class DashboardSelectComponent implements OnChanges, OnDestroy {\n\n  constructor(private readonly ref: ElementRef) {}\n\n  @Input() public items: ISelectItem[] = [];\n  @Input() public dropdownWidth: number = null;\n  @Input() public selected: ISelectItem = DashboardConstants.SelectItemConstant;\n\n  @Output() public readonly selectedChange: EventEmitter<ISelectItem> = new EventEmitter<ISelectItem>();\n  @Output() public readonly changeRes?: EventEmitter<ISelectItem> = new EventEmitter<ISelectItem>();\n\n  public dropdown = false;\n  @HostListener('document:click', ['$event']) public clickOut(event: any): void {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      this.dropdown = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected) {\n      if (changes.selected.currentValue !== changes.selected.previousValue) {\n        this.selectedChange.emit(this.selected);\n      }\n      if (changes.selected.currentValue === DashboardConstants.SelectItemConstant &&\n          changes.selected.currentValue !== changes.selected.previousValue) {\n        this.clear();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.clear();\n  }\n\n  public select(item: ISelectItem): void {\n    this.selectedChange.emit(item);\n    this.changeRes.emit(item);\n    this.selected = item ? item : DashboardConstants.SelectItemConstant;\n  }\n\n  public clear(): void {\n    this.dropdown = false;\n    this.selected = DashboardConstants.SelectItemConstant;\n  }\n\n  public switchDropdownState(): void {\n    this.dropdown = !this.dropdown;\n  }\n}\n","<div class=\"select-container\" [style.width.px]=\"dropdownWidth\">\n    <div class=\"styled-select admin-select\" [style.width.px]=\"dropdownWidth\" (click)=\"switchDropdownState()\">\n        <div class=\"select-selected\" [ngClass]=\"{ 'select-arrow-active': dropdown }\">{{ selected ? selected.title : '' }}</div>\n        <div class=\"select-items\" [hidden]=\"!dropdown\">\n            <div *ngFor=\"let item of items\" [ngClass]=\"{ 'same-as-selected': item === selected }\" (click)=\"select(item)\">{{ item.title }}</div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardSelectComponent } from './dashboard-select.component';\n\n@NgModule({\n  declarations: [DashboardSelectComponent],\n  exports: [DashboardSelectComponent],\n  imports: [CommonModule],\n})\nexport class DashboardSelectModule {}\n","import { IActivityView } from '@api/schemas/dashboard/activity-view.interface';\nimport { IStatTags } from '../../pages/tags-management-page/components/statistic-tags-block/stat-tags.interface';\nimport { ISelectItem } from '../ui/dashboard-select/select-item.interface';\nimport { IRangeParams } from '../ui/dashboard-range/range-params.interface';\n\nexport class DashboardConstants {\n  public static SelectItemConstant: ISelectItem = {\n    title: null,\n    id: null,\n    payload: null,\n  };\n\n  public static RangeParamsConstant: IRangeParams = {\n    before: null,\n    after: null,\n    checkbox: null,\n  };\n\n  public static TagsStatConstant: IStatTags = {\n    all: null,\n    new: null,\n  };\n\n  public static ActivityConstant: IActivityView = {\n    count: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    registrations: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    presence: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    activity: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    materials: {\n      all: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n      users: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n      companies: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n    },\n  };\n}\n"]}