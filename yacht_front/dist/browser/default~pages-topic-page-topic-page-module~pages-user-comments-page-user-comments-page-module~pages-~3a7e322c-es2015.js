(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~pages-topic-page-topic-page-module~pages-user-comments-page-user-comments-page-module~pages-~3a7e322c"],{

/***/ "DBZq":
/*!*************************************************************!*\
  !*** ./src/app/shared/ui/info-header/info-header.module.ts ***!
  \*************************************************************/
/*! exports provided: InfoHeaderModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InfoHeaderModule", function() { return InfoHeaderModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _info_header_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./info-header.component */ "zwVY");
/* harmony import */ var _shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/modules/svg/svg.module */ "F/CY");
/* harmony import */ var ngx_scrollbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-scrollbar */ "G1Gu");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "sYmb");
/* harmony import */ var _shared_ui_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared-ui.module */ "j/N6");









class InfoHeaderModule {
}
InfoHeaderModule.ɵfac = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵngDeclareFactory"]({ minVersion: "12.0.0", version: "12.2.17", ngImport: _angular_core__WEBPACK_IMPORTED_MODULE_0__, type: InfoHeaderModule, deps: [], target: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵFactoryTarget"].NgModule });
InfoHeaderModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵngDeclareNgModule"]({ minVersion: "12.0.0", version: "12.2.17", ngImport: _angular_core__WEBPACK_IMPORTED_MODULE_0__, type: InfoHeaderModule, declarations: [_info_header_component__WEBPACK_IMPORTED_MODULE_2__["InfoHeaderComponent"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
        _shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_3__["SvgModule"],
        ngx_scrollbar__WEBPACK_IMPORTED_MODULE_4__["NgScrollbarModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateModule"], _shared_ui_module__WEBPACK_IMPORTED_MODULE_6__["SharedUiModule"]], exports: [_info_header_component__WEBPACK_IMPORTED_MODULE_2__["InfoHeaderComponent"]] });
InfoHeaderModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵngDeclareInjector"]({ minVersion: "12.0.0", version: "12.2.17", ngImport: _angular_core__WEBPACK_IMPORTED_MODULE_0__, type: InfoHeaderModule, imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
            _shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_3__["SvgModule"],
            ngx_scrollbar__WEBPACK_IMPORTED_MODULE_4__["NgScrollbarModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateModule"].forChild(),
            _shared_ui_module__WEBPACK_IMPORTED_MODULE_6__["SharedUiModule"]
        ]] });
_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵngDeclareClassMetadata"]({ minVersion: "12.0.0", version: "12.2.17", ngImport: _angular_core__WEBPACK_IMPORTED_MODULE_0__, type: InfoHeaderModule, decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
            args: [{
                    declarations: [_info_header_component__WEBPACK_IMPORTED_MODULE_2__["InfoHeaderComponent"]],
                    exports: [_info_header_component__WEBPACK_IMPORTED_MODULE_2__["InfoHeaderComponent"]],
                    imports: [
                        _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                        _shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_3__["SvgModule"],
                        ngx_scrollbar__WEBPACK_IMPORTED_MODULE_4__["NgScrollbarModule"],
                        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateModule"].forChild(),
                        _shared_ui_module__WEBPACK_IMPORTED_MODULE_6__["SharedUiModule"]
                    ]
                }]
        }] });


/***/ }),

/***/ "TNbK":
/*!****************************************************!*\
  !*** ./src/app/shared/utils/not-found.operator.ts ***!
  \****************************************************/
/*! exports provided: notFound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notFound", function() { return notFound; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "kU1M");


function notFound(router) {
    return Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["catchError"])((error) => {
        if (error.status === 404 || error.status === 422) {
            router.navigateByUrl('/404');
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["throwError"])(error);
    });
}


/***/ }),

/***/ "zwVY":
/*!****************************************************************!*\
  !*** ./src/app/shared/ui/info-header/info-header.component.ts ***!
  \****************************************************************/
/*! exports provided: InfoHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InfoHeaderComponent", function() { return InfoHeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _app_services_responsive_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/services/responsive.service */ "SKFc");
/* harmony import */ var _icon_icon_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icon/icon.component */ "9qJ4");
/* harmony import */ var _modules_svg_svg_svg_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/svg/svg/svg.component */ "ax+O");
/* harmony import */ var ngx_scrollbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-scrollbar */ "G1Gu");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "sYmb");








class InfoHeaderComponent {
    constructor(responsive) {
        this.responsive = responsive;
        this.subscribed = false;
        this.isMe = false;
        this.subscribe = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.edit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    subFunc() {
        this.subscribe.emit();
        this.subscribed = !this.subscribed;
    }
    doEdit() {
        this.edit.emit();
    }
}
InfoHeaderComponent.ɵfac = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵngDeclareFactory"]({ minVersion: "12.0.0", version: "12.2.17", ngImport: _angular_core__WEBPACK_IMPORTED_MODULE_0__, type: InfoHeaderComponent, deps: [{ token: _app_services_responsive_service__WEBPACK_IMPORTED_MODULE_1__["ResponsiveService"] }], target: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵFactoryTarget"].Component });
InfoHeaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵngDeclareComponent"]({ minVersion: "12.0.0", version: "12.2.17", type: InfoHeaderComponent, selector: "app-ui-info-header", inputs: { bgImage: "bgImage", profileImage: "profileImage", profileText: "profileText", subscribed: "subscribed", isMe: "isMe" }, outputs: { subscribe: "subscribe", edit: "edit" }, ngImport: _angular_core__WEBPACK_IMPORTED_MODULE_0__, template: "<div class=\"container\">\n    <div class=\"top\">\n        <img *ngIf=\"bgImage\" [src]=\"bgImage\">\n        <img *ngIf=\"!bgImage\" [src]=\"'assets/default.png'\">\n        <div class=\"top-content\">\n            <div class=\"user-icon\">\n                <app-ui-icon *ngIf=\"!(responsive.lt.medium | async)\" [src]=\"profileImage\" [textAlternative]=\"profileText\" [size]=\"'xlarge'\"></app-ui-icon>\n                <app-ui-icon *ngIf=\"responsive.lt.medium | async\" [src]=\"profileImage\" [textAlternative]=\"profileText\" [size]=\"'large'\"></app-ui-icon>\n            </div>\n            <div class=\"upper\">\n                <div class=\"name\">\n                    <div class=\"content\" style=\"max-width: 290px !important; word-wrap: break-word;\">\n                        <ng-content *ngIf=\"!(responsive.lt.medium | async)\" select=\".info-header-name\"></ng-content>\n                        <ng-content *ngIf=\"responsive.lt.medium | async\" select=\".info-header-name-small\"></ng-content>\n                    </div>\n                </div>\n                <div class=\"sub\">\n                    <div *ngIf=\"!(responsive.lt.medium | async) && subscribed == false  && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <div class=\"inner\">\n                            <span>{{ 'COMMON.SUBSCRIBE' | translate }}</span>\n                            <svg name=\"btn-add\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"!(responsive.lt.medium | async) && subscribed == true && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <div class=\"inner\">\n                            <span style=\"color: #92929D !important\">{{ 'COMMON.YOU_ARE_ALREADY' | translate }}</span>\n                            <svg name=\"tick\" size=\"15\" style=\"width: 15px !important; height: 15px !important\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"!(responsive.lt.medium | async) && isMe\" class=\"content btn\" (click)=\"doEdit()\">\n                        <div class=\"inner\">\n                            <span style=\"color: #92929D !important\">{{ 'COMMON.EDIT' | translate }}</span>\n                            <svg name=\"edit-new\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && subscribed == false && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <svg name=\"btn-add\" size=\"35\"></svg>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && subscribed == true && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <svg name=\"btn-cross\" size=\"35\"></svg>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && isMe\" class=\"content btn\" (click)=\"doEdit()\">\n                        <svg name=\"edit-new\" size=\"25\"></svg>\n                    </div>\n                </div>\n            </div>\n            <div class=\"down\">\n                <ng-content *ngIf=\"!(responsive.lt.medium | async)\" select=\".info-header-down\"></ng-content>\n                <ng-content *ngIf=\"responsive.lt.medium | async\" select=\".info-header-down-small\"></ng-content>\n            </div>\n        </div>\n    </div>\n    <div class=\"desc\">\n        <ng-content select=\".info-header-desc\"></ng-content>\n    </div>\n    <div class=\"bar\">\n        <div *ngIf=\"!(responsive.lt.medium | async)\">\n            <ng-content *ngTemplateOutlet=\"bar\"></ng-content>\n        </div>\n        <ng-scrollbar *ngIf=\"responsive.lt.medium | async\" [track]=\"'horizontal'\" style=\"height: 64px;\">\n            <ng-content *ngTemplateOutlet=\"bar\"></ng-content>\n        </ng-scrollbar>\n    </div>\n</div>\n\n<ng-template #bar>\n    <ng-content select=\".info-header-bar\"></ng-content>\n</ng-template>\n", styles: ["/* stylelint-disable-next-line scss/at-import-no-partial-leading-underscore */\n@media (max-width: 766px) {\n  .hide-lt-medium {\n    display: none !important;\n  }\n}\n@media (min-width: 767px) {\n  .hide-ge-medium {\n    display: none !important;\n  }\n}\n@media (max-width: 1059px) {\n  .hide-lt-large {\n    display: none !important;\n  }\n}\n.container {\n  background-color: white;\n  border-radius: 15px;\n  width: 700px;\n}\n@media (max-width: 766px) {\n  .container {\n    width: 100%;\n    box-sizing: border-box;\n  }\n}\n.top {\n  height: 313px;\n  margin-bottom: 19px;\n  position: relative;\n}\n@media (max-width: 766px) {\n  .top {\n    height: 255px;\n    width: 100%;\n  }\n}\n.top img {\n  border-top-left-radius: 15px;\n  border-top-right-radius: 15px;\n  height: 265px;\n  -o-object-fit: cover;\n     object-fit: cover;\n  -o-object-position: center;\n     object-position: center;\n  width: 700px;\n}\n@media (max-width: 766px) {\n  .top img {\n    height: 142px;\n    width: 100%;\n  }\n}\n.top-content {\n  height: 150px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 163px;\n  position: absolute;\n  top: 0;\n  width: 660px;\n}\n@media (max-width: 766px) {\n  .top-content {\n    height: 251px;\n    padding-top: 161px;\n    width: 100%;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n}\n.top-content .user-icon {\n  display: inline-block;\n  height: 150px;\n  vertical-align: middle;\n  width: 150px;\n}\n@media (max-width: 766px) {\n  .top-content .user-icon {\n    height: 60px;\n    width: 60px;\n  }\n}\n.top-content .upper {\n  display: inline-block;\n  height: 102px;\n  margin-left: 30px;\n  vertical-align: top;\n  width: 480px;\n}\n@media (max-width: 766px) {\n  .top-content .upper {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 60px;\n    margin-left: 15px;\n    vertical-align: middle;\n    width: calc(100% - 75px);\n  }\n}\n.top-content .upper .name {\n  display: inline-block;\n  height: 100%;\n  position: relative;\n  vertical-align: middle;\n  width: 275px;\n}\n@media (max-width: 766px) {\n  .top-content .upper .name {\n    height: 100%;\n    width: 210px;\n  }\n}\n.top-content .upper .name .content {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n.top-content .upper .sub {\n  display: inline-block;\n  height: 100%;\n  margin-left: 30px;\n  position: relative;\n  vertical-align: middle;\n  width: 175px;\n}\n@media (max-width: 766px) {\n  .top-content .upper .sub {\n    margin-left: 15px;\n    width: 35px;\n  }\n}\n.top-content .upper .sub .content {\n  background-color: white;\n  border-radius: 15px;\n  height: 35px;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 175px;\n}\n@media (max-width: 766px) {\n  .top-content .upper .sub .content {\n    background: none;\n    height: 35px;\n    width: 35px;\n  }\n}\n.top-content .upper .sub .content span {\n  color: #00b7ff;\n  display: inline-block;\n  font-family: Roboto, sans-serif;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  line-height: 18px;\n  margin-right: 10px;\n  vertical-align: middle;\n}\n.top-content .upper .sub .content svg {\n  display: inline-block;\n  height: 24px;\n  vertical-align: middle;\n  width: 24px;\n}\n@media (max-width: 766px) {\n  .top-content .upper .sub .content svg {\n    height: 35px;\n    padding-top: 0;\n    width: 35px;\n  }\n}\n.top-content .upper .sub .btn {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0;\n}\n.top-content .upper .sub .btn > * {\n  margin-left: 0 !important;\n  padding-top: 0 !important;\n}\n.top-content .down {\n  float: right;\n  height: 48px;\n  margin-left: 30px;\n  position: relative;\n  top: -47px;\n  width: 480px;\n}\n@media (max-width: 766px) {\n  .top-content .down {\n    display: inline-block;\n    float: none;\n    height: 24px;\n    margin-left: 0;\n    margin-top: 10px;\n    position: relative;\n    top: 0;\n    width: 100%;\n  }\n}\n.desc {\n  border-bottom: 1px solid #f6f6f6;\n  margin-bottom: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  min-height: 20px;\n  padding-bottom: 10px;\n  width: 660px;\n}\n@media (max-width: 766px) {\n  .desc {\n    width: 100%;\n    box-sizing: border-box;\n    margin: 0 0 20px;\n    padding: 0 20px;\n  }\n}\n.bar {\n  min-height: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 660px;\n}\n@media (max-width: 766px) {\n  .bar {\n    width: 100%;\n    box-sizing: border-box;\n    padding-left: 0;\n    padding-right: 0;\n  }\n  .bar ng-scrollbar {\n    --scrollbar-color: transparent;\n    --scroll-view-color: transparent;\n    --scrollbar-size: 0;\n    padding: 0 20px;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64, */"], components: [{ type: _icon_icon_component__WEBPACK_IMPORTED_MODULE_2__["IconComponent"], selector: "app-ui-icon", inputs: ["src", "textAlternative", "size"] }, { type: _modules_svg_svg_svg_component__WEBPACK_IMPORTED_MODULE_3__["SvgComponent"], selector: "svg[name]", inputs: ["name", "w", "h", "size"] }, { type: ngx_scrollbar__WEBPACK_IMPORTED_MODULE_4__["NgScrollbar"], selector: "ng-scrollbar", inputs: ["viewClass", "trackClass", "thumbClass", "minThumbSize", "trackClickScrollDuration", "pointerEventsMethod", "track", "visibility", "appearance", "position", "sensorDebounce", "scrollAuditTime", "disabled", "sensorDisabled", "pointerEventsDisabled", "viewportPropagateMouseMove", "autoHeightDisabled", "autoWidthDisabled"], outputs: ["updated"], exportAs: ["ngScrollbar"] }], directives: [{ type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgTemplateOutlet"], selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": _angular_common__WEBPACK_IMPORTED_MODULE_5__["AsyncPipe"], "translate": _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslatePipe"] }, changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush });
_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵngDeclareClassMetadata"]({ minVersion: "12.0.0", version: "12.2.17", ngImport: _angular_core__WEBPACK_IMPORTED_MODULE_0__, type: InfoHeaderComponent, decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
            args: [{
                    selector: 'app-ui-info-header',
                    templateUrl: './info-header.component.html',
                    styleUrls: ['./info-header.component.scss'],
                    changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush
                }]
        }], ctorParameters: function () { return [{ type: _app_services_responsive_service__WEBPACK_IMPORTED_MODULE_1__["ResponsiveService"] }]; }, propDecorators: { bgImage: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
            }], profileImage: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
            }], profileText: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
            }], subscribed: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
            }], isMe: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
            }], subscribe: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
            }], edit: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
            }] } });


/***/ })

}]);
//# sourceMappingURL=default~pages-topic-page-topic-page-module~pages-user-comments-page-user-comments-page-module~pages-~3a7e322c-es2015.js.map