{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page-routing.module.ts","webpack:///src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page.component.ts","webpack:///src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page.component.html","webpack:///src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page.module.ts","webpack:///src/app/modules/dashboard/pages/events-jobs-management-page/components/events-jobs-management-block/events-jobs-management-block.component.ts","webpack:///src/app/modules/dashboard/pages/events-jobs-management-page/components/events-jobs-management-block/events-jobs-management-block.component.html"],"names":["routes","path","component","EventsJobsManagementPageRoutingModule","forChild","imports","exports","EventsJobsManagementPageComponent","administrationService","sidebarWrapperService","data$","saved","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","getData","getEventsJobs$","pipe","ngOnDestroy$","subscribe","controls","postData","postEventsJobs$","getValue","selector","templateUrl","styleUrls","EventsJobsManagementPageModule","declarations","EventsJobsManagementBlockComponent","fb","saveReq","resetReq","viewForm","group","firstViewEvents","required","min","firstViewJobs","secondViewEvents","secondViewJobs","thirdViewEvents","thirdViewJobs","_setFormValue","Boolean","data","setValue","firstView","events","jobs","secondView","thirdView","reset","emit","changeData","value","patch","type","paramsSwitcher","publicationsBottom","save","Number","get","changeDetection","OnPush"],"mappings":"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","file":"pages-events-jobs-management-page-events-jobs-management-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EventsJobsManagementPageComponent } from './events-jobs-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsJobsManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventsJobsManagementPageRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { IEventsJobsControl } from '@api/schemas/dashboard/events-jobs-control.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-events-jobs-management-page',\n  templateUrl: './events-jobs-management-page.component.html',\n  styleUrls: ['./events-jobs-management-page.component.scss'],\n})\nexport class EventsJobsManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public data$: BehaviorSubject<IEventsJobsControl> = new BehaviorSubject<IEventsJobsControl>(null);\n  public saved = false;\n\n  constructor(\n    private readonly administrationService: AdministrationService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.getData();\n  }\n\n  public getData(): void {\n    this.administrationService.getEventsJobs$()\n        .pipe(takeUntil(this.ngOnDestroy$))\n        .subscribe((controls: IEventsJobsControl) => this.data$.next(controls));\n  }\n\n  public postData(): void {\n    this.administrationService.postEventsJobs$(this.data$.getValue()).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n      this.saved = true;\n      setTimeout(() => {\n        this.saved = false;\n      }, 5000);\n    });\n  }\n}\n","<app-events-jobs-management-block [data$]=\"data$\"\n                                  [saved]=\"saved\"\n                                  (saveReq)=\"postData()\"\n                                  (resetReq)=\"getData()\">\n</app-events-jobs-management-block>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EventsJobsManagementPageRoutingModule } from './events-jobs-management-page-routing.module';\nimport { EventsJobsManagementPageComponent } from './events-jobs-management-page.component';\nimport { EventsJobsManagementBlockComponent } from './components/events-jobs-management-block/events-jobs-management-block.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [EventsJobsManagementPageComponent, EventsJobsManagementBlockComponent],\n    imports: [CommonModule, EventsJobsManagementPageRoutingModule, FormsModule, TranslateModule, ReactiveFormsModule],\n})\nexport class EventsJobsManagementPageModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport { IEventsJobsControl } from '@api/schemas/dashboard/events-jobs-control.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-events-jobs-management-block',\n  templateUrl: './events-jobs-management-block.component.html',\n  styleUrls: ['./events-jobs-management-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EventsJobsManagementBlockComponent implements OnInit {\n  @Input() public data$: BehaviorSubject<IEventsJobsControl>;\n  @Input() public saved = false;\n\n  @Output() public readonly saveReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly resetReq: EventEmitter<void> = new EventEmitter<void>();\n\n  public viewForm: FormGroup = this.fb.group({\n    firstViewEvents: ['', [Validators.required, Validators.min(0)]],\n    firstViewJobs: ['', [Validators.required, Validators.min(0)]],\n    secondViewEvents: ['', [Validators.required, Validators.min(0)]],\n    secondViewJobs: ['', [Validators.required, Validators.min(0)]],\n    thirdViewEvents: ['', [Validators.required, Validators.min(0)]],\n    thirdViewJobs: ['', [Validators.required, Validators.min(0)]]\n  });\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this._setFormValue();\n  }\n\n  private _setFormValue(): void {\n    this.data$.pipe(filter(Boolean)).subscribe((data: IEventsJobsControl) => {\n      this.viewForm.setValue({\n        firstViewEvents: data.firstView.events,\n        firstViewJobs: data.firstView.jobs,\n        secondViewEvents: data.secondView.events,\n        secondViewJobs: data.secondView.jobs,\n        thirdViewEvents: data.thirdView.events,\n        thirdViewJobs: data.thirdView.jobs\n      });\n    });\n  }\n\n  public reset(): void {\n    this.resetReq.emit();\n  }\n\n  public changeData(value: boolean, patch: string, type: string): void {\n    this.data$.next({...this.data$.getValue(), [patch]: {...this.data$.getValue()[patch], [type]: value}});\n  }\n\n  public paramsSwitcher(): void {\n    this.data$.next({\n      ...this.data$.getValue(),\n      publicationsBottom: !this.data$.getValue().publicationsBottom\n    });\n  }\n\n  public save(): void {\n    this.data$.next({\n      ...this.data$.getValue(),\n      firstView: {\n        jobs: Number(this.viewForm.get('firstViewJobs').value),\n        events: Number(this.viewForm.get('firstViewEvents').value)\n      },\n      secondView: {\n        jobs: Number(this.viewForm.get('secondViewJobs').value),\n        events: Number(this.viewForm.get('secondViewEvents').value)\n      },\n      thirdView: {\n        jobs: Number(this.viewForm.get('thirdViewJobs').value),\n        events: Number(this.viewForm.get('thirdViewEvents').value)\n      }\n    });\n    this.saveReq.emit();\n  }\n}\n","<form *ngIf=\"data$ | async\" class=\"admin-form\">\n    <fieldset class=\"admin-form__fieldset\">\n        <table class=\"admin-form__tab\">\n            <thead>\n                <tr>\n                    <th>Параметр</th>\n                    <th>{{ 'COMMON.EVENT_' | translate }}</th>\n                    <th>{{ 'COMMON.VACANCIES_' | translate }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><b>Где показывать</b></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>{{ 'COMMON.MY_NEWSFEED' | translate }}</td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"feedEvents\"\n                                   [ngModel]=\"(data$ | async).feed.events\"\n                                   (ngModelChange)=\"changeData($event, 'feed', 'events')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"feedJobs\"\n                                   [ngModel]=\"(data$ | async).feed.jobs\"\n                                   (ngModelChange)=\"changeData($event, 'feed', 'jobs')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'COMMON.PUBLICATIONS' | translate }}</td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsEvents\"\n                                   [ngModel]=\"(data$ | async).publications.events\"\n                                   (ngModelChange)=\"changeData($event, 'publications', 'events')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsJobs\"\n                                   [ngModel]=\"(data$ | async).publications.jobs\"\n                                   (ngModelChange)=\"changeData($event, 'publications', 'jobs')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'COMMON.POPULAR' | translate }}</td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"popularEvents\"\n                                   [ngModel]=\"(data$ | async).popular.events\"\n                                   (ngModelChange)=\"changeData($event, 'popular', 'events')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"popularJobs\"\n                                   [ngModel]=\"(data$ | async).popular.jobs\"\n                                   (ngModelChange)=\"changeData($event, 'popular', 'jobs')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Под публикацией <br>[переключатель]</td>\n                    <td>\n                        <label class=\"admin-big-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsBottomEvents\"\n                                   [ngModel]=\"(data$ | async).publicationsBottom\"\n                                   (ngModelChange)=\"paramsSwitcher()\">\n                            <span class=\"admin-big-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-big-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsBottomJobs\"\n                                   [ngModel]=\"!(data$ | async).publicationsBottom\"\n                                   (ngModelChange)=\"paramsSwitcher()\">\n                            <span class=\"admin-big-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </fieldset>\n    <fieldset class=\"admin-form__fieldset\" *ngIf=\"viewForm\" [formGroup]=\"viewForm\">\n        <legend class=\"admin-form__legend\">Показы в ленте <br><small>[после какой по счёту публикации сверху]</small></legend>\n        <table class=\"admin-form__tab\">\n            <tbody>\n                <tr>\n                    <td>Первый показ</td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"firstViewEvents\"\n                               formControlName=\"firstViewEvents\">\n                    </td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"firstViewJobs\"\n                               formControlName=\"firstViewJobs\">\n                    </td>\n                </tr>\n                <tr>\n                    <td>Второй показ</td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"secondViewEvents\"\n                               formControlName=\"secondViewEvents\">\n                    </td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"secondViewJobs\"\n                               formControlName=\"secondViewJobs\">\n                    </td>\n                </tr>\n                <tr>\n                    <td>Третий показ</td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"thirdViewEvents\"\n                               formControlName=\"thirdViewEvents\">\n                    </td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"thirdViewJobs\"\n                               formControlName=\"thirdViewJobs\">\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </fieldset>\n    <div class=\"admin-form__bar\">\n        <button class=\"btn admin-btn_white\"\n                type=\"submit\"\n                [disabled]=\"viewForm.invalid\"\n                (click)=\"save()\">{{ saved ? 'Изменения сохранены' : 'Сохранить изменения' }}</button>\n        <button class=\"btn admin-btn_blue\" (click)=\"reset()\">{{ 'COMMON.UNDO' | translate }}</button>\n    </div>\n</form>\n"]}