{"version":3,"sources":["webpack:///src/app/modules/user/pages/user-info-page/user-info-page.component.ts","webpack:///src/app/modules/user/pages/user-info-page/user-info-page.component.html","webpack:///src/app/modules/user/pages/user-info-page/user-info-page.module.ts","webpack:///src/app/modules/user/pages/user-info-page/user-info-page-routing.module.ts"],"names":["UserInfoPageComponent","usersService","activatedRoute","companiesService","sidebarWrapperService","authorInfo","members","memberPage","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","paramMap","pipe","pramMap","id","get","test","parseInt","getSingle$","user","getMembers","subscribe","page","isFetchingPage","members$","meta","response","memberMaxPages","totalPages","content","onShowMoreMembers","ngOnDestroy$","goTo","url","window","open","selector","templateUrl","styleUrls","UserInfoPageModule","forChild","declarations","imports","routes","path","component","resolve","data","UserInfoPageRoutingModule","exports"],"mappings":"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","file":"pages-user-info-page-user-info-page-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { IUserView } from '@api/schemas/user/user-view.interface';\nimport { UsersService } from '@api/routes/users.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { CompaniesService } from '@api/routes/companies.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil, map, tap, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-user-info-page',\n  templateUrl: './user-info-page.component.html',\n  styleUrls: ['./user-info-page.component.scss']\n})\nexport class UserInfoPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public authorInfo: IUserViewFull = null;\n  public members: IUserView[] = [];\n\n  public memberPage = 0;\n  public memberMaxPages: number;\n  public isFetchingPage: boolean;\n\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly companiesService: CompaniesService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    this.activatedRoute.paramMap.pipe(\n      map((pramMap: ParamMap) => {\n        const id = pramMap.get('id');\n        return /^\\d+$/.test(id) ? parseInt(id, 10) : id;\n      }),\n      switchMap((id: string | number) => this.usersService.getSingle$(id)),\n      tap((user: IUserViewFull) => (this.authorInfo = user)),\n      switchMap((user: IUserViewFull) => this.getMembers(user)),\n    ).subscribe();\n  }\n\n  private getMembers(user: IUserViewFull, page: number = 0): Observable<IUserView[]> {\n    this.isFetchingPage = true;\n    return this.companiesService.members$(user.meta.id, page).pipe(\n      tap((response: IPageResponse<IUserView>) => {\n        this.memberPage = page;\n        this.memberMaxPages = response.totalPages;\n        this.isFetchingPage = false;\n      }),\n      map((response: IPageResponse<IUserView>) => response.content),\n      tap((members: IUserView[]) => {\n        this.members = [...this.members, ...members];\n      }),\n    );\n  }\n\n  public onShowMoreMembers(): void {\n    if (!this.isFetchingPage && this.memberPage + 1 < this.memberMaxPages) {\n      this.getMembers(this.authorInfo, this.memberPage + 1).pipe(takeUntil(this.ngOnDestroy$)).subscribe();\n    }\n  }\n\n  public goTo(url: string): void {\n    window.open(url, '_blank');\n  }\n}\n","<app-user-header></app-user-header>\n\n<ul *ngIf=\"authorInfo\" class=\"block-card item-space-20\">\n    <li>\n        <div>\n            <span class=\"font-1 fade-1 body-1\"><b>{{ (authorInfo.info.company.isCompany ? 'COMMON.ABOUT_THE_COMPANY' : 'COMMON.ABOUT_THE_AUTHOR') | translate }}</b></span>\n            <br>\n            <br>\n            <div class=\"fade-1 font-2 body-2\" style=\"white-space: pre-line\">\n                {{ authorInfo.profile.fullDescription ? authorInfo.profile.fullDescription : 'Подробная информация отсутствует.' }}\n            </div>\n        </div>\n    </li>\n    <li *ngIf=\"authorInfo.info.company.isCompany && authorInfo.info.company.confirmed\">\n        <div>\n            <span class=\"font-1 fade-1 body-1\"><b>{{ 'COMMON.TEAM' | translate }} {{ authorInfo.info.username ? '@' + authorInfo.info.username : authorInfo.info.company.name }}\n                на Diskurs.Media</b></span>\n            <br>\n            <br>\n            <div class=\"users\">\n                <div *ngFor=\"let member of members\" >\n                    <a class=\"user\" [routerLink]=\"member | accountUrl\">\n                        <app-ui-icon [src]=\"member.info.picture\" [size]=\"'large'\" [textAlternative]=\"member.info | personName\"></app-ui-icon>\n                        <div class=\"user-info\">\n                            <h4>{{ member.info | personName }}</h4>\n                            <p>{{ member.info.username }}</p>\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <button *ngIf=\"memberPage + 1 < memberMaxPages\" class=\"show-more\" type=\"button\" (click)=\"onShowMoreMembers()\">\n              <span>{{ 'COMMON.SHOW_MORE' | translate }}</span>\n              <svg name=\"chevron/down\"></svg>\n            </button>\n        </div>\n    </li>\n    <li>\n        <div>\n            <span class=\"font-1 fade-1 body-1\"><b>{{ 'COMMON.CONTACTS' | translate }}</b></span>\n            <br>\n            <br>\n            <span class=\"fade-1 font-2 body-2\">\n                    <div *ngIf=\"authorInfo.contacts.websiteUrl\" class=\"contacts-item\">\n                        <svg name=\"social/web\" size=\"15\"></svg>\n                        <div class=\"info\">\n                            <a [href]=\"authorInfo.contacts.websiteUrl\">{{ authorInfo.contacts.websiteUrl }}</a>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"authorInfo.contacts.email\" class=\"contacts-item\">\n                        <svg name=\"social/mail\"\n                                  size=\"15\"></svg>\n                        <div class=\"info\">\n                            <a [href]=\"authorInfo.contacts.email\">{{ authorInfo.contacts.email }}</a>\n                        </div>\n                    </div>\n                    <div *ngIf=\"authorInfo.contacts.phone\" class=\"contacts-item\">\n                        <svg name=\"social/phone\" size=\"15\"></svg>\n                        <div class=\"info\">\n                            <div>{{ authorInfo.contacts.phone }}</div>\n                        </div>\n                    </div>\n                    <div class=\"contacts-item\">\n                        <div class=\"socials\">\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/twitter', key: 'twitter', text: 'Twitter'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/in', key: 'linkedIn', text: 'LinkedIn'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/yt', key: 'youtube', text: 'YouTube'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/telegram', key: 'telegram', text: 'Telegram'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/vk', key: 'vk', text: 'VK'}\"></ng-container>\n                        </div>\n                    </div>\n            </span>\n        </div>\n    </li>\n</ul>\n\n<ng-template #contactView let-icon=\"icon\" let-key=\"key\" let-text=\"text\">\n    <div *ngIf=\"authorInfo.contacts[key]\" class=\"contacts-item clickable\" (click)=\"goTo(this.authorInfo.contacts[key])\">\n        <svg *ngIf=\"icon !== 'social/instagram' && icon !== 'social/telegram'\" [name]=icon [size]=\"icon === 'social/web' ? 15 : 25\"></svg>\n        <img *ngIf=\"icon === 'social/instagram'\" src=\"assets/icons/uncorrect/instagram.png\" style =\"width: 25px; height: 25px;\" alt=\"\">\n        <img *ngIf=\"icon === 'social/telegram'\" src=\"assets/icons/uncorrect/telegram.png\" style =\"width: 25px; height: 25px;\" alt=\"\">\n        <div class=\"info\">{{ (key === 'youtube' ? 'COMMON.IM_ON' : 'COMMON.IM_IN') | translate : {snName: text} }}</div>\n    </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserInfoPageRoutingModule } from './user-info-page-routing.module';\nimport { UserInfoPageComponent } from './user-info-page.component';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { UserHeaderModule } from '@modules/user/user-header/user-header.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  declarations: [UserInfoPageComponent],\n  imports: [\n    CommonModule,\n    UserInfoPageRoutingModule,\n    SharedComponentsModule,\n    UserHeaderModule,\n    SharedUiModule,\n    SharedPipesModule,\n    SvgModule,\n    TranslateModule.forChild()\n  ]\n})\nexport class UserInfoPageModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserInfoPageComponent } from './user-info-page.component';\nimport { UsersResolverService } from '@shared/services/users-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserInfoPageComponent,\n    resolve: { data: UsersResolverService }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserInfoPageRoutingModule { }\n"]}