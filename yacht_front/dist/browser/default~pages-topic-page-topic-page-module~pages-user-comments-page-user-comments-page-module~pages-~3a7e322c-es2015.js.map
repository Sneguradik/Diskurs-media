{"version":3,"sources":["./src/app/shared/ui/info-header/info-header.module.ts","./src/app/shared/utils/not-found.operator.ts","./src/app/shared/ui/info-header/info-header.component.ts","./src/app/shared/ui/info-header/info-header.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACe;AACH;AACT;AACI;AACD;;;AAe9C,MAAM,gBAAgB;;iMAAhB,gBAAgB;kMAAhB,gBAAgB,iBAVZ,0EAAmB,aAGhC,4DAAY;QACZ,wEAAS;QACT,+DAAiB,uEAEjB,gEAAc,aANN,0EAAmB;kMASlB,gBAAgB,YARlB;YACP,4DAAY;YACZ,wEAAS;YACT,+DAAiB;YACjB,mEAAe,CAAC,QAAQ,EAAE;YAC1B,gEAAc;SACf;+KAEU,gBAAgB;kBAX5B,sDAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,0EAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,0EAAmB,CAAC;oBAC9B,OAAO,EAAE;wBACP,4DAAY;wBACZ,wEAAS;wBACT,+DAAiB;wBACjB,mEAAe,CAAC,QAAQ,EAAE;wBAC1B,gEAAc;qBACf;iBACF;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAoD;AACR;AAIrC,SAAS,QAAQ,CAAC,MAAc;IACnC,OAAO,iEAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;QAC3C,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YAC9C,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAChC;QACD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgG;;;;;;;;AASzF,MAAM,mBAAmB;IAY9B,YAA4B,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;QARzC,eAAU,GAAG,KAAK,CAAC;QACnB,SAAI,GAAG,KAAK,CAAC;QAEH,cAAS,GAAuB,IAAI,0DAAY,EAAQ,CAAC;QACzD,SAAI,GAAuB,IAAI,0DAAY,EAAQ,CAAC;IAIlB,CAAC;IAEtD,OAAO;QACZ,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;;oMArBU,mBAAmB;gJAAnB,mBAAmB,uRCThC,q7HAoEA;+KD3Da,mBAAmB;kBAN/B,uDAAS;mBAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,WAAW,EAAE,8BAA8B;oBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;oBAC3C,eAAe,EAAE,qEAAuB,CAAC,MAAM;iBAChD;sKAEiB,OAAO;sBAAtB,mDAAK;gBACU,YAAY;sBAA3B,mDAAK;gBACU,WAAW;sBAA1B,mDAAK;gBACU,UAAU;sBAAzB,mDAAK;gBACU,IAAI;sBAAnB,mDAAK;gBAEoB,SAAS;sBAAlC,oDAAM;gBACmB,IAAI;sBAA7B,oDAAM","file":"default~pages-topic-page-topic-page-module~pages-user-comments-page-user-comments-page-module~pages-~3a7e322c-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoHeaderComponent } from './info-header.component';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { NgScrollbarModule } from 'ngx-scrollbar';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedUiModule } from '../shared-ui.module';\n\n\n\n@NgModule({\n  declarations: [InfoHeaderComponent],\n  exports: [InfoHeaderComponent],\n  imports: [\n    CommonModule,\n    SvgModule,\n    NgScrollbarModule,\n    TranslateModule.forChild(),\n    SharedUiModule\n  ]\n})\nexport class InfoHeaderModule { }\n","import { OperatorFunction, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nexport function notFound(router: Router): OperatorFunction<any, any> {\n    return catchError((error: HttpErrorResponse) => {\n        if (error.status === 404 || error.status === 422) {\n            router.navigateByUrl('/404');\n        }\n        return throwError(error);\n    });\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { ResponsiveService } from '@app/services/responsive.service';\n\n@Component({\n  selector: 'app-ui-info-header',\n  templateUrl: './info-header.component.html',\n  styleUrls: ['./info-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InfoHeaderComponent {\n  @Input() public bgImage: string;\n  @Input() public profileImage: string;\n  @Input() public profileText: string;\n  @Input() public subscribed = false;\n  @Input() public isMe = false;\n\n  @Output() public readonly subscribe: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly edit: EventEmitter<void> = new EventEmitter<void>();\n\n  public userId: number;\n\n  constructor(public readonly responsive: ResponsiveService) {}\n\n  public subFunc(): void {\n    this.subscribe.emit();\n    this.subscribed = !this.subscribed;\n  }\n\n  public doEdit(): void {\n    this.edit.emit();\n  }\n}\n","<div class=\"container\">\n    <div class=\"top\">\n        <img *ngIf=\"bgImage\" [src]=\"bgImage\">\n        <img *ngIf=\"!bgImage\" [src]=\"'assets/default.png'\">\n        <div class=\"top-content\">\n            <div class=\"user-icon\">\n                <app-ui-icon *ngIf=\"!(responsive.lt.medium | async)\" [src]=\"profileImage\" [textAlternative]=\"profileText\" [size]=\"'xlarge'\"></app-ui-icon>\n                <app-ui-icon *ngIf=\"responsive.lt.medium | async\" [src]=\"profileImage\" [textAlternative]=\"profileText\" [size]=\"'large'\"></app-ui-icon>\n            </div>\n            <div class=\"upper\">\n                <div class=\"name\">\n                    <div class=\"content\" style=\"max-width: 290px !important; word-wrap: break-word;\">\n                        <ng-content *ngIf=\"!(responsive.lt.medium | async)\" select=\".info-header-name\"></ng-content>\n                        <ng-content *ngIf=\"responsive.lt.medium | async\" select=\".info-header-name-small\"></ng-content>\n                    </div>\n                </div>\n                <div class=\"sub\">\n                    <div *ngIf=\"!(responsive.lt.medium | async) && subscribed == false  && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <div class=\"inner\">\n                            <span>{{ 'COMMON.SUBSCRIBE' | translate }}</span>\n                            <svg name=\"btn-add\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"!(responsive.lt.medium | async) && subscribed == true && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <div class=\"inner\">\n                            <span style=\"color: #92929D !important\">{{ 'COMMON.YOU_ARE_ALREADY' | translate }}</span>\n                            <svg name=\"tick\" size=\"15\" style=\"width: 15px !important; height: 15px !important\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"!(responsive.lt.medium | async) && isMe\" class=\"content btn\" (click)=\"doEdit()\">\n                        <div class=\"inner\">\n                            <span style=\"color: #92929D !important\">{{ 'COMMON.EDIT' | translate }}</span>\n                            <svg name=\"edit-new\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && subscribed == false && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <svg name=\"btn-add\" size=\"35\"></svg>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && subscribed == true && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <svg name=\"btn-cross\" size=\"35\"></svg>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && isMe\" class=\"content btn\" (click)=\"doEdit()\">\n                        <svg name=\"edit-new\" size=\"25\"></svg>\n                    </div>\n                </div>\n            </div>\n            <div class=\"down\">\n                <ng-content *ngIf=\"!(responsive.lt.medium | async)\" select=\".info-header-down\"></ng-content>\n                <ng-content *ngIf=\"responsive.lt.medium | async\" select=\".info-header-down-small\"></ng-content>\n            </div>\n        </div>\n    </div>\n    <div class=\"desc\">\n        <ng-content select=\".info-header-desc\"></ng-content>\n    </div>\n    <div class=\"bar\">\n        <div *ngIf=\"!(responsive.lt.medium | async)\">\n            <ng-content *ngTemplateOutlet=\"bar\"></ng-content>\n        </div>\n        <ng-scrollbar *ngIf=\"responsive.lt.medium | async\" [track]=\"'horizontal'\" style=\"height: 64px;\">\n            <ng-content *ngTemplateOutlet=\"bar\"></ng-content>\n        </ng-scrollbar>\n    </div>\n</div>\n\n<ng-template #bar>\n    <ng-content select=\".info-header-bar\"></ng-content>\n</ng-template>\n"],"sourceRoot":"webpack:///"}