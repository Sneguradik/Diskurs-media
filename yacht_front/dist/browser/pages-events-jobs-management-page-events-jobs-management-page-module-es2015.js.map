{"version":3,"sources":["./src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page-routing.module.ts","./src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page.component.ts","./src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page.component.html","./src/app/modules/dashboard/pages/events-jobs-management-page/events-jobs-management-page.module.ts","./src/app/modules/dashboard/pages/events-jobs-management-page/components/events-jobs-management-block/events-jobs-management-block.component.ts","./src/app/modules/dashboard/pages/events-jobs-management-page/components/events-jobs-management-block/events-jobs-management-block.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACqC;;;AAE5F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wGAAiC;KAC7C;CACF,CAAC;AAMK,MAAM,qCAAqC;;sNAArC,qCAAqC;uNAArC,qCAAqC,qFAFtC,4DAAY;uNAEX,qCAAqC,YAHvC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;+KAEX,qCAAqC;kBAJjD,sDAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;iBACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAIgB;AAClC;AACJ;;;;;AAOhC,MAAM,iCAAkC,SAAQ,0FAAiB;IAItE,YACmB,qBAA4C,EAC5C,qBAA4C;QAE7D,KAAK,EAAE,CAAC;QAHS,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,0BAAqB,GAArB,qBAAqB,CAAuB;QALxD,UAAK,GAAwC,IAAI,oDAAe,CAAqB,IAAI,CAAC,CAAC;QAC3F,UAAK,GAAG,KAAK,CAAC;IAOrB,CAAC;IAED,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QACnI,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE;aACtC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC,SAAS,CAAC,CAAC,QAA4B,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAClH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;;kNA/BU,iCAAiC;8JAAjC,iCAAiC,sICb9C,0QAKA;+KDQa,iCAAiC;kBAL7C,uDAAS;mBAAC;oBACT,QAAQ,EAAE,iCAAiC;oBAC3C,WAAW,EAAE,8CAA8C;oBAC3D,SAAS,EAAE,CAAC,8CAA8C,CAAC;iBAC5D;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEsD;AACT;AAC0C;AACpE;AACZ;;AAM/C,MAAM,8BAA8B;;+MAA9B,8BAA8B;gNAA9B,8BAA8B,iBAH1B,wGAAiC,EAAE,kJAAkC,aACxE,4DAAY,EAAE,iHAAqC,EAAE,0DAAW,EAAE,mEAAe,EAAE,kEAAmB;gNAEvG,8BAA8B,YAF9B,CAAC,4DAAY,EAAE,iHAAqC,EAAE,0DAAW,EAAE,mEAAe,EAAE,kEAAmB,CAAC;+KAExG,8BAA8B;kBAJ1C,sDAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,wGAAiC,EAAE,kJAAkC,CAAC;oBACnF,OAAO,EAAE,CAAC,4DAAY,EAAE,iHAAqC,EAAE,0DAAW,EAAE,mEAAe,EAAE,kEAAmB,CAAC;iBACpH;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOuB;AAG6C;AAC5B;;;;;AAQjC,MAAM,kCAAkC;IAgB7C,YAAoB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;QAdnB,UAAK,GAAG,KAAK,CAAC;QAEJ,YAAO,GAAuB,IAAI,0DAAY,EAAQ,CAAC;QACvD,aAAQ,GAAuB,IAAI,0DAAY,EAAQ,CAAC;QAE3E,aAAQ,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9D,CAAC,CAAC;IAGH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,6DAAM,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAwB,EAAE,EAAE;YACtE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACrB,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM;gBACtC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI;gBAClC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;gBACxC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;gBACpC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM;gBACtC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI;aACnC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,UAAU,CAAC,KAAc,EAAE,KAAa,EAAE,IAAY;QAC3D,IAAI,CAAC,KAAK,CAAC,IAAI,iCAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAE,CAAC,KAAK,CAAC,kCAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,KAAE,CAAC,IAAI,CAAC,EAAE,KAAK,OAAG,CAAC;IACzG,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,iCACV,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KACxB,kBAAkB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,kBAAkB,IAC7D,CAAC;IACL,CAAC;IAEM,IAAI;QACT,IAAI,CAAC,KAAK,CAAC,IAAI,iCACV,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KACxB,SAAS,EAAE;gBACT,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;gBACtD,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;aAC3D,EACD,UAAU,EAAE;gBACV,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;gBACvD,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;aAC5D,EACD,SAAS,EAAE;gBACT,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;gBACtD,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;aAC3D,IACD,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;;mNApEU,kCAAkC;+JAAlC,kCAAkC,mNCnB/C,iqRAyKA;+KDtJa,kCAAkC;kBAN9C,uDAAS;mBAAC;oBACT,QAAQ,EAAE,kCAAkC;oBAC5C,WAAW,EAAE,+CAA+C;oBAC5D,SAAS,EAAE,CAAC,+CAA+C,CAAC;oBAC5D,eAAe,EAAE,qEAAuB,CAAC,MAAM;iBAChD;8IAEiB,KAAK;sBAApB,mDAAK;gBACU,KAAK;sBAApB,mDAAK;gBAEoB,OAAO;sBAAhC,oDAAM;gBACmB,QAAQ;sBAAjC,oDAAM","file":"pages-events-jobs-management-page-events-jobs-management-page-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EventsJobsManagementPageComponent } from './events-jobs-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsJobsManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventsJobsManagementPageRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { IEventsJobsControl } from '@api/schemas/dashboard/events-jobs-control.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-events-jobs-management-page',\n  templateUrl: './events-jobs-management-page.component.html',\n  styleUrls: ['./events-jobs-management-page.component.scss'],\n})\nexport class EventsJobsManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public data$: BehaviorSubject<IEventsJobsControl> = new BehaviorSubject<IEventsJobsControl>(null);\n  public saved = false;\n\n  constructor(\n    private readonly administrationService: AdministrationService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.getData();\n  }\n\n  public getData(): void {\n    this.administrationService.getEventsJobs$()\n        .pipe(takeUntil(this.ngOnDestroy$))\n        .subscribe((controls: IEventsJobsControl) => this.data$.next(controls));\n  }\n\n  public postData(): void {\n    this.administrationService.postEventsJobs$(this.data$.getValue()).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n      this.saved = true;\n      setTimeout(() => {\n        this.saved = false;\n      }, 5000);\n    });\n  }\n}\n","<app-events-jobs-management-block [data$]=\"data$\"\n                                  [saved]=\"saved\"\n                                  (saveReq)=\"postData()\"\n                                  (resetReq)=\"getData()\">\n</app-events-jobs-management-block>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EventsJobsManagementPageRoutingModule } from './events-jobs-management-page-routing.module';\nimport { EventsJobsManagementPageComponent } from './events-jobs-management-page.component';\nimport { EventsJobsManagementBlockComponent } from './components/events-jobs-management-block/events-jobs-management-block.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [EventsJobsManagementPageComponent, EventsJobsManagementBlockComponent],\n    imports: [CommonModule, EventsJobsManagementPageRoutingModule, FormsModule, TranslateModule, ReactiveFormsModule],\n})\nexport class EventsJobsManagementPageModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\nimport { IEventsJobsControl } from '@api/schemas/dashboard/events-jobs-control.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-events-jobs-management-block',\n  templateUrl: './events-jobs-management-block.component.html',\n  styleUrls: ['./events-jobs-management-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EventsJobsManagementBlockComponent implements OnInit {\n  @Input() public data$: BehaviorSubject<IEventsJobsControl>;\n  @Input() public saved = false;\n\n  @Output() public readonly saveReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly resetReq: EventEmitter<void> = new EventEmitter<void>();\n\n  public viewForm: FormGroup = this.fb.group({\n    firstViewEvents: ['', [Validators.required, Validators.min(0)]],\n    firstViewJobs: ['', [Validators.required, Validators.min(0)]],\n    secondViewEvents: ['', [Validators.required, Validators.min(0)]],\n    secondViewJobs: ['', [Validators.required, Validators.min(0)]],\n    thirdViewEvents: ['', [Validators.required, Validators.min(0)]],\n    thirdViewJobs: ['', [Validators.required, Validators.min(0)]]\n  });\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this._setFormValue();\n  }\n\n  private _setFormValue(): void {\n    this.data$.pipe(filter(Boolean)).subscribe((data: IEventsJobsControl) => {\n      this.viewForm.setValue({\n        firstViewEvents: data.firstView.events,\n        firstViewJobs: data.firstView.jobs,\n        secondViewEvents: data.secondView.events,\n        secondViewJobs: data.secondView.jobs,\n        thirdViewEvents: data.thirdView.events,\n        thirdViewJobs: data.thirdView.jobs\n      });\n    });\n  }\n\n  public reset(): void {\n    this.resetReq.emit();\n  }\n\n  public changeData(value: boolean, patch: string, type: string): void {\n    this.data$.next({...this.data$.getValue(), [patch]: {...this.data$.getValue()[patch], [type]: value}});\n  }\n\n  public paramsSwitcher(): void {\n    this.data$.next({\n      ...this.data$.getValue(),\n      publicationsBottom: !this.data$.getValue().publicationsBottom\n    });\n  }\n\n  public save(): void {\n    this.data$.next({\n      ...this.data$.getValue(),\n      firstView: {\n        jobs: Number(this.viewForm.get('firstViewJobs').value),\n        events: Number(this.viewForm.get('firstViewEvents').value)\n      },\n      secondView: {\n        jobs: Number(this.viewForm.get('secondViewJobs').value),\n        events: Number(this.viewForm.get('secondViewEvents').value)\n      },\n      thirdView: {\n        jobs: Number(this.viewForm.get('thirdViewJobs').value),\n        events: Number(this.viewForm.get('thirdViewEvents').value)\n      }\n    });\n    this.saveReq.emit();\n  }\n}\n","<form *ngIf=\"data$ | async\" class=\"admin-form\">\n    <fieldset class=\"admin-form__fieldset\">\n        <table class=\"admin-form__tab\">\n            <thead>\n                <tr>\n                    <th>Параметр</th>\n                    <th>{{ 'COMMON.EVENT_' | translate }}</th>\n                    <th>{{ 'COMMON.VACANCIES_' | translate }}</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><b>Где показывать</b></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>{{ 'COMMON.MY_NEWSFEED' | translate }}</td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"feedEvents\"\n                                   [ngModel]=\"(data$ | async).feed.events\"\n                                   (ngModelChange)=\"changeData($event, 'feed', 'events')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"feedJobs\"\n                                   [ngModel]=\"(data$ | async).feed.jobs\"\n                                   (ngModelChange)=\"changeData($event, 'feed', 'jobs')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'COMMON.PUBLICATIONS' | translate }}</td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsEvents\"\n                                   [ngModel]=\"(data$ | async).publications.events\"\n                                   (ngModelChange)=\"changeData($event, 'publications', 'events')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsJobs\"\n                                   [ngModel]=\"(data$ | async).publications.jobs\"\n                                   (ngModelChange)=\"changeData($event, 'publications', 'jobs')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'COMMON.POPULAR' | translate }}</td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"popularEvents\"\n                                   [ngModel]=\"(data$ | async).popular.events\"\n                                   (ngModelChange)=\"changeData($event, 'popular', 'events')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-check\">\n                            <input type=\"checkbox\"\n                                   name=\"popularJobs\"\n                                   [ngModel]=\"(data$ | async).popular.jobs\"\n                                   (ngModelChange)=\"changeData($event, 'popular', 'jobs')\">\n                            <span class=\"admin-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Под публикацией <br>[переключатель]</td>\n                    <td>\n                        <label class=\"admin-big-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsBottomEvents\"\n                                   [ngModel]=\"(data$ | async).publicationsBottom\"\n                                   (ngModelChange)=\"paramsSwitcher()\">\n                            <span class=\"admin-big-check__txt\"></span>\n                        </label>\n                    </td>\n                    <td>\n                        <label class=\"admin-big-check\">\n                            <input type=\"checkbox\"\n                                   name=\"publicationsBottomJobs\"\n                                   [ngModel]=\"!(data$ | async).publicationsBottom\"\n                                   (ngModelChange)=\"paramsSwitcher()\">\n                            <span class=\"admin-big-check__txt\"></span>\n                        </label>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </fieldset>\n    <fieldset class=\"admin-form__fieldset\" *ngIf=\"viewForm\" [formGroup]=\"viewForm\">\n        <legend class=\"admin-form__legend\">Показы в ленте <br><small>[после какой по счёту публикации сверху]</small></legend>\n        <table class=\"admin-form__tab\">\n            <tbody>\n                <tr>\n                    <td>Первый показ</td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"firstViewEvents\"\n                               formControlName=\"firstViewEvents\">\n                    </td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"firstViewJobs\"\n                               formControlName=\"firstViewJobs\">\n                    </td>\n                </tr>\n                <tr>\n                    <td>Второй показ</td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"secondViewEvents\"\n                               formControlName=\"secondViewEvents\">\n                    </td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"secondViewJobs\"\n                               formControlName=\"secondViewJobs\">\n                    </td>\n                </tr>\n                <tr>\n                    <td>Третий показ</td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"thirdViewEvents\"\n                               formControlName=\"thirdViewEvents\">\n                    </td>\n                    <td>\n                        <input type=\"number\"\n                               class=\"admin-input\"\n                               [min]=\"0\"\n                               name=\"thirdViewJobs\"\n                               formControlName=\"thirdViewJobs\">\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </fieldset>\n    <div class=\"admin-form__bar\">\n        <button class=\"btn admin-btn_white\"\n                type=\"submit\"\n                [disabled]=\"viewForm.invalid\"\n                (click)=\"save()\">{{ saved ? 'Изменения сохранены' : 'Сохранить изменения' }}</button>\n        <button class=\"btn admin-btn_blue\" (click)=\"reset()\">{{ 'COMMON.UNDO' | translate }}</button>\n    </div>\n</form>\n"],"sourceRoot":"webpack:///"}