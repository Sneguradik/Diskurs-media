{"version":3,"sources":["./src/app/modules/dashboard/pages/tags-management-page/tags-filters.interface.ts","./src/app/modules/dashboard/pages/tags-management-page/tags-management-page-routing.module.ts","./src/app/modules/dashboard/pages/tags-management-page/tags-management-page.component.ts","./src/app/modules/dashboard/pages/tags-management-page/tags-management-page.component.html","./src/app/modules/dashboard/pages/tags-management-page/tags-management-page.module.ts","./src/app/modules/dashboard/pages/tags-management-page/tags-navs.const.ts","./src/app/modules/dashboard/pages/tags-management-page/components/all-tags-block/all-tags-block.component.ts","./src/app/modules/dashboard/pages/tags-management-page/components/all-tags-block/all-tags-block.component.html","./src/app/modules/dashboard/pages/tags-management-page/components/statistic-tags-block/statistic-tags-block.component.ts","./src/app/modules/dashboard/pages/tags-management-page/components/statistic-tags-block/statistic-tags-block.component.html"],"names":[],"mappings":"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","file":"pages-tags-management-page-tags-management-page-module-es2015.js","sourcesContent":["import { TranslateService } from '@ngx-translate/core';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\n\nexport const tagsFilters = (translateService: TranslateService): ISelectItem[] => {\n    return [\n        {\n            title: 'По количеству за 30 дней',\n            id: 0,\n            payload: 'order=Frequency&after=' + (Date.now() - 1000 * 60 * 60 * 24 * 30),\n        },\n        {\n            title: 'По количеству за 90 дней',\n            id: 1,\n            payload: 'order=Frequency&after=' + (Date.now() - 1000 * 60 * 60 * 24 * 90),\n        },\n        {\n            title: translateService.instant('COMMON.FOR_THE_WHOLE_TIME'),\n            id: 2,\n            payload: 'order=Frequency',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_A_TO_Z_'),\n            id: 3,\n            payload: 'order=name&asc=true&locale=RUSSIAN',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_Z_TO_A_'),\n            id: 4,\n            payload: 'order=name&locale=RUSSIAN',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_A_TO_Z'),\n            id: 5,\n            payload: 'order=name&asc=true&locale=ENGLISH',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_Z_TO_A'),\n            id: 6,\n            payload: 'order=name&locale=ENGLISH',\n        },\n    ];\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TagsManagementPageComponent } from './tags-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TagsManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TagsManagementPageRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { DashboardConstants } from '@modules/dashboard/shared/classes/dashboard-constants.class';\nimport { PageableContent } from '@shared/classes/pageable-conetnt.class';\nimport { ITagDashboardView } from '@api/schemas/dashboard/tag-dashboard-view.interface';\nimport { ITagsStatistic } from '@api/schemas/dashboard/tags-statistics.interface';\nimport { TagsService } from '@api/routes/tags.service';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { TAGS_NAVS } from './tags-navs.const';\nimport { tagsFilters } from './tags-filters.interface';\nimport { ITotalTags } from './total-tags.interface';\nimport { takeUntil } from 'rxjs/operators';\nimport { ITabsNavItem } from '@modules/dashboard/shared/ui/dashboard-tabs/tabs-nav-item.interface';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\nimport { IRangeParams } from '@modules/dashboard/shared/ui/dashboard-range/range-params.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { IStatTags } from '@modules/dashboard/pages/tags-management-page/components/statistic-tags-block/stat-tags.interface';\n\n@Component({\n  selector: 'app-tags-management-page',\n  templateUrl: './tags-management-page.component.html',\n  styleUrls: ['./tags-management-page.component.scss'],\n})\nexport class TagsManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public readonly navs: ITabsNavItem[] = TAGS_NAVS;\n  public readonly filters: ISelectItem[] = tagsFilters(this.translateService);\n\n  public selectedNav: ITabsNavItem = this.navs[0];\n  public selectedFilter: ISelectItem = this.filters[3];\n\n  public tags$: BehaviorSubject<ITagDashboardView[]> = new BehaviorSubject<ITagDashboardView[]>([]);\n  public tagsPage = 0;\n  public allTags$: BehaviorSubject<ITotalTags> = new BehaviorSubject<ITotalTags>({\n    total: null,\n    pages: null\n  });\n\n  public stat$: BehaviorSubject<IStatTags> = new BehaviorSubject<IStatTags>(DashboardConstants.TagsStatConstant);\n  public range$: BehaviorSubject<IRangeParams> = new BehaviorSubject<IRangeParams>(DashboardConstants.RangeParamsConstant);\n\n  public contentLoading = false;\n\n  constructor(\n    private readonly tagsService: TagsService,\n    private readonly administrationService: AdministrationService,\n    private readonly translateService: TranslateService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.getTags();\n    this.getStats();\n  }\n\n  public selectNav(nav: ITabsNavItem): void {\n    this.selectedNav = nav;\n    if (nav.id === 1) {\n      this.getStats();\n    } else {\n      this.clearTags();\n      this.getTags();\n    }\n  }\n\n  public selectFilter(filter: ISelectItem): void {\n    this.selectedFilter = filter;\n  }\n\n  public refresh(filter?: ISelectItem): void {\n    if (filter) {\n      this.selectedFilter = filter;\n    }\n    this.clearTags();\n    this.getTags();\n  }\n\n  public getTags(): void {\n    const allTags = this.allTags$.getValue();\n    if ((allTags.total === null || this.tagsPage + 1 <= allTags.pages) && !this.contentLoading) {\n      this.contentLoading = true;\n      this.administrationService.getTags$(this.tagsPage, this.selectedFilter.payload)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((tags: PageableContent<ITagDashboardView> | any) => {\n        this.allTags$.next({\n          total: tags.total,\n          pages: tags.totalPages,\n        });\n        this.tags$.next([...this.tags$.getValue(), ...tags.content]);\n        this.tagsPage++;\n        this.contentLoading = false;\n      });\n    }\n  }\n\n  public clearTags(): void {\n    this.tags$.next([]);\n    this.tagsPage = 0;\n    this.getTags();\n  }\n\n  public deleteTag(id: number): void {\n    this.tagsService.delete$(id).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() =>\n      this.tags$.next(this.tags$.getValue().filter((tag: ITagDashboardView) => tag.meta.id !== id))\n    );\n  }\n\n  public getStats(): void {\n    const range = this.range$.getValue();\n    if (range.checkbox) {\n      this.administrationService.getStats$(range.before, range.after)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((res: ITagsStatistic) => this.stat$.next(res.count));\n    } else {\n      this.administrationService.getStats$()\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((res: ITagsStatistic) => {\n            this.stat$.next(res.count);\n          });\n    }\n  }\n}\n","<app-dashboard-tabs [navs]=\"navs\"\n                    [filters]=\"filters\"\n                    [activeFilter]=\"selectedFilter\"\n                    (selectedNav)=\"selectNav($event)\"\n                    (showReq)=\"refresh($event)\">\n    <app-all-tags-block *ngIf=\"selectedNav.id === 0\"\n                        [tags$]=\"tags$\"\n                        [allTags$]=\"allTags$\"\n                        (nextPageReq)=\"getTags()\"\n                        (deleteReq)=\"deleteTag($event.id)\">\n    </app-all-tags-block>\n    <app-statistic-tags-block *ngIf=\"selectedNav.id === 1\"\n                              [range$]=\"range$\"\n                              [stat$]=\"stat$\"\n                              (showReq)=\"getStats()\">\n    </app-statistic-tags-block>\n</app-dashboard-tabs>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TagsManagementPageRoutingModule } from './tags-management-page-routing.module';\nimport { TagsManagementPageComponent } from './tags-management-page.component';\n\nimport { AllTagsBlockComponent } from './components/all-tags-block/all-tags-block.component';\nimport { StatisticTagsBlockComponent } from './components/statistic-tags-block/statistic-tags-block.component';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardRangeModule } from '@modules/dashboard/shared/ui/dashboard-range/dashboard-range.module';\nimport { DashboardTabsModule } from '@modules/dashboard/shared/ui/dashboard-tabs/dashboard-tabs.module';\n\n@NgModule({\n  declarations: [TagsManagementPageComponent, AllTagsBlockComponent, StatisticTagsBlockComponent],\n  imports: [CommonModule, TagsManagementPageRoutingModule, DashboardTabsModule, FormsModule, DashboardRangeModule, TranslateModule],\n})\nexport class TagsManagementPageModule {}\n","import { ITabsNavItem } from '@modules/dashboard/shared/ui/dashboard-tabs/tabs-nav-item.interface';\n\n\nexport const TAGS_NAVS: ITabsNavItem[] = [\n    {\n        title: 'Теги',\n        id: 0,\n        filters: true,\n    },\n    {\n        title: 'Статистика',\n        id: 1,\n        filters: false,\n    },\n];\n","import { Component, Input, Output, EventEmitter, HostListener, ChangeDetectionStrategy } from '@angular/core';\nimport { ITagDashboardView } from '@api/schemas/dashboard/tag-dashboard-view.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { ITotalTags } from '@modules/dashboard/pages/tags-management-page/total-tags.interface';\nimport { IDeletionTagInterface } from '@api/schemas/dashboard/deletion-tag.interface';\n\n@Component({\n  selector: 'app-all-tags-block',\n  templateUrl: './all-tags-block.component.html',\n  styleUrls: ['./all-tags-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AllTagsBlockComponent {\n  @Input() public tags$: BehaviorSubject<ITagDashboardView[]>;\n  @Input() public allTags$: BehaviorSubject<ITotalTags>;\n\n  @Output() private readonly nextPageReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private readonly deleteReq: EventEmitter<IDeletionTagInterface> = new EventEmitter<IDeletionTagInterface>();\n\n  constructor() {}\n\n  @HostListener('window:scroll', [])  public onScroll(): void {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      this.loadNextPage();\n    }\n  }\n\n  public loadNextPage(): void {\n    this.nextPageReq.emit();\n  }\n\n  public delete(item: ITagDashboardView): void {\n    this.deleteReq.emit({ id: item.meta.id });\n  }\n}\n","<form class=\"admin-form\">\n    <label class=\"admin-input-row\">\n        <span class=\"admin-input-row__title\">Общее количество</span>\n        <span class=\"admin-input-row__inputgroup\">\n            <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" [value]=\"(allTags$ | async).total\">\n        </span>\n    </label>\n    <fieldset class=\"admin-form__fieldset\">\n        <table class=\"admin-form__tab\">\n            <thead>\n                <tr>\n                    <th>Тег</th>\n                    <th>Частота</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let tag of (tags$ | async)\">\n                    <td>{{ '# ' + tag.content }}</td>\n                    <td>\n                        <input type=\"text\" class=\"admin-input admin-input_short admin-input-row__input\" disabled=\"true\" [value]=\"tag.frequency\">\n                    </td>\n                    <td>\n                        <button class=\"btn admin-form__del\" (click)=\"delete(tag)\">\n                            <svg id=\"btn-cross\" viewBox=\"0 0 26 26\" width=\"24px\" height=\"24px\">\n                                <path d=\"M1.5 13C1.5 6.64873 6.64873 1.5 13 1.5C19.3513 1.5 24.5 6.64873 24.5 13C24.5 19.3513 19.3513 24.5 13 24.5C6.64873 24.5 1.5 19.3513 1.5 13Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.0015 11.9898L16.5371 8.45431C16.816 8.17537 17.2683 8.17537 17.5472 8.45431C17.8262 8.73326 17.8262 9.18552 17.5472 9.46447L14.0117 13L17.5472 16.5355C17.8262 16.8145 17.8262 17.2667 17.5472 17.5457C17.2683 17.8246 16.816 17.8246 16.5371 17.5457L13.0015 14.0102L9.466 17.5457C9.18705 17.8246 8.73479 17.8246 8.45584 17.5457C8.1769 17.2667 8.1769 16.8145 8.45584 16.5355L11.9914 13L8.45584 9.46447C8.1769 9.18552 8.1769 8.73326 8.45584 8.45431C8.73479 8.17537 9.18705 8.17537 9.466 8.45431L13.0015 11.9898Z\" fill=\"#00B7FF\"></path>\n                            </svg>\n                        </button>\n                    </td>\n                </tr>                   \n            </tbody>\n        </table>\n    </fieldset>\n</form>\n","import { Component, Input, Output, EventEmitter, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { DashboardConstants } from '@modules/dashboard/shared/classes/dashboard-constants.class';\nimport { IStatTags } from './stat-tags.interface';\nimport { IRangeParams } from '@modules/dashboard/shared/ui/dashboard-range/range-params.interface';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-statistic-tags-block',\n  templateUrl: './statistic-tags-block.component.html',\n  styleUrls: ['./statistic-tags-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StatisticTagsBlockComponent implements OnDestroy {\n  @Input() public stat$: BehaviorSubject<IStatTags>;\n  @Input() public range$: BehaviorSubject<IRangeParams>;\n\n  @Output() public readonly showReq: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor() {}\n\n  ngOnDestroy(): void {\n    this.range$.next(DashboardConstants.RangeParamsConstant);\n  }\n\n  public show(): void {\n    this.showReq.emit();\n  }\n}\n","<form class=\"admin-form\">\n    <app-dashboard-range [params$]=\"range$\"></app-dashboard-range>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Всего тегов</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_short admin-input-row__input\" disabled=\"true\" [value]=\"(stat$ | async).all\">\n            </span>\n        </label>\n      <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Новых</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_short admin-input-row__input\" disabled=\"true\" [value]=\"(stat$ | async).new\">\n            </span>\n      </label>\n    </fieldset>\n    <div class=\"admin-input-row\">\n        <button class=\"btn admin-btn_white admin-btn_m\" (click)=\"show()\">Показать</button>\n    </div>\n</form>\n"],"sourceRoot":"webpack:///"}