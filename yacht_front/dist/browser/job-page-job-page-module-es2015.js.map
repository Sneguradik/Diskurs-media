{"version":3,"sources":["./src/app/modules/jobs/job-page/job-page-unwrap.component.ts","./src/app/modules/jobs/job-page/app-job-page-unwrap.html","./src/app/shared/utils/money-format.ts","./src/app/modules/jobs/job-page/job-page.module.ts","./src/app/modules/jobs/job-page/job-page-routing.module.ts","./src/app/shared/modules/user-info/user-info.component.ts","./src/app/shared/modules/user-info/user-info.component.html","./src/app/shared/utils/not-found.operator.ts","./src/app/shared/services/jobs-resolver.service.ts","./src/app/modules/jobs/job-page/job-page.component.ts","./src/app/modules/jobs/job-page/job-page.component.html","./src/app/api/schemas/job/job-currency.enum.ts","./src/app/shared/modules/user-info/user-info.module.ts"],"names":[],"mappings":"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","file":"job-page-job-page-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CompaniesService } from '@api/routes/companies.service';\nimport { ICompanyViewFull } from '@api/schemas/company/company-view-full.interface';\nimport { IJobViewFull } from '@api/schemas/job/job-view-full.interface';\nimport { SessionService } from '@app/services/session.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { Observable } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { JobsService } from '@api/routes/jobs.service';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { DynamicMetaTagsService } from '@layout/dynamic-meta-tags/dynamic-meta-tags.service';\nimport { environment } from '@env';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-job-page-unwrap',\n  templateUrl: 'app-job-page-unwrap.html',\n  styleUrls: ['./app-job-page-unwrap.scss'],\n  host: { style: 'width: 100%' }\n})\nexport class JobPageUnwrapComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public job: IJobViewFull;\n  public own$: Observable<boolean>;\n  public company$: Observable<ICompanyViewFull>;\n\n  constructor(\n    private readonly jobsService: JobsService,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly sessionService: SessionService,\n    private readonly companyService: CompaniesService,\n    private readonly dynamicMetaTagsService: DynamicMetaTagsService,\n    private readonly router: Router,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n    this.job = this.activatedRoute.snapshot.data.data;\n    this.setPreInfo();\n    this.company$ = this.companyService.getSingle$(this.job.company.meta.id);\n    this.own$ = this.sessionService.user$.pipe(\n      map((user: IUserViewFull) => user && this.job.company.meta.id === user.meta.id)\n    );\n    this.jobsService.view$(this.job.meta.id).pipe(takeUntil(this.ngOnDestroy$)).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.dynamicMetaTagsService.setToDefault();\n    super.ngOnDestroy();\n  }\n\n  private setPreInfo(): void {\n    this.dynamicMetaTagsService.metaInfo$.next({\n      title: this.job.info.name,\n      tags: [\n        { property: 'og:title', content: this.job.info.name },\n        {\n          name: 'description',\n          content: this.job.body.requirements\n            ? this.job.body.requirements\n            : 'Вакансия на Diskurs.Media'\n        },\n        {\n          property: 'og:description',\n          content: this.job.body.requirements\n            ? this.job.body.requirements\n            : 'Вакансия на Diskurs.Media'\n        },\n        { property: 'og:url', content: environment.url + this.router.url },\n        { property: 'og:image', content: this.job.body.image },\n        { property: 'og:type', content: 'website' },\n        { property: 'og:site_name', content: 'Diskurs.Media' },\n        { name: 'twitter:card', content: 'summary' },\n        { name: 'twitter:title', content: this.job.info.name },\n        {\n          name: 'twitter:description',\n          content: this.job.body.requirements\n            ? this.job.body.requirements\n            : 'Вакансия на Diskurs.Media'\n        },\n        { name: 'twitter:image', content: this.job.body.image }\n      ]\n    });\n  }\n}\n","<app-job-page \n    [job]=\"job\" \n    [own]=\"own$ | async\" \n    [company]=\"company$ | async\">\n</app-job-page>","export function formatMoney(amount: number, currency: 'RUB' | 'EUR' | 'USD' | string): string {\n  switch (currency) {\n    case 'EUR':\n      return `€${ amount }`;\n    case 'USD':\n      return `$${ amount }`;\n    case 'RUB':\n      return `${ amount } ₽`;\n    default:\n      return `${ amount } ${ currency }`;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { JobPageComponent } from './job-page.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { JobPageRoutingModule } from './job-page-routing.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { JobPageUnwrapComponent } from './job-page-unwrap.component';\nimport { UserInfoModule } from '@shared/modules/user-info/user-info.module';\n\n@NgModule({\n  declarations: [\n    JobPageUnwrapComponent,\n    JobPageComponent\n  ],\n  imports: [\n    CommonModule,\n    JobPageRoutingModule,\n    SharedComponentsModule,\n    UserInfoModule,\n    SharedUiModule,\n    CommonDirectivesModule,\n    SharedPipesModule,\n    TranslateModule.forChild(),\n  ],\n  exports: [\n    JobPageUnwrapComponent\n  ],\n})\nexport class JobPageModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { JobPageUnwrapComponent } from './job-page-unwrap.component';\nimport { JobsResolverService } from '@shared/services/jobs-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobPageUnwrapComponent,\n    resolve: { data: JobsResolverService }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class JobPageRoutingModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IUserViewBase } from '@api/schemas/user/user-view-base.interface';\n\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserInfoComponent {\n  @Input() public user: IUserViewBase;\n}\n","<div class=\"v-center\">\n    <a [routerLink]=\"user ? (user | accountUrl) : ''\" class=\"v-center\">\n        <app-ui-icon class=\"margin-right-10\" [src]=\"user?.info.picture\" [textAlternative]=\"user ? (user.info | personName) : ''\"></app-ui-icon>\n        <span class=\"subtitle-1\">{{ user ? (user.info | personName) : '' }}</span>\n    </a>\n</div>\n","import { OperatorFunction, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nexport function notFound(router: Router): OperatorFunction<any, any> {\n    return catchError((error: HttpErrorResponse) => {\n        if (error.status === 404 || error.status === 422) {\n            router.navigateByUrl('/404');\n        }\n        return throwError(error);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { IJobViewFull } from '@api/schemas/job/job-view-full.interface';\nimport { JobsService } from '@api/routes/jobs.service';\nimport { Observable } from 'rxjs';\nimport { notFound } from '@shared/utils/not-found.operator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsResolverService implements Resolve<IJobViewFull> {\n  constructor(\n    private readonly jobsService: JobsService,\n    private readonly router: Router\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IJobViewFull> {\n    return this.jobsService.getSingle$(+route.params.id).pipe(notFound(this.router));\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ICompanyViewFull } from '@api/schemas/company/company-view-full.interface';\nimport { IJobViewFull } from '@api/schemas/job/job-view-full.interface';\nimport { SessionService } from '@app/services/session.service';\nimport { UserDropdownService } from '@layout/shared/services/user-dropdown.service';\nimport { formatMoney } from '@shared/utils/money-format';\nimport { JobsService } from '@api/routes/jobs.service';\nimport { JobCurrencyEnum } from '@api/schemas/job/job-currency.enum';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { PublicationStageEnum } from '@api/schemas/article/publication-stage.enum';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n\n@Component({\n  selector: 'app-job-page',\n  templateUrl: './job-page.component.html',\n  styleUrls: ['./job-page.component.scss'],\n})\nexport class JobPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  @Input() public job: IJobViewFull;\n  @Input() public company: ICompanyViewFull;\n  @Input() public own: boolean;\n\n  public readonly publicationStageEnum: typeof PublicationStageEnum = PublicationStageEnum;\n\n  public contactsRevealed = false;\n\n  public share: boolean;\n  public shareBody: string;\n  public linkVk: string;\n  public linkFb: string;\n  public linkTw: string;\n  public linkIn: string;\n  public linkTg: string;\n\n  public get salary(): string {\n    const result = [];\n    if (this.job.info.minSalary) {\n      result.push(this.translateService.instant('COMMON.FROM'),\n        formatMoney(+this.job.info.minSalary, JobCurrencyEnum[this.job.info.currency]));\n    }\n    if (this.job.info.maxSalary) {\n      result.push(this.translateService.instant('COMMON.TO'),\n        formatMoney(+this.job.info.maxSalary, JobCurrencyEnum[this.job.info.currency]));\n    }\n\n    return result.join(' ');\n  }\n\n  constructor(\n    protected readonly translateService: TranslateService,\n    private readonly jobsService: JobsService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly sessionService: SessionService,\n    private readonly sidebarWrapperService: SidebarWrapperService,\n    public readonly router: Router,\n    public readonly userDropdown: UserDropdownService,\n  ) { super(); }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    this.shareBody = 'https://ru.yachtsmanjournal.com' + this.router.url;\n    this.linkVk = 'https://vk.com/share.php?url=' + this.shareBody;\n    this.linkFb = 'https://www.facebook.com/sharer/sharer.php?u=' + this.shareBody;\n    this.linkTw = 'https://twitter.com/intent/tweet?url=' + this.shareBody;\n    this.linkIn = 'https://vk.com/share.php?url=' + this.shareBody;\n    this.linkTg = 'tg://msg_url?url=' + this.shareBody;\n  }\n\n  public goTo(url: string): void {\n    window.open(url, '_blank');\n  }\n\n  public toggleShare(): void {\n    this.share = !this.share;\n  }\n\n  public bookmark(): void {\n    if (this.sessionService.loggedIn$.value) {\n      this.jobsService.bookmark$(this.job.meta.id, this.job.bookmarks.you).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n        this.job.bookmarks.you = !this.job.bookmarks.you;\n        this.job.bookmarks.count += this.job.bookmarks.you ? 1 : -1;\n        this.changeDetectorRef.markForCheck();\n      });\n    } else {\n      this.userDropdown.setShowDropdown(true);\n    }\n  }\n}\n","<app-ui-card [shadow]='false'>\n  <header class=\"margin-bottom-20\">\n    <section class=\"v-center mobile-small\">\n      <app-user-info class=\"margin-right-20\" [user]=\"company\"></app-user-info>\n      <span *ngIf=\"job.info.publicationStage !== publicationStageEnum.PUBLISHED\" class=\"overline c-caption\">Не опубликовано</span>\n      <div class=\"v-center align-right\">\n        <span class=\"caption fade-3 margin-right-8\">{{ job.info.publishedAt | customDate }}</span>\n        <svg name=\"bookmark\" class=\"f-gray icon clickable margin-right-8\" \n          [class.active]=\"job.bookmarks.you\" (click)=\"bookmark()\"></svg>\n        <app-share class=\"margin-right-10\" [url]=\"null | url\"></app-share>\n        <app-action-menu-job *appLoggedIn [data]=\"job\" [own]=\"own\" (gone)=\"this.router.navigate(['/jobs'])\">\n        </app-action-menu-job>\n      </div>\n    </section>\n  </header>\n  <article class=\"margin-bottom-30\">\n    <section class=\"margin-bottom-20\">\n      <h2 class=\"margin-bottom-30\">{{ job.info.name }}</h2>\n      <div class=\"fade-1 v-center space-between items-h6\">\n        <h6 class=\"item-h6\" >{{ salary ? salary : ('COMMON.INTERVIEW_SALARY' | translate) }}</h6>\n        <h6 class=\"item-h6\">{{ job.info.type === 'FULL' ? ('COMMON.FULL_TIME' | translate) : ('COMMON.PART_TIME' | translate) }}</h6>\n        <h6 class=\"item-h6\">{{ job.info.place === 'OFFICE' ? ('COMMON.TO_OFFICE' | translate) : ('COMMON.REMOTE_' | translate) }}</h6>\n        <h6 class=\"item-h6\" *ngIf=\"job.info.city\">{{ job.info.city | trunk:14 }}</h6>\n      </div>\n    </section>\n    <hr class=\"blue-line margin-bottom-30\">\n    <section class=\"margin-bottom-30\">\n      <section class=\"margin-bottom-30\">\n        <h3 class=\"fade-1 margin-bottom-10\">{{ 'COMMON.TASKS' | translate }}</h3>\n        <div [innerText]=\"job.body.tasks\"></div>\n      </section>\n      <hr class=\"blue-line margin-bottom-30\">\n      <section class=\"margin-bottom-30\">\n        <h3 class=\"fade-1 margin-bottom-10\">{{ 'COMMON.JOB_CONDITIONS' | translate }}</h3>\n        <div [innerText]=\"job.body.workConditions\"></div>\n      </section>\n      <hr class=\"blue-line margin-bottom-30\">\n      <section>\n        <h3 class=\"fade-1 margin-bottom-10\">{{ 'COMMON.REQUIREMENTS' | translate }}</h3>\n        <div [innerText]=\"job.body.requirements\"></div>\n      </section>\n    </section>\n    <hr class=\"blue-line margin-bottom-30\">\n    <section class=\"contact\">\n      <div>\n        <ng-container *ngIf=\"!contactsRevealed\">\n          <button class=\"primary-icon-button\" (click)=\"contactsRevealed = true\">\n            <span class=\"button-1\">{{ 'COMMON.SEND_THE_RESUME' | translate }}</span>\n            <svg name=\"mail\"></svg>\n          </button>\n        </ng-container>\n        <ng-container *ngIf=\"contactsRevealed\">\n          <div>\n            <h3 class=\"c-primary\">{{ 'COMMON.CONTACTS' | translate }}</h3>\n            <div class=\"contact-card margin-bottom-20\">\n              <span class=\"subtitle-1 fade-1\">{{ 'COMMON.CONTACT_PERSON' | translate }}</span>\n              <div class=\"font-1\">\n                {{ job.info.recruiterName }}\n                <svg class=\"f-gray\" name=\"user\"></svg>\n              </div>\n            </div>\n            <div class=\"contact-card\">\n              <span class=\"subtitle-1 fade-1\">Почта для соискателей</span>\n              <div class=\"font-1\">\n                {{ job.info.email }}\n                <svg class=\"f-gray\" name=\"mail\"></svg>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div>\n        <img *ngIf=\"job.body.image\" [src]=\"job.body.image\" [alt]=\"job.info.name\">\n      </div>\n    </section>\n  </article>\n  <footer>\n    <section class=\"v-center margin-bottom-20\">\n      <div class=\"c-gray v-center margin-right-20 clickable\" [class.c-primary]=\"job.bookmarks.you\" (click)=\"bookmark()\">\n        <svg name=\"bookmark\" class=\"margin-right-4 icon f-gray\"\n          [class.active]=\"job.bookmarks && job.bookmarks.you\"></svg>\n        <span class=\"subtitle-2\">{{ job.bookmarks.count }}</span>\n      </div>\n      <div class=\"v-center margin-right-20\">\n        <svg name=\"view\" class=\"margin-right-4 icon f-gray\"></svg>\n        <span class=\"subtitle-2 c-gray\">{{ job.views.count }}</span>\n      </div>\n      <app-share [url]=\"null | url\" style=\"width: 100%;\" [wide]=\"true\"></app-share>\n      <!--<app-contact-compact-list class=\"align-right\" [contacts]=\"company.contacts\"></app-contact-compact-list>-->\n    </section>\n    <hr class=\"blue-line\">\n  </footer>\n</app-ui-card>\n","export enum JobCurrencyEnum {\n    RUB = 'RUB',\n    USD = 'USD',\n    EUR = 'EUR',\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { UserInfoComponent } from './user-info.component';\n\n\n\n@NgModule({\n  declarations: [UserInfoComponent],\n  imports: [CommonModule, SharedPipesModule, RouterModule, SharedUiModule],\n  exports: [UserInfoComponent],\n})\nexport class UserInfoModule {}\n"],"sourceRoot":"webpack:///"}