{"version":3,"sources":["webpack:///src/app/modules/user/pages/user-posts-page/user-posts-page-range.const.ts","webpack:///src/app/shared/functions/fetch-articles-with-topics.function.ts","webpack:///src/app/shared/classes/pageable-conetnt.class.ts","webpack:///src/app/shared/classes/abstract-user-posts.class.ts"],"names":["getUserPostsRanges","translateService","id","text","instant","query","order","RATING","Date","now","TIME","TITLE","locale","RUSSIAN","asc","ENGLISH","fetchArticlesWithTopics$","page","topicsService","topics","content","forEach","article","length","push","getMultiple$","pipe","topicsRet","find","x","meta","NO_CONTENT","Symbol","PageableContent","fetchNextFn$","options","isFetching$","content$","end$","totalPages","fetchCommand$","options$","_","subscribe","fetchNextPage","fetch","next","reset$","hard","it","splice","setOptionsWithReset$","value","response","error","AbstractUserPosts","activatedRoute","sessionService","feedService","usersService","pageable","fetchContent$","bind","ranges","articles","pinned","drafts","activeRange","selectedRange","ngOnInit","ngOnDestroy$","indexOf","id$","paramMap","getSingle$","user","data","user$","result","stage","bookmark","bookmarked","feedRequest$","author","rangeEvent","range","remove","template"],"mappings":"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","file":"default~pages-user-drafts-page-user-drafts-page-module~pages-user-posts-page-user-posts-page-module-es5.js","sourcesContent":["import { FeedOrderEnum } from '@api/schemas/feed/feed-order.enum';\nimport { IFeedParams } from '@api/schemas/feed/feed-params.interface';\nimport { IToggleItem } from '@shared/interfaces/toggle-item.interface';\nimport { LocaleEnum } from '@api/schemas/locale/locale.enum';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport function getUserPostsRanges(translateService: TranslateService): IToggleItem<never, IFeedParams>[] {\n  return [\n    {\n      id: 10,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_DAY'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24,\n      },\n    },\n    {\n      id: 6,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_3_DAYS'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 3,\n      },\n    },\n    {\n      id: 7,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_WEEK'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 7,\n      },\n    },\n    {\n      id: 8,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_MONTH'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 30,\n      },\n    },\n    {\n      id: 9,\n      text: translateService.instant('COMMON.SORT_BY_POPULARITY_YEAR'),\n      query: {\n        order: FeedOrderEnum.RATING,\n        'rating-after': Date.now() - 1000 * 60 * 60 * 24 * 30 * 12,\n      },\n    },\n    {\n      id: 1,\n      text: translateService.instant('COMMON.THE_NEWEST_FIRST'),\n      query: { order: FeedOrderEnum.TIME },\n    },\n    {\n      id: 2,\n      text: translateService.instant('COMMON.FROM_A_TO_Z_'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.RUSSIAN, asc: true },\n    },\n    {\n      id: 3,\n      text: translateService.instant('COMMON.FROM_Z_TO_A_'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.RUSSIAN },\n    },\n    {\n      id: 4,\n      text: translateService.instant('COMMON.FROM_A_TO_Z'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.ENGLISH, asc: true },\n    },\n    {\n      id: 5,\n      text: translateService.instant('COMMON.FROM_Z_TO_A'),\n      query: { order: FeedOrderEnum.TITLE, locale: LocaleEnum.ENGLISH },\n    },\n  ];\n}\n","import { Observable, of } from 'rxjs';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { ITopicViewFull } from '@api/schemas/topic/topic-view-full.interface';\nimport { map, defaultIfEmpty } from 'rxjs/operators';\nimport { TopicsService } from '@api/routes/topics.service';\n\nexport function fetchArticlesWithTopics$(\n  page: IPageResponse<IArticleView>,\n  topicsService: TopicsService\n): Observable<IPageResponse<[IArticleView, ITopicView]>> {\n    const topics: number[] = [];\n    page.content.forEach((article: IArticleView) => {\n        if (article.topics.length > 0) {\n            topics.push(article.topics[0]);\n        }\n    });\n    return page.content.length > 0 ? topicsService.getMultiple$(topics).pipe(defaultIfEmpty([]), map((topicsRet: ITopicViewFull[]) => {\n        const content: [IArticleView, ITopicView][] = [];\n        page.content.forEach((article: IArticleView) => {\n            if (article.topics.length > 0) {\n                content.push([article, topicsRet.find((x: ITopicViewFull) => x.meta.id === article.topics[0]) as ITopicView]);\n            } else {\n                content.push([article, null]);\n            }\n        });\n        return { ...page, content };\n    })) : of({ ...page, content: [] });\n}\n","import { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { debounce, filter, first, tap, mapTo } from 'rxjs/operators';\n\nexport const NO_CONTENT = Symbol('NO_CONTENT');\n\nexport class PageableContent<T, O = any> {\n  public readonly isFetching$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public readonly content$: Subject<T[]> = new Subject<T[]>();\n  public readonly options$: BehaviorSubject<O>;\n  public readonly end$ = new Subject();\n\n  public content: T[] = [];\n  public page = -1;\n  public totalPages = 1;\n\n  private readonly fetchCommand$: Subject<never> = new Subject<never>();\n\n  constructor(\n    private readonly fetchNextFn$: (page: number, options: O) => Observable<IPageResponse<T>>,\n    options: O = null\n  ) {\n    this.options$ = new BehaviorSubject<O>(options);\n    this.fetchCommand$.pipe(debounce(() => this.isFetching$.pipe(filter((_: boolean) => !_)))).subscribe(() => this.fetchNextPage());\n  }\n\n  public fetch(): void {\n    if (this.page < this.totalPages - 1) {\n      this.fetchCommand$.next();\n    }\n  }\n\n  public reset$(hard: boolean = true): Observable<any> {\n    return this.isFetching$.pipe(\n      filter((it: boolean) => !it),\n      first(),\n      tap(() => {\n        if (hard) {\n          this.content.splice(0, this.content.length);\n        }\n        this.page = -1;\n        this.totalPages = 1;\n      }),\n    );\n  }\n\n  public setOptionsWithReset$(options: O, hard: boolean = true): Observable<O> {\n    return this.reset$(hard).pipe(\n      tap(() => {\n        this.options$.next(options);\n        this.fetch();\n      }),\n      mapTo(options),\n    );\n  }\n\n  private fetchNextPage(): void {\n    this.isFetching$.next(true);\n    this.fetchNextFn$(this.page + 1, this.options$.value).subscribe(\n      (response: IPageResponse<T>) => {\n        this.page = response.page;\n        this.totalPages = response.totalPages;\n        this.content$.next(response.content);\n        if (this.page >= this.totalPages - 1) {\n          this.end$.next();\n        }\n        this.content.push(...response.content);\n        this.isFetching$.next(false);\n      },\n      (error: any) => {\n        this.isFetching$.next(false);\n        if (error !== Symbol('NO_CONTENT')) {\n          throw error;\n        }\n      },\n    );\n  }\n}\n","import { AbstractComponent } from './abstract-component.class';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { IToggleItem } from '@shared/interfaces/toggle-item.interface';\nimport { IFeedParams } from '@api/schemas/feed/feed-params.interface';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from '@app/services/session.service';\nimport { FeedService } from '@api/routes/feed.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { takeUntil, map, switchMap } from 'rxjs/operators';\nimport { UsersService } from '@api/routes/users.service';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { fetchArticlesWithTopics$ } from '@shared/functions/fetch-articles-with-topics.function';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { getUserPostsRanges } from '@modules/user/pages/user-posts-page/user-posts-page-range.const';\nimport { Component, OnInit } from '@angular/core';\nimport { PageableContent } from './pageable-conetnt.class';\nimport { idMap } from '@shared/utils/id-map.operator';\n\ninterface IUserPostListRouteData {\n    query: IFeedParams;\n}\n\ntype PageableOptions = [IUserPostListRouteData, IUserViewFull, number];\n\n@Component({\n    template: ''\n})\n// tslint:disable-next-line:component-class-suffix\nexport class AbstractUserPosts extends AbstractComponent implements OnInit {\n    public readonly pageable: PageableContent<[IArticleView, ITopicView], PageableOptions> =\n      new PageableContent<[IArticleView, ITopicView], PageableOptions>(this.fetchContent$.bind(this), null);\n    public readonly ranges: IToggleItem<never, IFeedParams>[] = getUserPostsRanges(this.translateService);\n\n    public articles: [IArticleView, ITopicView][] = [];\n    public pinned: [IArticleView, ITopicView] = null;\n    public drafts = false;\n\n    public activeRange = 1;\n    public selectedRange: IToggleItem = this.ranges[5];\n\n    constructor(\n        protected readonly activatedRoute: ActivatedRoute,\n        protected readonly sessionService: SessionService,\n        protected readonly feedService: FeedService,\n        protected readonly translateService: TranslateService,\n        protected readonly usersService: UsersService,\n        protected readonly topicsService: TopicsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.pageable.content$.pipe(takeUntil(this.ngOnDestroy$)).subscribe((content: [IArticleView, ITopicView][]) => {\n            if (content && content[0] && content[0][0].pinned) {\n                this.pinned = content[0];\n                content.splice(content.indexOf(content[0]), 1);\n            }\n            this.articles.push(...content);\n        });\n\n        const id$: Observable<number> = this.activatedRoute.paramMap.pipe(\n            idMap(),\n            switchMap((id: string | number) => this.usersService.getSingle$(id)),\n            map((user: IUserViewFull) => user.meta.id),\n            takeUntil(this.ngOnDestroy$),\n        );\n\n        combineLatest([this.activatedRoute.data as Observable<IUserPostListRouteData>, this.sessionService.user$, id$]).pipe(\n            takeUntil(this.ngOnDestroy$)\n        ).subscribe((options: [IUserPostListRouteData, IUserViewFull, number]) => {\n            this.articles.splice(0, this.articles.length);\n            this.pageable.options$.next(options);\n            this.pageable.fetch();\n        });\n    }\n\n    private fetchContent$(page: number, options: PageableOptions): Observable<IPageResponse<[IArticleView, ITopicView]>> {\n        const query: {} = this.selectedRange ? this.selectedRange.query : { query: null };\n        let result: Observable<IPageResponse<[IArticleView, ITopicView]>>;\n        if (options !== null) {\n            if (options[0].query.stage && options[0].query.stage[0] === 'DRAFT') {\n                this.drafts = true;\n            }\n            if (options[0].query.bookmark) {\n                options[0].query.bookmarked = options[2];\n                result = this.feedService.feedRequest$({ ...options[0].query, ...query, page }).pipe(\n                    switchMap((_: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(_, this.topicsService))\n                );\n            } else {\n                result = this.feedService.feedRequest$({ ...options[0].query, author: options[2], pinned: true, ...query, page }).pipe(\n                    switchMap((_: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(_, this.topicsService))\n                );\n            }\n        } else {\n            result = this.feedService.feedRequest$({ ...query, page }).pipe(\n                switchMap((_: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(_, this.topicsService))\n            );\n        }\n        return result;\n    }\n\n    public rangeEvent(range: IToggleItem): void {\n        this.selectedRange = range;\n        this.activeRange = range.id;\n        this.articles = [];\n        this.pageable.page = -1;\n    }\n\n    public remove(article: [IArticleView, ITopicView]): void {\n        this.articles.splice(this.articles.indexOf(article), 1);\n    }\n}\n"]}