{"version":3,"sources":["webpack:///src/app/modules/content-overview/pages/tag-list-page/tag-list-page.component.ts","webpack:///src/app/modules/content-overview/pages/tag-list-page/tag-list-page.component.html","webpack:///src/app/shared/classes/pageable-conetnt.class.ts","webpack:///src/app/modules/content-overview/pages/tag-list-page/tag-list-page-routing.module.ts","webpack:///src/app/modules/content-overview/pages/tag-list-page/tag-list-page.module.ts"],"names":["TagListPageComponent","tagsService","sessionService","sidebarWrapperService","searchQuery$","recent","page","fetch$","seen","popular","order","POST_COUNT","found","query","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","fetch","setQueries","hasSearchQuery$","pipe","_","ngOnDestroy$","user$","user","setOptionsWithReset$","subscribe","reset$","get$","handleSearch","selector","templateUrl","styleUrls","NO_CONTENT","Symbol","PageableContent","fetchNextFn$","options","isFetching$","content$","end$","content","totalPages","fetchCommand$","options$","fetchNextPage","hard","it","splice","length","value","response","push","error","routes","path","component","TagListPageRoutingModule","forChild","imports","exports","TagListPageModule","declarations"],"mappings":"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","file":"pages-tag-list-page-tag-list-page-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { Subject, Observable } from 'rxjs';\nimport { PageableContent } from '@shared/classes/pageable-conetnt.class';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { ITagView } from '@api/schemas/tags/tag-view.interface';\nimport { TagOrderEnum } from '@api/schemas/tags/tag-order.enum';\nimport { SessionService } from '@app/services/session.service';\nimport { TagsService } from '@api/routes/tags.service';\nimport { ITagQuery } from '@api/schemas/tags/tag-query.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { takeUntil, startWith, map, filter, debounceTime, switchMap } from 'rxjs/operators';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-tag-list-page',\n  templateUrl: './tag-list-page.component.html',\n  styleUrls: ['./tag-list-page.component.scss']\n})\nexport class TagListPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public readonly searchQuery$: Subject<string> = new Subject<string>();\n  public readonly recent: PageableContent<ITagView, IUserViewFull> =\n    new PageableContent<ITagView, IUserViewFull>((page: number) => this.fetch$(page, { seen: true }));\n  public readonly popular: PageableContent<ITagView> =\n    new PageableContent<ITagView>((page: number) => this.fetch$(page, { order: TagOrderEnum.POST_COUNT }));\n  public readonly found: PageableContent<ITagView, string> =\n    new PageableContent<ITagView, string>((page: number, query: string) => this.fetch$(page, { query }));\n\n  public hasSearchQuery$: Observable<boolean>;\n\n  constructor(\n    private readonly tagsService: TagsService,\n    private readonly sessionService: SessionService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    this.popular.fetch();\n    this.setQueries();\n  }\n\n  private setQueries(): void {\n    this.hasSearchQuery$ = this.searchQuery$.pipe(\n      startWith(false),\n      map((_: string | boolean) => !!_),\n      takeUntil(this.ngOnDestroy$),\n    );\n    this.sessionService.user$.pipe(\n      filter((_: IUserViewFull) => !!_),\n      switchMap((user: IUserViewFull) => this.recent.setOptionsWithReset$(user)),\n      takeUntil(this.ngOnDestroy$),\n    ).subscribe();\n    this.searchQuery$.pipe(\n      debounceTime(750),\n      filter((_: string) => !!_),\n      switchMap((query: string) => this.found.setOptionsWithReset$(query)),\n      takeUntil(this.ngOnDestroy$),\n    ).subscribe();\n    this.searchQuery$.pipe(\n      filter((_: string) => !_),\n      switchMap(() => this.found.reset$()),\n      takeUntil(this.ngOnDestroy$),\n    ).subscribe();\n  }\n\n  public fetch$(page: number, query: ITagQuery): Observable<IPageResponse<ITagView>> {\n    return this.tagsService.get$(page, query).pipe(takeUntil(this.ngOnDestroy$));\n  }\n\n  public handleSearch(query: string): void {\n    this.searchQuery$.next(query);\n  }\n}\n","<app-navbar class=\"margin-bottom-44\" activeItem=\"# Теги\" [searchPlaceholder]=\"'COMMON.SEARCH_BY_TAGS' | translate\" (search)=\"handleSearch($event)\"></app-navbar>\n<ul class=\"block-card tag-list\">\n    <ng-container [ngSwitch]=\"hasSearchQuery$ | async\">\n        <ng-container *ngSwitchCase=\"true\">\n            <h2>Результаты поиска</h2>\n            <ul class=\"tags\">\n                <li *ngFor=\"let tag of found.content\">\n                    <a [routerLink]=\"['/tags', tag.meta.id]\"># {{ tag.content }}</a>\n                </li>\n            </ul>\n            <button *ngIf=\"found.page != -1 && found.page < found.totalPages - 1\" class=\"show-more\" (click)=\"found.fetch()\">\n                <span>{{ 'COMMON.SHOW_MORE' | translate}}</span>\n                <svg name=\"chevron/down\"></svg>\n            </button>\n            <p *ngIf=\"found.totalPages == 0\">{{ 'COMMON.TAGS_NOT_FOUND_' | translate}}</p>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"false\">\n            <div class=\"tag-popular\">\n                <h2>{{ 'COMMON.POPULAR_TAGS' | translate}}</h2>\n                <ul class=\"tags\">\n                    <li *ngFor=\"let tag of popular.content\">\n                        <a [routerLink]=\"['/tags', tag.meta.id]\"># {{ tag.content }}</a>\n                    </li>\n                </ul>\n                <button *ngIf=\"popular.page < popular.totalPages - 1\" class=\"show-more\" (click)=\"popular.fetch()\">\n                    <span>{{ 'COMMON.SHOW_MORE' | translate}}</span>\n                    <svg name=\"chevron/down\"></svg>\n                </button>\n                <p *ngIf=\"popular.totalPages == 0\">{{ 'COMMON.TAGS_NOT_FOUND_POPULAR' | translate}}</p>\n            </div>\n            <div *appLoggedIn class=\"tag-recent\">\n                <h2>{{ 'COMMON.RECENTLY_VIEWED' | translate}}</h2>\n                <ul class=\"tags\">\n                    <li *ngFor=\"let tag of recent.content\">\n                        <a [routerLink]=\"['/tags', tag.meta.id]\"># {{ tag.content }}</a>\n                    </li>\n                </ul>\n                <button *ngIf=\"recent.page < recent.totalPages - 1\" class=\"show-more\" (click)=\"recent.fetch()\">\n                    <span>{{ 'COMMON.SHOW_MORE' | translate}}</span>\n                    <svg name=\"chevron/down\"></svg>\n                </button>\n                <p *ngIf=\"recent.totalPages == 0\">{{ 'COMMON.TAGS_NOT_FOUND_RECENT' | translate}}</p>\n            </div>\n        </ng-container>\n    </ng-container>\n</ul>\n","import { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { debounce, filter, first, tap, mapTo } from 'rxjs/operators';\n\nexport const NO_CONTENT = Symbol('NO_CONTENT');\n\nexport class PageableContent<T, O = any> {\n  public readonly isFetching$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public readonly content$: Subject<T[]> = new Subject<T[]>();\n  public readonly options$: BehaviorSubject<O>;\n  public readonly end$ = new Subject();\n\n  public content: T[] = [];\n  public page = -1;\n  public totalPages = 1;\n\n  private readonly fetchCommand$: Subject<never> = new Subject<never>();\n\n  constructor(\n    private readonly fetchNextFn$: (page: number, options: O) => Observable<IPageResponse<T>>,\n    options: O = null\n  ) {\n    this.options$ = new BehaviorSubject<O>(options);\n    this.fetchCommand$.pipe(debounce(() => this.isFetching$.pipe(filter((_: boolean) => !_)))).subscribe(() => this.fetchNextPage());\n  }\n\n  public fetch(): void {\n    if (this.page < this.totalPages - 1) {\n      this.fetchCommand$.next();\n    }\n  }\n\n  public reset$(hard: boolean = true): Observable<any> {\n    return this.isFetching$.pipe(\n      filter((it: boolean) => !it),\n      first(),\n      tap(() => {\n        if (hard) {\n          this.content.splice(0, this.content.length);\n        }\n        this.page = -1;\n        this.totalPages = 1;\n      }),\n    );\n  }\n\n  public setOptionsWithReset$(options: O, hard: boolean = true): Observable<O> {\n    return this.reset$(hard).pipe(\n      tap(() => {\n        this.options$.next(options);\n        this.fetch();\n      }),\n      mapTo(options),\n    );\n  }\n\n  private fetchNextPage(): void {\n    this.isFetching$.next(true);\n    this.fetchNextFn$(this.page + 1, this.options$.value).subscribe(\n      (response: IPageResponse<T>) => {\n        this.page = response.page;\n        this.totalPages = response.totalPages;\n        this.content$.next(response.content);\n        if (this.page >= this.totalPages - 1) {\n          this.end$.next();\n        }\n        this.content.push(...response.content);\n        this.isFetching$.next(false);\n      },\n      (error: any) => {\n        this.isFetching$.next(false);\n        if (error !== Symbol('NO_CONTENT')) {\n          throw error;\n        }\n      },\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TagListPageComponent } from './tag-list-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TagListPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TagListPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TagListPageRoutingModule } from './tag-list-page-routing.module';\nimport { TagListPageComponent } from './tag-list-page.component';\nimport { NavbarModule } from '@modules/content-overview/navbar/navbar.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\nimport { RouterModule } from '@angular/router';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\n\n\n@NgModule({\n  declarations: [TagListPageComponent],\n  imports: [\n    CommonModule,\n    TagListPageRoutingModule,\n    NavbarModule,\n    TranslateModule.forChild(),\n    CommonDirectivesModule,\n    RouterModule,\n    SvgModule\n  ]\n})\nexport class TagListPageModule { }\n"]}