{"version":3,"sources":["webpack:///src/app/api/schemas/dashboard/preview-site-type.enum.ts","webpack:///src/app/modules/dashboard/pages/preview-management-page/preview-management-block/preview-management-block.component.ts","webpack:///src/app/modules/dashboard/pages/preview-management-page/preview-management-block/preview-management-block.component.html","webpack:///src/app/modules/dashboard/pages/preview-management-page/preview-management-page.module.ts","webpack:///src/app/modules/dashboard/pages/preview-management-page/preview-management-page.component.ts","webpack:///src/app/modules/dashboard/pages/preview-management-page/preview-management-page.component.html","webpack:///src/app/modules/dashboard/pages/preview-management-page/preview-management-page-routing.module.ts"],"names":["PreviewSiteTypeEnum","PreviewManagementBlockComponent","saved","saveReq","pictureReq","data","title","siteName","description","url","type","WEBSITE","card","ngOnChanges","changes","inputData","onImageChange","files","image","emit","save","selector","templateUrl","styleUrls","changeDetection","OnPush","PreviewManagementPageModule","declarations","imports","PreviewManagementPageComponent","administrationService","sidebarWrapperService","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","getPreview$","pipe","ngOnDestroy$","subscribe","_","putCover","putPreviewCover$","putContent","putPreviewContent$","routes","path","component","PreviewManagementPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-preview-management-page-preview-management-page-module-es5.js","sourcesContent":["export enum PreviewSiteTypeEnum {\n    WEBSITE = 'WEBSITE'\n}\n","import { Component, ChangeDetectionStrategy, Output, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { IPreviewManagementView } from '@api/schemas/dashboard/preview-management-view.interface';\nimport { IPreviewManagementCreate } from '@api/schemas/dashboard/preview-management-create.interface';\nimport { PreviewSiteTypeEnum } from '@api/schemas/dashboard/preview-site-type.enum';\n\n@Component({\n  selector: 'app-preview-management-block',\n  templateUrl: './preview-management-block.component.html',\n  styleUrls: ['./preview-management-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PreviewManagementBlockComponent implements OnChanges {\n  @Input() public inputData: IPreviewManagementView;\n  @Input() public saved = false;\n\n  @Output() public readonly saveReq: EventEmitter<IPreviewManagementCreate> = new EventEmitter<IPreviewManagementCreate>();\n  @Output() public readonly pictureReq: EventEmitter<[File, IPreviewManagementCreate]>\n    = new EventEmitter<[File, IPreviewManagementCreate]>();\n\n  public data: IPreviewManagementCreate = {\n    title: null,\n    siteName: null,\n    description: null,\n    url: 'default',\n    type: PreviewSiteTypeEnum.WEBSITE,\n    card: 'summary'\n  };\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.inputData) {\n      this.data = {\n        ...this.data,\n        title: this.inputData?.title,\n        siteName: this.inputData?.siteName,\n        description: this.inputData?.description,\n      };\n    }\n  }\n\n  public onImageChange(files: FileList): void {\n    const image = files ? files[0] : null;\n    this.pictureReq.emit([image, this.data]);\n  }\n\n  public save(): void {\n    this.saveReq.emit(this.data);\n  }\n}\n","<form class=\"admin-form\">\n    <div class=\"admin-form__wrap\">\n        <div class=\"admin-form__wrap-main\">\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Title</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"text\" class=\"admin-input\" name=\"title\" [(ngModel)]=\"data.title\">\n                </span>\n            </label>\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Description</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"text\" class=\"admin-input\" name=\"description\" [(ngModel)]=\"data.description\">\n                </span>\n            </label>\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">URL</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"url\" class=\"admin-input\" name=\"url\" [(ngModel)]=\"data.siteName\">\n                </span>\n            </label>\n            <fieldset class=\"admin-form__fieldset\">\n                <legend class=\"admin-input-blc\"><span class=\"admin-input-row__title\">Изображение</span></legend>\n                <div class=\"admin-upload\">\n                    <div class=\"admin-upload__bar\">\n                        <label class=\"admin-upload__label\">\n                            <input #image type=\"file\" accept=\"image/*\" (change)=\"onImageChange($any($event).target.files)\">\n                            <div class=\"btn admin-upload__add\">Загрузить изображение</div>\n                        </label>\n                        <button class=\"btn admin-upload__del\" type=\"button\" (click)=\"onImageChange(null)\">Удалить изображение</button>\n                    </div>\n                    <div *ngIf=\"!inputData?.image\" class=\"admin-upload__wrap\" style=\"cursor: pointer;\" (click)=\"image.click()\">\n                        <div class=\"admin-upload__wrap-plus\">\n                            <svg id=\"btn-add\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n                                <path d=\"M0.5 12C0.5 5.64873 5.64873 0.5 12 0.5C18.3513 0.5 23.5 5.64873 23.5 12C23.5 18.3513 18.3513 23.5 12 23.5C5.64873 23.5 0.5 18.3513 0.5 12Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7132 11.2856H17.7132C18.1077 11.2856 18.4275 11.6054 18.4275 11.9999C18.4275 12.3943 18.1077 12.7141 17.7132 12.7141H12.7132V17.7141C12.7132 18.1086 12.3934 18.4284 11.9989 18.4284C11.6044 18.4284 11.2846 18.1086 11.2846 17.7141V12.7141H6.2846C5.89011 12.7141 5.57031 12.3943 5.57031 11.9999C5.57031 11.6054 5.89011 11.2856 6.2846 11.2856H11.2846V6.28557C11.2846 5.89109 11.6044 5.57129 11.9989 5.57129C12.3934 5.57129 12.7132 5.89109 12.7132 6.28557V11.2856Z\" fill=\"#00B7FF\"></path>\n                            </svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"inputData?.image\">\n                        <img [src]=\"inputData.image\" alt=\"\" style=\"max-width: 100%;\">\n                    </div>\n                </div>\n            </fieldset>\n            <div class=\"admin-form__bar\">\n                <button class=\"btn admin-btn_white\" (click)=\"save()\">{{ saved ? 'Изменения сохранены' : 'Сохранить' }}</button>\n            </div>\n        </div>\n    </div>\n</form> ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PreviewManagementPageRoutingModule } from './preview-management-page-routing.module';\nimport { PreviewManagementPageComponent } from './preview-management-page.component';\nimport { PreviewManagementBlockComponent } from './preview-management-block/preview-management-block.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [PreviewManagementPageComponent, PreviewManagementBlockComponent],\n  imports: [\n    CommonModule,\n    PreviewManagementPageRoutingModule,\n    FormsModule\n  ]\n})\nexport class PreviewManagementPageModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { IPreviewManagementView } from '@api/schemas/dashboard/preview-management-view.interface';\nimport { IUploadImageResponse } from '@api/schemas/image/upload-image-response.interface';\nimport { IPreviewManagementCreate } from '@api/schemas/dashboard/preview-management-create.interface';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-preview-management-page',\n  templateUrl: './preview-management-page.component.html',\n  styleUrls: ['./preview-management-page.component.scss']\n})\nexport class PreviewManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public data: IPreviewManagementView;\n  public saved = false;\n\n  constructor(\n    private readonly administrationService: AdministrationService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) { super(); }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.administrationService.getPreview$().pipe(takeUntil(this.ngOnDestroy$)).subscribe((_: IPreviewManagementView) => {\n      this.data = _;\n    });\n  }\n\n  public putCover(image: File, data: IPreviewManagementCreate): void {\n    this.administrationService.putPreviewCover$(image).pipe(takeUntil(this.ngOnDestroy$)).subscribe((_: IUploadImageResponse) => {\n      this.data = { ...this.data, ...data, image: _.url };\n    });\n  }\n\n  public putContent(data: IPreviewManagementCreate): void {\n    this.administrationService.putPreviewContent$(data).pipe(takeUntil(this.ngOnDestroy$)).subscribe((_: IPreviewManagementView) => {\n      this.data = _;\n      this.saved = true;\n      setTimeout(() => {\n        this.saved = false;\n      }, 5000);\n    });\n  }\n}\n","<app-preview-management-block\n    [inputData]=\"data\"\n    [saved]=\"saved\"\n    (saveReq)=\"putContent($event)\"\n    (pictureReq)=\"putCover($event[0], $event[1])\"\n></app-preview-management-block>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PreviewManagementPageComponent } from './preview-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreviewManagementPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreviewManagementPageRoutingModule { }\n"]}