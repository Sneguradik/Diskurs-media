{"version":3,"sources":["./src/app/modules/events/event-page/event-page-unwrap.component.ts","./node_modules/angular8-yandex-maps/__ivy_ngcc__/fesm2015/angular8-yandex-maps.js","./src/app/shared/services/events-resolver.service.ts","./src/app/shared/modules/user-info/user-info.component.ts","./src/app/shared/modules/user-info/user-info.component.html","./src/app/shared/utils/not-found.operator.ts","./src/app/modules/events/event-page/event-page.component.ts","./src/app/modules/events/event-page/event-page.component.html","./src/app/modules/events/event-page/event-page-routing.module.ts","./src/app/shared/modules/user-info/user-info.module.ts","./src/app/modules/events/event-page/event-page.module.ts"],"names":[],"mappings":"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AA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACwI;AAChI;AACO;AACzC;;AAES;;AAExC;AACA,0BAA0B,4DAAc;;AAExC;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,YAAY,mEAAmE,EAAE;AACxH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6BAA6B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,oDAAa,GAAG;AACvJ,0CAA0C,+DAAwB,EAAE,qEAAqE,yCAAyC,YAAY,6HAA6H,aAAa,kEAA2B,iFAAiF,EAAE,gBAAgB;AACtc;AACA,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,eAAe,OAAO,oDAAM,EAAE;AAC9B,eAAe,OAAO,oDAAM,EAAE;AAC9B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,aAAa,OAAO,oDAAM,EAAE;AAC5B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,EAAE,EAAE,GAAG;AAC5D,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6BAA6B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,oDAAa,GAAG;AACvJ,0CAA0C,+DAAwB,EAAE,qEAAqE,qEAAqE,YAAY,6HAA6H,aAAa,kEAA2B,iFAAiF,EAAE,gBAAgB;AACle;AACA,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,eAAe,OAAO,oDAAM,EAAE;AAC9B,eAAe,OAAO,oDAAM,EAAE;AAC9B,YAAY,OAAO,oDAAM,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,aAAa,OAAO,oDAAM,EAAE;AAC5B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,EAAE,EAAE,GAAG;AAC5D,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY,6CAA6C,EAAE;AAC1F;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C,wBAAwB,iDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;A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AkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA,iEAAiE,yBAAyB;AAC1F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA,wBAAwB,iDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAA0D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE,+DAA+D,gBAAgB,uCAAuC;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uBAAuB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,iBAAiB;AAC9K,oCAAoC,+DAAwB,EAAE,2HAA2H;AACzL,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,qDAAqD;AAC5D,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,mGAAmG,YAAY,iIAAiI,aAAa,kEAA2B,wGAAwG;AAClZ,QAAQ,uDAAgB;AACxB,KAAK,EAAE,gBAAgB;AACvB;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK;AACL;AACA;AACA,oBAAoB,OAAO,uDAAS,wBAAwB;AAC5D,kBAAkB,OAAO,6DAAe,iCAAiC;AACzE,mBAAmB,OAAO,6DAAe,kCAAkC;AAC3E,kBAAkB,OAAO,6DAAe,iCAAiC;AACzE,gBAAgB,OAAO,6DAAe,+BAA+B;AACrE,kBAAkB,OAAO,6DAAe,iCAAiC;AACzE,oBAAoB,OAAO,mDAAK,EAAE;AAClC,cAAc,OAAO,mDAAK,EAAE;AAC5B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,eAAe,OAAO,oDAAM,EAAE;AAC9B,eAAe,OAAO,oDAAM,EAAE;AAC9B,YAAY,OAAO,oDAAM,EAAE;AAC3B,aAAa,OAAO,oDAAM,EAAE;AAC5B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,GAAG,sBAAsB,EAAE,EAAE,GAAG;AACrF,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,wBAAwB,iDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA,uDAAuD,4BAA4B,KAAK;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,iBAAiB;AAC7L,yCAAyC,+DAAwB,EAAE,kHAAkH;AACrL,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ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","file":"event-page-event-page-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CompaniesService } from '@api/routes/companies.service';\nimport { ICompanyViewFull } from '@api/schemas/company/company-view-full.interface';\nimport { SessionService } from '@app/services/session.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { Observable } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { IEventViewFull } from '@api/schemas/event/event-view-full.interface';\nimport { EventsService } from '@api/routes/events.service';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { DynamicMetaTagsService } from '@layout/dynamic-meta-tags/dynamic-meta-tags.service';\nimport { environment } from '@env';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-event-page-unwrap',\n  template: '<app-event-page [event]=\"event\" [own]=\"own$ | async\" [company]=\"company$ | async\"></app-event-page>',\n  // tslint:disable-next-line:no-host-metadata-property\n  host: { style: 'width: 100%' }\n})\nexport class EventPageUnwrapComponent extends AbstractComponent implements OnInit, OnDestroy  {\n  public event: IEventViewFull;\n  public own$: Observable<boolean>;\n  public company$: Observable<ICompanyViewFull>;\n\n  constructor(\n    private readonly eventsService: EventsService,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly sessionService: SessionService,\n    private readonly companyService: CompaniesService,\n    private readonly sidebarWrapperService: SidebarWrapperService,\n    private readonly dynamicMetaTagsService: DynamicMetaTagsService,\n    private readonly router: Router\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    this.event = this.activatedRoute.snapshot.data.data;\n    this.setPreInfo();\n    this.company$ = this.companyService.getSingle$(this.event.company.meta.id);\n    this.own$ = this.sessionService.user$.pipe(map((user: IUserViewFull) => user && this.event.company.meta.id === user.meta.id));\n    this.eventsService.view$(this.event.meta.id).pipe(takeUntil(this.ngOnDestroy$)).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.dynamicMetaTagsService.setToDefault();\n    super.ngOnDestroy();\n  }\n\n  private setPreInfo(): void {\n    this.dynamicMetaTagsService.metaInfo$.next({\n      title: this.event.info.name,\n      tags: [\n        { property: 'og:title', content: this.event.info.name },\n        { name: 'description', content: this.event.info.announcement },\n        { property: 'og:description', content: this.event.info.announcement },\n        { property: 'og:url', content: environment.url + this.router.url },\n        { property: 'og:type', content: 'website' },\n        { property: 'og:site_name', content: 'Diskurs.Media' },\n        { name: 'twitter:card', content: 'summary' },\n        { name: 'twitter:title', content: this.event.info.name },\n        { name: 'twitter:description', content: this.event.info.announcement },\n      ]\n    });\n  }\n}\n","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, EventEmitter, Component, NgZone, Input, Output, ContentChildren, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, ViewChild, NgModule } from '@angular/core';\nimport { startWith, map, switchMap, take } from 'rxjs/operators';\nimport { Subscription, from, fromEvent, throwError, merge } from 'rxjs';\nimport { __rest } from 'tslib';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"container\"];\nconst YA_MAP_CONFIG = new InjectionToken('YA_MAP_CONFIG');\n\n/**\r\n * Generates a random string based on Date in hexadecimal numeral system\r\n * @example f175517fa4f3\r\n */\r\nconst generateRandomId = () => {\r\n    return `f${Number(new Date()).toString(16)}`;\r\n};\n\n/**\r\n * Removes all Leading blank spaces from each line\r\n * @param s String for replacing\r\n */\r\nconst removeLeadingSpaces = (s) => s.trim().replace(/^ +/gm, '');\n\n/**\r\n * Component for creating a geo object.\r\n * Can be displayed as a placemark, polyline, polygon, etc., depending on the geometry type.\r\n *\r\n * @example `<ya-geoobject [feature]=\"{ geometry: { type: 'Rectangle', coordinates: [[55.665, 37.66], [55.64,37.53]] } }\"></ya-geoobject>`.\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/components/geoobject}\r\n */\r\nclass YaGeoObjectComponent {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        /**\r\n         * Emits immediately after this entity is added in root container.\r\n         */\r\n        this.load = new EventEmitter();\r\n        /**\r\n         * Actions with the balloon.\r\n         */\r\n        this.balloon = new EventEmitter();\r\n        /**\r\n         * Left-click on the object.\r\n         */\r\n        this.yaclick = new EventEmitter();\r\n        /**\r\n         * GeoObject dragging.\r\n         */\r\n        this.drag = new EventEmitter();\r\n        /**\r\n         * Actions with the hint.\r\n         */\r\n        this.hint = new EventEmitter();\r\n        /**\r\n         * Mouse actions with the object.\r\n         */\r\n        this.mouse = new EventEmitter();\r\n        /**\r\n         * Multitouch actions with the object.\r\n         */\r\n        this.multitouch = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this._logErrors();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._updateGeoObject(changes);\r\n    }\r\n    /**\r\n     * Method for dynamic GeoObject configuration.\r\n     * Handles input changes and provides it to API.\r\n     * @param changes\r\n     */\r\n    _updateGeoObject(changes) {\r\n        const geoObject = this._geoObject;\r\n        if (!geoObject)\r\n            return;\r\n        const { feature, options } = changes;\r\n        if (feature) {\r\n            this._setFeature(feature.currentValue, geoObject);\r\n        }\r\n        if (options) {\r\n            geoObject.options.set(options.currentValue);\r\n        }\r\n    }\r\n    /**\r\n     * Destructs state and provides new values to API.\r\n     * @param feature\r\n     * @param geoObject\r\n     */\r\n    _setFeature(feature, geoObject) {\r\n        const { geometry, properties } = feature;\r\n        if (geometry) {\r\n            console.error(removeLeadingSpaces(`\n        The geometry of GeoObject cannot be changed after entity init.\n\n        Solutions:\n        1. Use ymaps from ILoadEvent\n        2. Recreate GeoObject component with new feature.geometry\n      `));\r\n        }\r\n        if (properties) {\r\n            /**\r\n             * Wrong typings in DefinitelyTyped.\r\n             */\r\n            geoObject.properties.set(properties);\r\n        }\r\n    }\r\n    _logErrors() {\r\n        if (!this.feature) {\r\n            console.error('GeoObjects: feature input is required.');\r\n            this.feature = {};\r\n        }\r\n    }\r\n    /**\r\n     * Creates GeoObject.\r\n     *\r\n     * @param map Necessary for removing entity from map.geoObjects on GeoObject destroy\r\n     * `this.map.geoObjects.remove(this.geoObject);`.\r\n     * @param clusterer Necessary for removing entity from Clusterer on GeoObject destroy\r\n     * `this.clusterer.remove(this.geoObject);`.\r\n     */\r\n    createGeoObject(map, clusterer) {\r\n        const geoObject = new ymaps.GeoObject(this.feature, this.options);\r\n        this.id = generateRandomId();\r\n        this._clusterer = clusterer;\r\n        this._geoObject = geoObject;\r\n        this._map = map;\r\n        this._addEventListeners();\r\n        return geoObject;\r\n    }\r\n    /**\r\n     * Adds listeners on the GeoObject events.\r\n     */\r\n    _addEventListeners() {\r\n        const geoObject = this._geoObject;\r\n        this._ngZone.run(() => this.load.emit({ ymaps, instance: geoObject }));\r\n        const handlers = [\r\n            {\r\n                name: ['balloonopen', 'balloonclose'],\r\n                fn: (e) => this.balloon.emit({\r\n                    ymaps,\r\n                    instance: geoObject,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['click', 'dblclick'],\r\n                fn: (e) => this.yaclick.emit({\r\n                    ymaps,\r\n                    instance: geoObject,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['dragstart', 'dragend'],\r\n                fn: (e) => this.drag.emit({\r\n                    ymaps,\r\n                    instance: geoObject,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['hintopen', 'hintclose'],\r\n                fn: (e) => this.hint.emit({\r\n                    ymaps,\r\n                    instance: geoObject,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseup'],\r\n                fn: (e) => this.mouse.emit({\r\n                    ymaps,\r\n                    instance: geoObject,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['multitouchstart', 'multitouchmove', 'multitouchend'],\r\n                fn: (e) => this.multitouch.emit({\r\n                    ymaps,\r\n                    instance: geoObject,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n        ];\r\n        handlers.forEach((handler) => {\r\n            geoObject.events.add(handler.name, (e) => this._ngZone.run(() => handler.fn(e)));\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        var _a, _b;\r\n        /**\r\n         * Wrong typings in DefinitelyTyped.\r\n         */\r\n        (_a = this._clusterer) === null || _a === void 0 ? void 0 : _a.remove(this._geoObject);\r\n        (_b = this._map) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this._geoObject);\r\n    }\r\n}\nYaGeoObjectComponent.ɵfac = function YaGeoObjectComponent_Factory(t) { return new (t || YaGeoObjectComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nYaGeoObjectComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: YaGeoObjectComponent, selectors: [[\"ya-geoobject\"]], inputs: { feature: \"feature\", options: \"options\" }, outputs: { load: \"load\", balloon: \"balloon\", yaclick: \"yaclick\", drag: \"drag\", hint: \"hint\", mouse: \"mouse\", multitouch: \"multitouch\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function YaGeoObjectComponent_Template(rf, ctx) { }, styles: [\"\"] });\r\nYaGeoObjectComponent.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\nYaGeoObjectComponent.propDecorators = {\r\n    feature: [{ type: Input }],\r\n    options: [{ type: Input }],\r\n    load: [{ type: Output }],\r\n    balloon: [{ type: Output }],\r\n    yaclick: [{ type: Output }],\r\n    drag: [{ type: Output }],\r\n    hint: [{ type: Output }],\r\n    mouse: [{ type: Output }],\r\n    multitouch: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(YaGeoObjectComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ya-geoobject',\n                template: \"\",\n                styles: [\"\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { load: [{\n            type: Output\n        }], balloon: [{\n            type: Output\n        }], yaclick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], hint: [{\n            type: Output\n        }], mouse: [{\n            type: Output\n        }], multitouch: [{\n            type: Output\n        }], feature: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\r\n * Component for creating a geo object with the geometry geometry.Point.\r\n *\r\n * @example `<ya-placemark [geometry]=\"[55.751952, 37.600739]\"></ya-placemark>`.\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/components/placemark}\r\n */\r\nclass YaPlacemarkComponent {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        /**\r\n         * Emits immediately after this entity is added in root container.\r\n         */\r\n        this.load = new EventEmitter();\r\n        /**\r\n         * Actions with the balloon.\r\n         */\r\n        this.balloon = new EventEmitter();\r\n        /**\r\n         * Left-click on the object.\r\n         */\r\n        this.yaclick = new EventEmitter();\r\n        /**\r\n         * Placemark dragging.\r\n         */\r\n        this.drag = new EventEmitter();\r\n        /**\r\n         * Actions with the hint.\r\n         */\r\n        this.hint = new EventEmitter();\r\n        /**\r\n         * Mouse actions with the object.\r\n         */\r\n        this.mouse = new EventEmitter();\r\n        /**\r\n         * Multitouch actions with the object.\r\n         */\r\n        this.multitouch = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this._logErrors();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._updatePlacemark(changes);\r\n    }\r\n    /**\r\n     * Method for dynamic Placemark configuration.\r\n     * Handles input changes and provides it to API.\r\n     * @param changes\r\n     */\r\n    _updatePlacemark(changes) {\r\n        const placemark = this._placemark;\r\n        if (!placemark)\r\n            return;\r\n        const { geometry, properties, options } = changes;\r\n        if (geometry) {\r\n            placemark.geometry.setCoordinates(geometry.currentValue);\r\n        }\r\n        if (properties) {\r\n            /**\r\n             * Wrong typings in DefinitelyTyped.\r\n             */\r\n            placemark.properties.set(properties.currentValue);\r\n        }\r\n        if (options) {\r\n            placemark.options.set(options.currentValue);\r\n        }\r\n    }\r\n    _logErrors() {\r\n        if (!this.geometry) {\r\n            console.error('Placemark: geometry input is required.');\r\n            this.geometry = [];\r\n        }\r\n    }\r\n    /**\r\n     * Creates placemark.\r\n     *\r\n     * @param map Necessary for removing entity from map.geoObjects on Placemark destroy\r\n     * `this.map.geoObjects.remove(this.placemark);`.\r\n     * @param clusterer Necessary for removing entity from Clusterer on Placemark destroy\r\n     * `this.clusterer.remove(this.placemark);`.\r\n     */\r\n    createPlacemark(map, clusterer) {\r\n        const placemark = new ymaps.Placemark(this.geometry, this.properties, this.options);\r\n        this.id = generateRandomId();\r\n        this._clusterer = clusterer;\r\n        this._map = map;\r\n        this._placemark = placemark;\r\n        this._addEventListeners();\r\n        return placemark;\r\n    }\r\n    /**\r\n     * Adds listeners on the Placemark events.\r\n     */\r\n    _addEventListeners() {\r\n        const placemark = this._placemark;\r\n        this._ngZone.run(() => this.load.emit({ ymaps, instance: placemark }));\r\n        const handlers = [\r\n            {\r\n                name: ['balloonopen', 'balloonclose'],\r\n                fn: (e) => this.balloon.emit({\r\n                    ymaps,\r\n                    instance: placemark,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['click', 'dblclick'],\r\n                fn: (e) => this.yaclick.emit({\r\n                    ymaps,\r\n                    instance: placemark,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['dragstart', 'dragend'],\r\n                fn: (e) => this.drag.emit({\r\n                    ymaps,\r\n                    instance: placemark,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['hintopen', 'hintclose'],\r\n                fn: (e) => this.hint.emit({\r\n                    ymaps,\r\n                    instance: placemark,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseup'],\r\n                fn: (e) => this.mouse.emit({\r\n                    ymaps,\r\n                    instance: placemark,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['multitouchstart', 'multitouchmove', 'multitouchend'],\r\n                fn: (e) => this.multitouch.emit({\r\n                    ymaps,\r\n                    instance: placemark,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n        ];\r\n        handlers.forEach((handler) => {\r\n            placemark.events.add(handler.name, (e) => this._ngZone.run(() => handler.fn(e)));\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        var _a, _b;\r\n        /**\r\n         * Wrong typings in DefinitelyTyped.\r\n         */\r\n        (_a = this._clusterer) === null || _a === void 0 ? void 0 : _a.remove(this._placemark);\r\n        (_b = this._map) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this._placemark);\r\n    }\r\n}\nYaPlacemarkComponent.ɵfac = function YaPlacemarkComponent_Factory(t) { return new (t || YaPlacemarkComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nYaPlacemarkComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: YaPlacemarkComponent, selectors: [[\"ya-placemark\"]], inputs: { geometry: \"geometry\", properties: \"properties\", options: \"options\" }, outputs: { load: \"load\", balloon: \"balloon\", yaclick: \"yaclick\", drag: \"drag\", hint: \"hint\", mouse: \"mouse\", multitouch: \"multitouch\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function YaPlacemarkComponent_Template(rf, ctx) { }, styles: [\"\"] });\r\nYaPlacemarkComponent.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\nYaPlacemarkComponent.propDecorators = {\r\n    geometry: [{ type: Input }],\r\n    properties: [{ type: Input }],\r\n    options: [{ type: Input }],\r\n    load: [{ type: Output }],\r\n    balloon: [{ type: Output }],\r\n    yaclick: [{ type: Output }],\r\n    drag: [{ type: Output }],\r\n    hint: [{ type: Output }],\r\n    mouse: [{ type: Output }],\r\n    multitouch: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(YaPlacemarkComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ya-placemark',\n                template: \"\",\n                styles: [\"\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { load: [{\n            type: Output\n        }], balloon: [{\n            type: Output\n        }], yaclick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], hint: [{\n            type: Output\n        }], mouse: [{\n            type: Output\n        }], multitouch: [{\n            type: Output\n        }], geometry: [{\n            type: Input\n        }], properties: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\r\n * Component for creating a clusterer. Clusterizes objects in the visible area of the map.\r\n * If the object does not fall within the visible area of the map, it will not be added to the map.\r\n * Note, that the clusterer does not react to changing the coordinates of objects (either programmatically,\r\n * or as the result of dragging). If you want to change the coordinates of some object in the clusterer,\r\n * you should first delete the object from the clusterer and then add it back.\r\n *\r\n * @example\r\n * `<ya-clusterer>\r\n *  <ya-placemark [geometry]=\"[55.74, 37.50]\"></ya-placemark>\r\n *   <ya-geoobject [feature]=\"{ geometry: { type: 'Point', coordinates: [55.73, 37.52] } }\"></ya-geoobject>\r\n * </ya-clusterer>`.\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/components/clusterer}\r\n */\r\nclass YaClustererComponent {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        /**\r\n         * Emits immediately after this entity is added in root container.\r\n         */\r\n        this.load = new EventEmitter();\r\n        /**\r\n         * Actions with the hint.\r\n         */\r\n        this.hint = new EventEmitter();\r\n        /**\r\n         * Map reference changed.\r\n         */\r\n        this.mapChange = new EventEmitter();\r\n        /**\r\n         * Change to the object options.\r\n         */\r\n        this.optionsChange = new EventEmitter();\r\n        /**\r\n         * The parent object reference changed.\r\n         */\r\n        this.parentChange = new EventEmitter();\r\n        this._sub = new Subscription();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._updateClusterer(changes);\r\n    }\r\n    /**\r\n     * Method for dynamic Clusterer configuration.\r\n     * Handles input changes and provides it to API.\r\n     * @param changes\r\n     */\r\n    _updateClusterer(changes) {\r\n        const clusterer = this._clusterer;\r\n        if (!clusterer)\r\n            return;\r\n        const { options } = changes;\r\n        if (options) {\r\n            /**\r\n             * Wrong typings in DefinitelyTyped.\r\n             */\r\n            clusterer.options.set(options.currentValue);\r\n        }\r\n    }\r\n    /**\r\n     * Creates Clusterer.\r\n     *\r\n     * @param map Necessary for passing in children.\r\n     */\r\n    createClusterer(map) {\r\n        const clusterer = new ymaps.Clusterer(this.options);\r\n        this._clusterer = clusterer;\r\n        /**\r\n         * Adds new Placemarks to the clusterer on changes.\r\n         */\r\n        const placemarksSub = this.placemarks.changes\r\n            .pipe(startWith(this.placemarks))\r\n            .subscribe((list) => {\r\n            list.forEach((placemark) => {\r\n                if (!placemark.id) {\r\n                    /**\r\n                     * Wrong typings in DefinitelyTyped.\r\n                     */\r\n                    clusterer.add(placemark.createPlacemark(map, clusterer));\r\n                }\r\n            });\r\n        });\r\n        this._sub.add(placemarksSub);\r\n        /**\r\n         * Adds new GeoObjects to the clusterer on changes.\r\n         */\r\n        const geoObjectsSub = this.geoObjects.changes\r\n            .pipe(startWith(this.geoObjects))\r\n            .subscribe((list) => {\r\n            list.forEach((geoObject) => {\r\n                if (!geoObject.id) {\r\n                    /**\r\n                     * Wrong typings in DefinitelyTyped.\r\n                     */\r\n                    clusterer.add(geoObject.createGeoObject(map, clusterer));\r\n                }\r\n            });\r\n        });\r\n        this._sub.add(geoObjectsSub);\r\n        this._addEventListeners();\r\n        return clusterer;\r\n    }\r\n    /**\r\n     * Adds listeners on Clusterer events.\r\n     */\r\n    _addEventListeners() {\r\n        const clusterer = this._clusterer;\r\n        this._ngZone.run(() => this.load.emit({ ymaps, instance: clusterer }));\r\n        const handlers = [\r\n            {\r\n                name: ['hintclose', 'hintopen'],\r\n                fn: (e) => this.hint.emit({\r\n                    ymaps,\r\n                    instance: clusterer,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: 'mapchange',\r\n                fn: (e) => this.mapChange.emit({\r\n                    ymaps,\r\n                    instance: clusterer,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: 'optionschange',\r\n                fn: (e) => this.optionsChange.emit({\r\n                    ymaps,\r\n                    instance: clusterer,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: 'parentchange',\r\n                fn: (e) => this.parentChange.emit({\r\n                    ymaps,\r\n                    instance: clusterer,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n        ];\r\n        handlers.forEach((handler) => {\r\n            clusterer.events.add(handler.name, (e) => this._ngZone.run(() => handler.fn(e)));\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._sub.unsubscribe();\r\n    }\r\n}\nYaClustererComponent.ɵfac = function YaClustererComponent_Factory(t) { return new (t || YaClustererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nYaClustererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: YaClustererComponent, selectors: [[\"ya-clusterer\"]], contentQueries: function YaClustererComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, YaPlacemarkComponent, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, YaGeoObjectComponent, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.placemarks = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.geoObjects = _t);\n    } }, inputs: { options: \"options\" }, outputs: { load: \"load\", hint: \"hint\", mapChange: \"mapChange\", optionsChange: \"optionsChange\", parentChange: \"parentChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function YaClustererComponent_Template(rf, ctx) { }, styles: [\"\"] });\r\nYaClustererComponent.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\nYaClustererComponent.propDecorators = {\r\n    placemarks: [{ type: ContentChildren, args: [YaPlacemarkComponent,] }],\r\n    geoObjects: [{ type: ContentChildren, args: [YaGeoObjectComponent,] }],\r\n    options: [{ type: Input }],\r\n    load: [{ type: Output }],\r\n    hint: [{ type: Output }],\r\n    mapChange: [{ type: Output }],\r\n    optionsChange: [{ type: Output }],\r\n    parentChange: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(YaClustererComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ya-clusterer',\n                template: \"\",\n                styles: [\"\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { load: [{\n            type: Output\n        }], hint: [{\n            type: Output\n        }], mapChange: [{\n            type: Output\n        }], optionsChange: [{\n            type: Output\n        }], parentChange: [{\n            type: Output\n        }], placemarks: [{\n            type: ContentChildren,\n            args: [YaPlacemarkComponent]\n        }], geoObjects: [{\n            type: ContentChildren,\n            args: [YaGeoObjectComponent]\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\r\n * Component for creating and managing controls on the map.\r\n *\r\n * @example `<ya-control type=\"RoutePanel\" [parameters]=\"{ options: { float: 'right' } }\"></ya-control>`.\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/components/controls}\r\n */\r\nclass YaControlComponent {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        /**\r\n         * Emits immediately after this entity is added in root container.\r\n         */\r\n        this.load = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this._logErrors();\r\n    }\r\n    _logErrors() {\r\n        if (!this.type) {\r\n            console.error('Control: type input is required.');\r\n        }\r\n    }\r\n    /**\r\n     * Creates control\r\n     * @returns Instance of created control\r\n     */\r\n    createControl() {\r\n        const control = new ymaps.control[this.type](this.parameters);\r\n        // RoutePanel ignores state in parameters. API bug\r\n        if (this.type === 'RoutePanel' &&\r\n            this.parameters &&\r\n            this.parameters.state) {\r\n            control.routePanel.state.set(Object.assign({}, this.parameters.state));\r\n        }\r\n        this._emitEvent(control);\r\n        return control;\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._updateControl(changes);\r\n    }\r\n    _updateControl(changes) {\r\n        if (Object.values(changes).some((v) => v.firstChange))\r\n            return;\r\n        console.error(removeLeadingSpaces(`\n      Control doesn't support dynamic configuartion.\n\n      Solutions:\n      1. Use ymaps from ILoadEvent\n      2. Recreate component with new configuration\n    `));\r\n    }\r\n    _emitEvent(control) {\r\n        this._ngZone.run(() => this.load.emit({ ymaps, instance: control }));\r\n    }\r\n}\nYaControlComponent.ɵfac = function YaControlComponent_Factory(t) { return new (t || YaControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nYaControlComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: YaControlComponent, selectors: [[\"ya-control\"]], inputs: { type: \"type\", parameters: \"parameters\" }, outputs: { load: \"load\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function YaControlComponent_Template(rf, ctx) { }, styles: [\"\"] });\r\nYaControlComponent.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\nYaControlComponent.propDecorators = {\r\n    type: [{ type: Input }],\r\n    parameters: [{ type: Input }],\r\n    load: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(YaControlComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ya-control',\n                template: \"\",\n                styles: [\"\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { load: [{\n            type: Output\n        }], type: [{\n            type: Input\n        }], parameters: [{\n            type: Input\n        }] }); })();\n\nconst DEFAULT_CONFIG = {\r\n    lang: 'ru_RU',\r\n};\r\n/**\r\n * @dynamic\r\n *\r\n * @description Injectable service that will handle the loading of Yandex.Maps script\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/services/script}\r\n */\r\nclass ScriptService {\r\n    constructor(config, _document) {\r\n        this._document = _document;\r\n        this._config = config || DEFAULT_CONFIG;\r\n        this._window = document.defaultView;\r\n    }\r\n    /**\r\n     * Inits Yandex.Maps script\r\n     */\r\n    initScript() {\r\n        if ('ymaps' in this._window) {\r\n            return from(ymaps.ready()).pipe(map(() => ymaps));\r\n        }\r\n        if (!this._script) {\r\n            const script = this._document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = this._getScriptSource(this._config);\r\n            script.id = 'yandexMapsApiScript';\r\n            this._script = this._document.body.appendChild(script);\r\n        }\r\n        const load = fromEvent(this._script, 'load').pipe(switchMap(() => from(ymaps.ready()).pipe(map(() => ymaps))));\r\n        const error = fromEvent(this._script, 'error').pipe(switchMap((e) => throwError(e)));\r\n        return merge(load, error).pipe(take(1));\r\n    }\r\n    /**\r\n     * Returns script source by config\r\n     * @param config Config with parameters that will be added in source\r\n     * @example 'https://api-maps.yandex.ru/2.1/?apikey=658f67a2-fd77-42e9-b99e-2bd48c4ccad4&lang=en_US'\r\n     */\r\n    _getScriptSource(config) {\r\n        const { enterprise, version = '2.1' } = config, rest = __rest(config, [\"enterprise\", \"version\"]);\r\n        const params = this._convertIntoQueryParams(rest);\r\n        return `https://${enterprise ? 'enterprise.' : ''}api-maps.yandex.ru/${version}/?${params}`;\r\n    }\r\n    /**\r\n     * Converts an object into a query string parameters\r\n     * @param o Object for converting\r\n     * @example\r\n     * // returns \"apikey=XXX\"\r\n     * convertIntoQueryParams({ apikey: 'XXX' })\r\n     */\r\n    _convertIntoQueryParams(o) {\r\n        return Object.keys(o)\r\n            .map((key) => `${key}=${o[key]}`)\r\n            .join('&');\r\n    }\r\n}\nScriptService.ɵfac = function ScriptService_Factory(t) { return new (t || ScriptService)(ɵngcc0.ɵɵinject(YA_MAP_CONFIG, 8), ɵngcc0.ɵɵinject(DOCUMENT)); };\r\nScriptService.ɵprov = ɵɵdefineInjectable({ factory: function ScriptService_Factory() { return new ScriptService(ɵɵinject(YA_MAP_CONFIG, 8), ɵɵinject(DOCUMENT)); }, token: ScriptService, providedIn: \"root\" });\r\nScriptService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [YA_MAP_CONFIG,] }] },\r\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScriptService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [YA_MAP_CONFIG]\n            }] }, { type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\r\n * Component for creating Multi-route on the map\r\n *\r\n * @example `<ya-multiroute [referencePoints]=\"[[55.751952, 37.600739], 'Красные ворота, Москва']\"></ya-multiroute>`.\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/components/multiroute}\r\n */\r\nclass YaMultirouteComponent {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        /**\r\n         * Emits immediately after this entity is added in root container.\r\n         */\r\n        this.load = new EventEmitter();\r\n        /**\r\n         * Change to the active route.\r\n         */\r\n        this.activeroutechange = new EventEmitter();\r\n        /**\r\n         * Actions with the balloon.\r\n         */\r\n        this.balloon = new EventEmitter();\r\n        /**\r\n         * Left-click on the object.\r\n         */\r\n        this.yaclick = new EventEmitter();\r\n        /**\r\n         * Mouse actions with the object.\r\n         */\r\n        this.mouse = new EventEmitter();\r\n        /**\r\n         * Multitouch actions with the object.\r\n         */\r\n        this.multitouch = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this._logErrors();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._updateMultiroute(changes);\r\n    }\r\n    /**\r\n     * Method for dynamic Miltiroute configuration.\r\n     * Handles input changes and provides it to API.\r\n     * @param changes\r\n     */\r\n    _updateMultiroute(changes) {\r\n        const multiroute = this._multiroute;\r\n        if (!multiroute)\r\n            return;\r\n        const { referencePoints, model, options } = changes;\r\n        if (referencePoints) {\r\n            multiroute.model.setReferencePoints(referencePoints.currentValue);\r\n        }\r\n        if (model) {\r\n            this._setModel(model.currentValue, multiroute);\r\n        }\r\n        if (options) {\r\n            /**\r\n             * Wrong typings in DefinitelyTyped.\r\n             */\r\n            multiroute.options.set(options.currentValue);\r\n        }\r\n    }\r\n    /**\r\n     * Destructs state and provides new values to API.\r\n     * @param model\r\n     * @param multiroute\r\n     */\r\n    _setModel(model, multiroute) {\r\n        const { referencePoints, params } = model;\r\n        if (referencePoints) {\r\n            multiroute.model.setReferencePoints(referencePoints);\r\n        }\r\n        if (params) {\r\n            multiroute.model.setParams(params);\r\n        }\r\n    }\r\n    _logErrors() {\r\n        if (!this.referencePoints) {\r\n            console.error('Multiroute: referencePoints input is required.');\r\n            this.referencePoints = [];\r\n        }\r\n    }\r\n    /**\r\n     * Creates Multiroute.\r\n     *\r\n     * @param map Necessary for removing entity from map.geoObjects on Multiroute destroy\r\n     * `this.map.geoObjects.remove(this.multiroute);`.\r\n     */\r\n    createMultiroute(map) {\r\n        const multiroute = new ymaps.multiRouter.MultiRoute(Object.assign(Object.assign({}, this.model), { referencePoints: this.referencePoints }), this.options);\r\n        this.id = generateRandomId();\r\n        this._map = map;\r\n        this._multiroute = multiroute;\r\n        this._addEventListeners();\r\n        return multiroute;\r\n    }\r\n    /**\r\n     * Adds listeners on the Multiroute events.\r\n     */\r\n    _addEventListeners() {\r\n        const multiroute = this._multiroute;\r\n        this._ngZone.run(() => this.load.emit({ ymaps, instance: multiroute }));\r\n        const handlers = [\r\n            {\r\n                name: 'activeroutechange',\r\n                fn: (e) => this.activeroutechange.emit({\r\n                    ymaps,\r\n                    instance: multiroute,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['balloonopen', 'balloonclose'],\r\n                fn: (e) => this.balloon.emit({\r\n                    ymaps,\r\n                    instance: multiroute,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['click', 'dblclick'],\r\n                fn: (e) => this.yaclick.emit({\r\n                    ymaps,\r\n                    instance: multiroute,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseup'],\r\n                fn: (e) => this.mouse.emit({\r\n                    ymaps,\r\n                    instance: multiroute,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['multitouchstart', 'multitouchmove', 'multitouchend'],\r\n                fn: (e) => this.multitouch.emit({\r\n                    ymaps,\r\n                    instance: multiroute,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n        ];\r\n        handlers.forEach((handler) => {\r\n            multiroute.events.add(handler.name, (e) => this._ngZone.run(() => handler.fn(e)));\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        var _a;\r\n        (_a = this._map) === null || _a === void 0 ? void 0 : _a.geoObjects.remove(this._multiroute);\r\n    }\r\n}\nYaMultirouteComponent.ɵfac = function YaMultirouteComponent_Factory(t) { return new (t || YaMultirouteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nYaMultirouteComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: YaMultirouteComponent, selectors: [[\"ya-multiroute\"]], inputs: { referencePoints: \"referencePoints\", model: \"model\", options: \"options\" }, outputs: { load: \"load\", activeroutechange: \"activeroutechange\", balloon: \"balloon\", yaclick: \"yaclick\", mouse: \"mouse\", multitouch: \"multitouch\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function YaMultirouteComponent_Template(rf, ctx) { }, styles: [\"\"] });\r\nYaMultirouteComponent.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\nYaMultirouteComponent.propDecorators = {\r\n    referencePoints: [{ type: Input }],\r\n    model: [{ type: Input }],\r\n    options: [{ type: Input }],\r\n    load: [{ type: Output }],\r\n    activeroutechange: [{ type: Output }],\r\n    balloon: [{ type: Output }],\r\n    yaclick: [{ type: Output }],\r\n    mouse: [{ type: Output }],\r\n    multitouch: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(YaMultirouteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ya-multiroute',\n                template: \"\",\n                styles: [\"\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { load: [{\n            type: Output\n        }], activeroutechange: [{\n            type: Output\n        }], balloon: [{\n            type: Output\n        }], yaclick: [{\n            type: Output\n        }], mouse: [{\n            type: Output\n        }], multitouch: [{\n            type: Output\n        }], referencePoints: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\r\n * Component for creating and managing a map.\r\n *\r\n * @example `<ya-map [center]=\"[55.751952, 37.600739]\" [state]=\"{type: 'yandex#satellite'}\"></ya-map>`.\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/components/map}\r\n */\r\nclass YaMapComponent {\r\n    constructor(_ngZone, _scriptService) {\r\n        this._ngZone = _ngZone;\r\n        this._scriptService = _scriptService;\r\n        /**\r\n         * Map zoom level.\r\n         */\r\n        this.zoom = 10;\r\n        /**\r\n         * States for the map.\r\n         * @see {@link https://tech.yandex.ru/maps/jsapi/doc/2.1/ref/reference/Map-docpage/#Mapparam-state}\r\n         */\r\n        this.state = {};\r\n        /**\r\n         * Options for the map.\r\n         * @see {@link https://tech.yandex.ru/maps/jsapi/doc/2.1/ref/reference/Map-docpage/#Mapparam-options}\r\n         */\r\n        this.options = {};\r\n        /**\r\n         * Emits immediately after this entity is added in root container.\r\n         */\r\n        this.load = new EventEmitter();\r\n        /**\r\n         * Smooth map movement.\r\n         */\r\n        this.action = new EventEmitter();\r\n        /**\r\n         * Actions with the balloon.\r\n         */\r\n        this.balloon = new EventEmitter();\r\n        /**\r\n         * Left-click on the object.\r\n         */\r\n        this.yaclick = new EventEmitter();\r\n        /**\r\n         * Actions with the hint.\r\n         */\r\n        this.hint = new EventEmitter();\r\n        /**\r\n         * Mouse actions with the object.\r\n         */\r\n        this.mouse = new EventEmitter();\r\n        /**\r\n         * Multitouch actions with the object.\r\n         */\r\n        this.multitouch = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this._sub = new Subscription();\r\n        this._logErrors();\r\n        this._initScript();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._updateMap(changes);\r\n    }\r\n    /**\r\n     * Method for dynamic Map configuration.\r\n     * Handles input changes and provides it to API.\r\n     * @param changes\r\n     */\r\n    _updateMap(changes) {\r\n        const map = this._map;\r\n        if (!map)\r\n            return;\r\n        const { center, zoom, state, options } = changes;\r\n        if (center) {\r\n            map.setCenter(center.currentValue);\r\n        }\r\n        if (zoom) {\r\n            map.setZoom(zoom.currentValue);\r\n        }\r\n        if (state) {\r\n            this._setState(state.currentValue, map);\r\n        }\r\n        if (options) {\r\n            map.options.set(options.currentValue);\r\n        }\r\n    }\r\n    /**\r\n     * Destructs state and provides new values to API.\r\n     * @param state\r\n     * @param map\r\n     */\r\n    _setState(state, map) {\r\n        const { behaviors, bounds, center, controls, margin, type, zoom } = state;\r\n        if (behaviors) {\r\n            map.behaviors.enable(behaviors);\r\n        }\r\n        if (bounds) {\r\n            map.setBounds(bounds);\r\n        }\r\n        if (center) {\r\n            map.setCenter(center);\r\n        }\r\n        if (controls) {\r\n            /**\r\n             * Wrong typings in DefinitelyTyped.\r\n             */\r\n            controls.forEach((c) => map.controls.add(c));\r\n        }\r\n        if (margin) {\r\n            map.margin.setDefaultMargin(margin);\r\n        }\r\n        if (type) {\r\n            map.setType(type);\r\n        }\r\n        if (zoom) {\r\n            map.setZoom(zoom);\r\n        }\r\n    }\r\n    _logErrors() {\r\n        if (!this.center && !this.onlyInstance) {\r\n            console.error('Map: center input is required.');\r\n            this.center = [];\r\n        }\r\n    }\r\n    _initScript() {\r\n        const sub = this._scriptService.initScript().subscribe(() => {\r\n            if (this.onlyInstance) {\r\n                this.load.emit({ ymaps });\r\n                return;\r\n            }\r\n            const id = generateRandomId();\r\n            this._map = this._createMap(id);\r\n            this._addGeoObjects();\r\n            this._addControls();\r\n            this._addEventListeners();\r\n        });\r\n        this._sub.add(sub);\r\n    }\r\n    /**\r\n     * Creates map.\r\n     * @param id ID which will be set to the map container.\r\n     */\r\n    _createMap(id) {\r\n        const containerElem = this.mapContainer.nativeElement;\r\n        containerElem.setAttribute('id', id);\r\n        containerElem.style.cssText = 'width: 100%; height: 100%;';\r\n        return new ymaps.Map(id, Object.assign(Object.assign({}, this.state), { zoom: this.zoom, center: this.center }), this.options);\r\n    }\r\n    /**\r\n     * Adds GeoObject to the Map on ContentChildren changes.\r\n     */\r\n    _addGeoObjects() {\r\n        const map = this._map;\r\n        // Placemarks (async)\r\n        const placemarksSub = this.placemarks.changes\r\n            .pipe(startWith(this.placemarks))\r\n            .subscribe((list) => {\r\n            list.forEach((placemark) => {\r\n                if (!placemark.id) {\r\n                    const p = placemark.createPlacemark(map);\r\n                    map.geoObjects.add(p);\r\n                }\r\n            });\r\n        });\r\n        this._sub.add(placemarksSub);\r\n        // Multiroutes (async)\r\n        const multiroutesSub = this.multiroutes.changes\r\n            .pipe(startWith(this.multiroutes))\r\n            .subscribe((list) => {\r\n            list.forEach((multiroute) => {\r\n                if (!multiroute.id) {\r\n                    const m = multiroute.createMultiroute(map);\r\n                    map.geoObjects.add(m);\r\n                }\r\n            });\r\n        });\r\n        this._sub.add(multiroutesSub);\r\n        // GeoObjects (async)\r\n        const geoObjectsSub = this.geoObjects.changes\r\n            .pipe(startWith(this.geoObjects))\r\n            .subscribe((list) => {\r\n            list.forEach((geoObject) => {\r\n                if (!geoObject.id) {\r\n                    const g = geoObject.createGeoObject(map);\r\n                    map.geoObjects.add(g);\r\n                }\r\n            });\r\n        });\r\n        this._sub.add(geoObjectsSub);\r\n        // Clusterers (not async)\r\n        this.clusterers.forEach((clusterer) => {\r\n            const c = clusterer.createClusterer(map);\r\n            /**\r\n             * Wrong typings in DefinitelyTyped.\r\n             */\r\n            map.geoObjects.add(c);\r\n        });\r\n    }\r\n    /**\r\n     * Adds controls to the Map.\r\n     */\r\n    _addControls() {\r\n        this.controls.forEach((control) => {\r\n            const c = control.createControl();\r\n            this._map.controls.add(c);\r\n        });\r\n    }\r\n    /**\r\n     * Adds listeners on the Map events.\r\n     */\r\n    _addEventListeners() {\r\n        const map = this._map;\r\n        this._ngZone.run(() => this.load.emit({ ymaps, instance: map }));\r\n        const handlers = [\r\n            {\r\n                name: ['actionbegin', 'actionend'],\r\n                fn: (e) => this.action.emit({\r\n                    ymaps,\r\n                    instance: map,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['balloonopen', 'balloonclose'],\r\n                fn: (e) => this.balloon.emit({\r\n                    ymaps,\r\n                    instance: map,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['click', 'dblclick'],\r\n                fn: (e) => this.yaclick.emit({\r\n                    ymaps,\r\n                    instance: map,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['hintopen', 'hintclose'],\r\n                fn: (e) => this.hint.emit({\r\n                    ymaps,\r\n                    instance: map,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseup'],\r\n                fn: (e) => this.mouse.emit({\r\n                    ymaps,\r\n                    instance: map,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n                runOutsideAngular: true,\r\n            },\r\n            {\r\n                name: ['multitouchstart', 'multitouchmove', 'multitouchend'],\r\n                fn: (e) => this.multitouch.emit({\r\n                    ymaps,\r\n                    instance: map,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n                runOutsideAngular: true,\r\n            },\r\n        ];\r\n        /**\r\n         * Mouse and multitouch events should be run outside angular for better perfomance.\r\n         * @see {@link https://github.com/ddubrava/angular8-yandex-maps/issues/35}\r\n         */\r\n        handlers.forEach((handler) => {\r\n            map.events.add(handler.name, (e) => handler.runOutsideAngular\r\n                ? this._ngZone.runOutsideAngular(() => handler.fn(e))\r\n                : this._ngZone.run(() => handler.fn(e)));\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._sub.unsubscribe();\r\n    }\r\n}\nYaMapComponent.ɵfac = function YaMapComponent_Factory(t) { return new (t || YaMapComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ScriptService)); };\nYaMapComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: YaMapComponent, selectors: [[\"ya-map\"]], contentQueries: function YaMapComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, YaPlacemarkComponent, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, YaMultirouteComponent, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, YaGeoObjectComponent, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, YaControlComponent, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, YaClustererComponent, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.placemarks = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiroutes = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.geoObjects = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.controls = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.clusterers = _t);\n    } }, viewQuery: function YaMapComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mapContainer = _t.first);\n    } }, inputs: { zoom: \"zoom\", state: \"state\", options: \"options\", center: \"center\", onlyInstance: \"onlyInstance\" }, outputs: { load: \"load\", action: \"action\", balloon: \"balloon\", yaclick: \"yaclick\", hint: \"hint\", mouse: \"mouse\", multitouch: \"multitouch\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"container\", \"\"]], template: function YaMapComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } }, styles: [\"\"] });\r\nYaMapComponent.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: ScriptService }\r\n];\r\nYaMapComponent.propDecorators = {\r\n    mapContainer: [{ type: ViewChild, args: ['container',] }],\r\n    placemarks: [{ type: ContentChildren, args: [YaPlacemarkComponent,] }],\r\n    multiroutes: [{ type: ContentChildren, args: [YaMultirouteComponent,] }],\r\n    geoObjects: [{ type: ContentChildren, args: [YaGeoObjectComponent,] }],\r\n    controls: [{ type: ContentChildren, args: [YaControlComponent,] }],\r\n    clusterers: [{ type: ContentChildren, args: [YaClustererComponent,] }],\r\n    onlyInstance: [{ type: Input }],\r\n    center: [{ type: Input }],\r\n    zoom: [{ type: Input }],\r\n    state: [{ type: Input }],\r\n    options: [{ type: Input }],\r\n    load: [{ type: Output }],\r\n    action: [{ type: Output }],\r\n    balloon: [{ type: Output }],\r\n    yaclick: [{ type: Output }],\r\n    hint: [{ type: Output }],\r\n    mouse: [{ type: Output }],\r\n    multitouch: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(YaMapComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ya-map',\n                template: \"<div #container></div>\\n\",\n                styles: [\"\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ScriptService }]; }, { zoom: [{\n            type: Input\n        }], state: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], load: [{\n            type: Output\n        }], action: [{\n            type: Output\n        }], balloon: [{\n            type: Output\n        }], yaclick: [{\n            type: Output\n        }], hint: [{\n            type: Output\n        }], mouse: [{\n            type: Output\n        }], multitouch: [{\n            type: Output\n        }], center: [{\n            type: Input\n        }], mapContainer: [{\n            type: ViewChild,\n            args: ['container']\n        }], placemarks: [{\n            type: ContentChildren,\n            args: [YaPlacemarkComponent]\n        }], multiroutes: [{\n            type: ContentChildren,\n            args: [YaMultirouteComponent]\n        }], geoObjects: [{\n            type: ContentChildren,\n            args: [YaGeoObjectComponent]\n        }], controls: [{\n            type: ContentChildren,\n            args: [YaControlComponent]\n        }], clusterers: [{\n            type: ContentChildren,\n            args: [YaClustererComponent]\n        }], onlyInstance: [{\n            type: Input\n        }] }); })();\n\n/**\r\n * Component for creating and controlling the panorama player.\r\n *\r\n * @example `<ya-panorama [point]=\"[59.938557, 30.316198]\" layer=\"yandex#airPanorama\"></ya-panorama>`.\r\n * @see {@link https://ddubrava.github.io/angular8-yandex-maps/#/components/panorama}\r\n */\r\nclass YaPanoramaComponent {\r\n    constructor(_ngZone, _scriptService) {\r\n        this._ngZone = _ngZone;\r\n        this._scriptService = _scriptService;\r\n        /**\r\n         * Emits immediately after this entity is added in root container.\r\n         */\r\n        this.load = new EventEmitter();\r\n        /**\r\n         * The view direction changed.\r\n         */\r\n        this.direction = new EventEmitter();\r\n        /**\r\n         * The panorama player screen mode is switched.\r\n         */\r\n        this.fullscreen = new EventEmitter();\r\n        /**\r\n         * Actions with the marker.\r\n         */\r\n        this.marker = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this._sub = new Subscription();\r\n        this._logErrors();\r\n        this._initScript();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._updatePanorama(changes);\r\n    }\r\n    /**\r\n     * Method for dynamic Panorama configuration.\r\n     * Handles input changes and provides it to API.\r\n     * @param changes\r\n     */\r\n    _updatePanorama(changes) {\r\n        const player = this._player;\r\n        if (!player)\r\n            return;\r\n        const { point, layer, options } = changes;\r\n        if (point) {\r\n            player.moveTo(point.currentValue, layer ? { layer: layer.currentValue } : {});\r\n        }\r\n        if (layer && !point) {\r\n            console.error('Panorama: You cannot change the layer without point');\r\n        }\r\n        if (options) {\r\n            console.error(removeLeadingSpaces(`\n        The options of Panorama cannot be changed after entity init.\n\n        Solutions:\n        1. Use ymaps from ILoadEvent\n        2. Recreate Panorama component with new options\n      `));\r\n        }\r\n    }\r\n    _logErrors() {\r\n        if (!this.point) {\r\n            console.error('Panorama: point input is required.');\r\n            this.point = [];\r\n        }\r\n    }\r\n    _initScript() {\r\n        const sub = this._scriptService.initScript().subscribe(() => {\r\n            const id = generateRandomId();\r\n            this._createPanorama(id);\r\n        });\r\n        this._sub.add(sub);\r\n    }\r\n    /**\r\n     * Creates panorama with the player.\r\n     * @param id ID which will be set to the panorama container.\r\n     */\r\n    _createPanorama(id) {\r\n        const containerElem = this.panoramaContainer.nativeElement;\r\n        containerElem.setAttribute('id', id);\r\n        containerElem.style.cssText = 'width: 100%; height: 100%;';\r\n        /**\r\n         * Wrong typings in DefinitelyTyped.\r\n         */\r\n        ymaps.panorama\r\n            .locate(this.point, { layer: this.layer })\r\n            .then((panorama) => {\r\n            const player = new ymaps.panorama.Player(id, panorama[0], this.options);\r\n            this._player = player;\r\n            this.addEventListeners();\r\n        });\r\n    }\r\n    /**\r\n     * Adds listeners on the Panorama events.\r\n     */\r\n    addEventListeners() {\r\n        const player = this._player;\r\n        this._ngZone.run(() => this.load.emit({ ymaps, instance: player }));\r\n        const handlers = [\r\n            {\r\n                name: 'directionchange',\r\n                fn: (e) => this.direction.emit({\r\n                    ymaps,\r\n                    instance: player,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: ['fullscreenenter', 'fullscreenexit'],\r\n                fn: (e) => this.fullscreen.emit({\r\n                    ymaps,\r\n                    instance: player,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n            {\r\n                name: [\r\n                    'markercollapse',\r\n                    'markerexpand',\r\n                    'markermouseenter',\r\n                    'markermouseleave',\r\n                ],\r\n                fn: (e) => this.marker.emit({\r\n                    ymaps,\r\n                    instance: player,\r\n                    type: e.originalEvent.type,\r\n                    event: e,\r\n                }),\r\n            },\r\n        ];\r\n        handlers.forEach((handler) => {\r\n            player.events.add(handler.name, (e) => this._ngZone.run(() => handler.fn(e)));\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._sub.unsubscribe();\r\n    }\r\n}\nYaPanoramaComponent.ɵfac = function YaPanoramaComponent_Factory(t) { return new (t || YaPanoramaComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ScriptService)); };\nYaPanoramaComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: YaPanoramaComponent, selectors: [[\"ya-panorama\"]], viewQuery: function YaPanoramaComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panoramaContainer = _t.first);\n    } }, inputs: { point: \"point\", layer: \"layer\", options: \"options\" }, outputs: { load: \"load\", direction: \"direction\", fullscreen: \"fullscreen\", marker: \"marker\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"container\", \"\"]], template: function YaPanoramaComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } }, styles: [\"\"] });\r\nYaPanoramaComponent.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: ScriptService }\r\n];\r\nYaPanoramaComponent.propDecorators = {\r\n    panoramaContainer: [{ type: ViewChild, args: ['container',] }],\r\n    point: [{ type: Input }],\r\n    layer: [{ type: Input }],\r\n    options: [{ type: Input }],\r\n    load: [{ type: Output }],\r\n    direction: [{ type: Output }],\r\n    fullscreen: [{ type: Output }],\r\n    marker: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(YaPanoramaComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ya-panorama',\n                template: \"<div #container></div>\\n\",\n                styles: [\"\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ScriptService }]; }, { load: [{\n            type: Output\n        }], direction: [{\n            type: Output\n        }], fullscreen: [{\n            type: Output\n        }], marker: [{\n            type: Output\n        }], point: [{\n            type: Input\n        }], panoramaContainer: [{\n            type: ViewChild,\n            args: ['container']\n        }], layer: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\nclass AngularYandexMapsModule {\r\n    /**\r\n     * Please use this method when you register the module at the root level\r\n     * @param config\r\n     */\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: AngularYandexMapsModule,\r\n            providers: [{ provide: YA_MAP_CONFIG, useValue: config }],\r\n        };\r\n    }\r\n}\nAngularYandexMapsModule.ɵfac = function AngularYandexMapsModule_Factory(t) { return new (t || AngularYandexMapsModule)(); };\nAngularYandexMapsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AngularYandexMapsModule });\nAngularYandexMapsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularYandexMapsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    YaClustererComponent,\n                    YaControlComponent,\n                    YaGeoObjectComponent,\n                    YaMapComponent,\n                    YaMultirouteComponent,\n                    YaPanoramaComponent,\n                    YaPlacemarkComponent,\n                ],\n                imports: [CommonModule],\n                exports: [\n                    YaClustererComponent,\n                    YaControlComponent,\n                    YaGeoObjectComponent,\n                    YaMapComponent,\n                    YaMultirouteComponent,\n                    YaPanoramaComponent,\n                    YaPlacemarkComponent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularYandexMapsModule, { declarations: function () { return [YaClustererComponent, YaControlComponent, YaGeoObjectComponent, YaMapComponent, YaMultirouteComponent, YaPanoramaComponent, YaPlacemarkComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [YaClustererComponent, YaControlComponent, YaGeoObjectComponent, YaMapComponent, YaMultirouteComponent, YaPanoramaComponent, YaPlacemarkComponent]; } }); })();\n\n/*\r\n * Public API Surface of angular8-yandex-maps\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AngularYandexMapsModule, ScriptService, YA_MAP_CONFIG, YaClustererComponent, YaControlComponent, YaGeoObjectComponent, YaMapComponent, YaMultirouteComponent, YaPanoramaComponent, YaPlacemarkComponent };\n\n//# sourceMappingURL=angular8-yandex-maps.js.map","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { IEventViewFull } from '@api/schemas/event/event-view-full.interface';\nimport { EventsService } from '@api/routes/events.service';\nimport { Observable } from 'rxjs';\nimport { notFound } from '@shared/utils/not-found.operator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsResolverService implements Resolve<IEventViewFull> {\n  constructor(\n    private readonly eventsService: EventsService,\n    private readonly router: Router\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IEventViewFull> {\n    return this.eventsService.getSingle$(+route.params.id).pipe(notFound(this.router));\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IUserViewBase } from '@api/schemas/user/user-view-base.interface';\n\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserInfoComponent {\n  @Input() public user: IUserViewBase;\n}\n","<div class=\"v-center\">\n    <a [routerLink]=\"user ? (user | accountUrl) : ''\" class=\"v-center\">\n        <app-ui-icon class=\"margin-right-10\" [src]=\"user?.info.picture\" [textAlternative]=\"user ? (user.info | personName) : ''\"></app-ui-icon>\n        <span class=\"subtitle-1\">{{ user ? (user.info | personName) : '' }}</span>\n    </a>\n</div>\n","import { OperatorFunction, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nexport function notFound(router: Router): OperatorFunction<any, any> {\n    return catchError((error: HttpErrorResponse) => {\n        if (error.status === 404 || error.status === 422) {\n            router.navigateByUrl('/404');\n        }\n        return throwError(error);\n    });\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ICompanyViewFull } from '@api/schemas/company/company-view-full.interface';\nimport { EventCurrencyEnum } from '@api/schemas/event/event-currency.enum';\nimport { SessionService } from '@app/services/session.service';\nimport { UserDropdownService } from '@layout/shared/services/user-dropdown.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { } from 'angular8-yandex-maps';\nimport { takeUntil } from 'rxjs/operators';\nimport { IEventViewFull } from '@api/schemas/event/event-view-full.interface';\nimport { EventsService } from '@api/routes/events.service';\nimport { PublicationStageEnum } from '@api/schemas/article/publication-stage.enum';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-event-page',\n  templateUrl: './event-page.component.html',\n  styleUrls: ['./event-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EventPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  @Input() public event: IEventViewFull;\n  @Input() public company: ICompanyViewFull;\n  @Input() public own: boolean;\n\n  public readonly publicationStageEnum: typeof PublicationStageEnum = PublicationStageEnum;\n\n  public share: boolean;\n  public shareBody: string;\n  public linkVk: string;\n  public linkFb: string;\n  public linkTw: string;\n  public linkIn: string;\n  public linkTg: string;\n\n  public pipeLng: string = this.translateService.currentLang === 'ru' ? 'ru_RU' : 'en_US';\n\n  public get price(): string {\n    switch (this.event.info.currency) {\n      case EventCurrencyEnum.FREE:\n        return this.translateService.instant('COMMON.FREE');\n      case EventCurrencyEnum.EUR:\n        return this.event.info.price ? `€${this.event.info.price}` : null;\n      case EventCurrencyEnum.USD:\n        return this.event.info.price ? `$${this.event.info.price}` : null;\n      case EventCurrencyEnum.RUB:\n        return this.event.info.price ? `${this.event.info.price} ₽` : null;\n      case EventCurrencyEnum.NONE:\n        return null;\n    }\n  }\n\n  public get dateWithTime(): boolean {\n    return (this.event.info.date % 10) === 0;\n  }\n\n  constructor(\n    private readonly eventsService: EventsService,\n    private readonly sessionService: SessionService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly translateService: TranslateService,\n    public readonly router: Router,\n    public readonly userDropdown: UserDropdownService,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.shareBody = 'https://ru.yachtsmanjournal.com' + this.router.url;\n    this.linkVk = 'https://vk.com/share.php?url=' + this.shareBody;\n    this.linkFb = 'https://www.facebook.com/sharer/sharer.php?u=' + this.shareBody;\n    this.linkTw = 'https://twitter.com/intent/tweet?url=' + this.shareBody;\n    this.linkIn = 'https://vk.com/share.php?url=' + this.shareBody;\n    this.linkTg = 'tg://msg_url?url=' + this.shareBody;\n  }\n\n  public goTo(url: string): void {\n    window.open(url, '_blank');\n  }\n\n  public bookmark(): void {\n    if (this.sessionService.loggedIn$.value) {\n      this.eventsService.bookmark$(this.event.meta.id, this.event.bookmarks.you).pipe(takeUntil(this.ngOnDestroy$))\n        .subscribe(() => {\n          this.event.bookmarks.you = !this.event.bookmarks.you;\n          this.event.bookmarks.count += this.event.bookmarks.you ? 1 : -1;\n          this.changeDetectorRef.markForCheck();\n        });\n    } else {\n      this.userDropdown.setShowDropdown(true);\n    }\n  }\n\n  public toggleShare(): void {\n    this.share = !this.share;\n  }\n}\n","<app-ui-card [shadow]='false'>\n  <header class=\"margin-bottom-20\">\n    <section class=\"v-center mobile-small\">\n      <app-user-info class=\"margin-right-20\" [user]=\"event.company\"></app-user-info>\n      <span *ngIf=\"event.info.publicationStage !== publicationStageEnum.PUBLISHED\" class=\"overline c-caption\">Не опубликовано</span>\n      <div class=\"v-center align-right without-margin\">\n        <span class=\"caption fade-3 margin-right-8\">{{ event.info.publishedAt | date:'d MMMM HH:mm' : null : pipeLng }}</span>\n        <svg name=\"bookmark\" class=\"f-gray icon clickable margin-right-8\" \n          [class.active]=\"event.bookmarks.you\" (click)=\"bookmark()\"></svg>\n        <app-share [url]=\"null | url\" class=\"margin-right-10\"></app-share>\n        <app-action-menu-event *appLoggedIn [data]=\"event\" [own]=\"own\" (gone)=\"this.router.navigate(['/events'])\"></app-action-menu-event>\n      </div>\n    </section>\n  </header>\n  <article class=\"margin-bottom-30\">\n    <section class=\"event-info margin-bottom-30\">\n      <h2 class=\"margin-bottom-20\">{{ event.info.name }}</h2>\n      <div class=\"fade-1 v-center mobile-small\">\n        <h6 *ngIf=\"event.info.city\">{{ event.info.city }}</h6>\n        <h6 *ngIf=\"event.info.date\">\n          {{ dateWithTime ? (event.info.date | date:'d MMMM HH:00' : null : pipeLng)\n          : (event.info.date | date:'d MMMM' : null : pipeLng) }}\n        </h6>\n        <h6 *ngIf=\"price\">{{ price }}</h6>\n        <a class=\"button-1 button\" [href]=\"event.body.registrationLink\" target=\"_blank\">\n          <span class=\"margin-right-4\">{{'COMMON.REGISTER' | translate}}</span>\n          <svg class=\"f-white icon\" name=\"calendar\"></svg>\n        </a>\n      </div>\n    </section>\n    <app-wysiwyg-editor [initialData]=\"event.body.html\" [readOnly]=\"true\"></app-wysiwyg-editor>\n    <section>\n      <h3>{{ event.info.name }}</h3>\n      <table class=\"fade-1 f-primary info-table\">\n        <tr *ngIf=\"event.info.date\">\n          <td><svg name=\"calendar\"></svg></td>\n          <td>\n            <h6>\n              {{ dateWithTime ? (event.info.date | date:(pipeLng === 'ru_RU' ? 'd MMMM в HH:00' : 'd MMMM in HH:00') : null : pipeLng)\n              : (event.info.date | date:'d MMMM' : null : pipeLng) }}\n            </h6>\n          </td>\n        </tr>\n        <tr>\n          <td><svg name=\"geo\"></svg></td>\n          <td><h6>{{ event.body.address }}</h6></td>\n        </tr>\n        <tr *ngIf=\"price\">\n          <td><svg name=\"star\"></svg></td>\n          <td><h6>{{ price ? price : 'Цена не указана' }}</h6></td>\n        </tr>\n        <tr>\n          <td colspan=\"2\">\n            <a class=\"button-1 button\" [href]=\"event.body.registrationLink\" target=\"_blank\">\n              <span class=\"margin-right-4\">{{'COMMON.REGISTER' | translate}}</span>\n              <svg class=\"f-white icon\" name=\"calendar\"></svg>\n            </a>\n          </td>\n        </tr>\n      </table>\n    </section>\n  </article>\n  <footer>\n    <section class=\"v-center margin-bottom-20\">\n      <div class=\"c-gray v-center margin-right-20 clickable\" (click)=\"bookmark()\">\n        <svg name=\"bookmark\" class=\"margin-right-4 icon f-gray\" [class.active]=\"event.bookmarks && event.bookmarks.you\"></svg>\n        <span class=\"subtitle-2\">{{ event.bookmarks.count }}</span>\n      </div>\n      <div class=\"v-center margin-right-20\">\n        <svg name=\"view\" class=\"margin-right-4 icon f-gray\"></svg>\n        <span class=\"subtitle-2 c-gray\">{{ event.views.count }}</span>\n      </div>\n      <app-share [url]=\"null | url\"></app-share>\n    </section>\n  </footer>\n</app-ui-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EventPageUnwrapComponent } from './event-page-unwrap.component';\nimport { EventsResolverService } from '@shared/services/events-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventPageUnwrapComponent,\n    resolve: { data: EventsResolverService }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { UserInfoComponent } from './user-info.component';\n\n\n\n@NgModule({\n  declarations: [UserInfoComponent],\n  imports: [CommonModule, SharedPipesModule, RouterModule, SharedUiModule],\n  exports: [UserInfoComponent],\n})\nexport class UserInfoModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EventPageRoutingModule } from './event-page-routing.module';\nimport { EventPageUnwrapComponent } from './event-page-unwrap.component';\nimport { EventPageComponent } from './event-page.component';\nimport { AngularYandexMapsModule } from 'angular8-yandex-maps';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { UserInfoModule } from '@shared/modules/user-info/user-info.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [EventPageUnwrapComponent, EventPageComponent],\n  imports: [\n    CommonModule,\n    EventPageRoutingModule,\n    SharedUiModule,\n    UserInfoModule,\n    SvgModule,\n    SharedComponentsModule,\n    SharedPipesModule,\n    CommonDirectivesModule,\n    SharedUiModule,\n    AngularYandexMapsModule,\n    TranslateModule.forChild(),\n  ],\n  exports: [EventPageUnwrapComponent],\n})\nexport class EventPageModule {}\n"],"sourceRoot":"webpack:///"}