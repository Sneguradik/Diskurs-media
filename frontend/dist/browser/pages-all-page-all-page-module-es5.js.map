{"version":3,"sources":["webpack:///src/app/modules/homepage/pages/all-page/all-page.module.ts","webpack:///src/app/modules/homepage/pages/all-page/all-page.component.ts","webpack:///src/app/modules/homepage/pages/all-page/all-page.component.html","webpack:///src/app/modules/homepage/pages/all-page/all-page-routing.module.ts"],"names":["AllPageModule","forChild","declarations","imports","AllPageComponent","activatedRoute","administrationService","feedService","topicsService","advertisementService","platformService","sidebarWrapperService","homepageService","responsive","translateService","socialLoginService","pageable","fetch$","bind","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","feedSource$","ALL","setOptionsWithReset$","order","TIME","isServer","content","snapshot","data","feed","globalThis","window","location","hash","includes","loginWithTg","ngOnDestroy","NONE","onHide","splice","findIndex","item","meta","id","selector","templateUrl","styleUrls","routes","path","component","resolve","AllPageRoutingModule","exports"],"mappings":"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","file":"pages-all-page-all-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AllPageRoutingModule } from './all-page-routing.module';\nimport { AllPageComponent } from './all-page.component';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { FeedModule } from '@shared/modules/feed/feed.module';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { ShortEventListModule } from '@shared/modules/short-event-list/short-event-list.module';\nimport { ShortJobListModule } from '@shared/modules/short-job-list/short-job-list.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [AllPageComponent],\n  imports: [\n    CommonModule,\n    AllPageRoutingModule,\n    SharedComponentsModule,\n    FeedModule,\n    SvgModule,\n    ShortEventListModule,\n    ShortJobListModule,\n    TranslateModule.forChild()\n  ]\n})\nexport class AllPageModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { FeedSourceEnum } from '@shared/enums/feed-source.enum';\nimport { IFeedParams } from '@api/schemas/feed/feed-params.interface';\nimport { FeedOrderEnum } from '@api/schemas/feed/feed-order.enum';\nimport { HomepageService } from '@shared/services/homepage.service';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { PageableContent } from '@shared/classes/pageable-conetnt.class';\nimport { FeedService } from '@api/routes/feed.service';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { FeedComponent } from '@shared/classes/feed-component.class';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { AdvertisementService } from '@api/routes/advertisement.service';\nimport { PlatformService } from '@shared/services/platform.service';\nimport { ResponsiveService } from '@app/services/responsive.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SocialLoginService } from '@layout/shared/services/social-login/social-login.service';\n\n@Component({\n  selector: 'app-all-page',\n  templateUrl: './all-page.component.html',\n  styleUrls: ['./all-page.component.scss']\n})\nexport class AllPageComponent extends FeedComponent implements OnInit, OnDestroy {\n  public readonly pageable: PageableContent<[IArticleView, ITopicView], IFeedParams> =\n    new PageableContent<[IArticleView, ITopicView], IFeedParams>(this.fetch$.bind(this));\n\n  constructor(\n    activatedRoute: ActivatedRoute,\n    administrationService: AdministrationService,\n    protected readonly feedService: FeedService,\n    protected readonly topicsService: TopicsService,\n    protected readonly advertisementService: AdvertisementService,\n    protected readonly platformService: PlatformService,\n    private readonly sidebarWrapperService: SidebarWrapperService,\n    private readonly homepageService: HomepageService,\n    public readonly responsive: ResponsiveService,\n    protected readonly translateService: TranslateService,\n    private readonly socialLoginService: SocialLoginService\n  ) {\n    super(feedService, topicsService, administrationService, activatedRoute, advertisementService, platformService);\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({\n        article: false,\n        trending: true,\n        navigation: true,\n        live: true,\n        showSidebar: true\n      });\n    });\n\n    super.ngOnInit();\n\n    this.homepageService.feedSource$.next(FeedSourceEnum.ALL);\n    this.pageable.setOptionsWithReset$({ order: FeedOrderEnum.TIME });\n\n    if (this.platformService.isServer) {\n      this.pageable.content = this.activatedRoute.snapshot.data.feed;\n    }\n\n    if (globalThis.window && window.location.hash.includes('tgAuthResult')) {\n      this.socialLoginService.loginWithTg();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.homepageService.feedSource$.next(FeedSourceEnum.NONE);\n    super.ngOnDestroy();\n  }\n\n  public onHide(article: IArticleView): void {\n    this.pageable.content.splice(\n      this.pageable.content.findIndex((item: [IArticleView, ITopicView]) => item[0].meta.id === article.meta.id),\n      1,\n    );\n  }\n}\n","<ul class=\"block-card item-space-20 no-empty\">\n    <li *ngFor=\"let item of pageable.content; let i = index\">\n        <app-feed-article-view [data]=\"item[0]\"\n                               [topic]=\"item[1]\"\n                               [options]=\"{ pictureOn: true, menuOn: true }\"\n                               (gone)=\"onHide($event)\">\n        </app-feed-article-view>\n        <div #adElem1 (click)=\"adClicked(0)\" class=\"ad\" *ngIf=\"(ads && ads[0].content && ads[0].content[0]) && ads[0].content[adNums[0]].afterPublication - 1 === i\">\n            <ng-container [ngTemplateOutlet]=\"addContainer\" [ngTemplateOutletContext]=\"{ src: ads[0].content[adNums[0]].picture, text: ads[0].content[adNums[0]].text }\"></ng-container>\n        </div>\n        <div #adElem2 (click)=\"adClicked(1)\" class=\"ad\" *ngIf=\"(ads && ads[1].content && ads[1].content[0]) && ads[1].content[adNums[1]].afterPublication - 1 === i\">\n            <ng-container [ngTemplateOutlet]=\"addContainer\" [ngTemplateOutletContext]=\"{ src: ads[1].content[adNums[1]].picture, text: ads[1].content[adNums[1]].text }\"></ng-container>\n        </div>\n        <div #adElem3 (click)=\"adClicked(2)\" class=\"ad\" *ngIf=\"(ads && ads[2].content && ads[2].content[0]) && ads[2].content[adNums[2]].afterPublication - 1 === i\">\n            <ng-container [ngTemplateOutlet]=\"addContainer\" [ngTemplateOutletContext]=\"{ src: ads[2].content[adNums[2]].picture, text: ads[2].content[adNums[2]].text }\"></ng-container>\n        </div>\n        <app-events *ngIf=\"(i + 1) === eventsJobs?.firstView.events && eventsJobs?.publications.events\" [page]=\"0\" [blueClass]=\"'blue-events'\"></app-events>\n        <app-events *ngIf=\"(i + 1) === eventsJobs?.secondView.events && eventsJobs?.publications.events\" [page]=\"1\" [blueClass]=\"'blue-events'\"></app-events>\n        <app-events *ngIf=\"(i + 1) === eventsJobs?.thirdView.events && eventsJobs?.publications.events\" [page]=\"2\" [blueClass]=\"'blue-events'\"></app-events>\n        <app-jobs *ngIf=\"(i + 1) === eventsJobs?.firstView.jobs && eventsJobs?.publications.jobs\" [page]=\"0\"></app-jobs>\n        <app-jobs *ngIf=\"(i + 1) === eventsJobs?.secondView.jobs && eventsJobs?.publications.jobs\" [page]=\"1\"></app-jobs>\n        <app-jobs *ngIf=\"(i + 1) === eventsJobs?.thirdView.jobs && eventsJobs?.publications.jobs\" [page]=\"2\"></app-jobs>\n    </li>\n</ul>\n\n<app-pagination [pageable]=\"pageable\" [fireFirstPage]=\"true\"></app-pagination>\n\n<ng-template #addContainer let-src=\"src\" let-text=\"text\">\n    <img [src]=\"src\" alt=\"\">\n    <div class=\"ad-container\">\n        <div class=\"ad-btn\" *ngIf=\"!(responsive.lt.medium | async)\">\n            <span>{{ text }}</span>\n            <svg name=\"chevron/right\" size=\"25\" fill=\"#92929D\"></svg>\n        </div>\n    </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllPageComponent } from './all-page.component';\nimport { FeedResolverService } from '@shared/services/feed-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllPageComponent,\n    resolve: { feed: FeedResolverService }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AllPageRoutingModule { }\n"]}