{"version":3,"sources":["./src/app/shared/services/users-resolver.service.ts","./src/app/modules/user/user-header/user-header.component.ts","./src/app/modules/user/user-header/user-header.component.html","./src/app/shared/utils/id-map.operator.ts","./src/app/modules/user/user-header/user-header.module.ts"],"names":[],"mappings":"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","file":"default~pages-user-comments-page-user-comments-page-module~pages-user-drafts-page-user-drafts-page-m~a99588bb-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { UsersService } from '@api/routes/users.service';\nimport { Observable } from 'rxjs';\nimport { notFound } from '@shared/utils/not-found.operator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersResolverService implements Resolve<IUserViewFull> {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly router: Router\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IUserViewFull> {\n    return this.usersService.getSingle$(route.params.id).pipe(notFound(this.router));\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UsersService } from '@api/routes/users.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SessionService } from '@app/services/session.service';\nimport { Observable, combineLatest, ReplaySubject } from 'rxjs';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { takeUntil, map, filter, switchMap, tap, mergeMap } from 'rxjs/operators';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { FeedService } from '@api/routes/feed.service';\nimport { CompaniesService } from '@api/routes/companies.service';\nimport { PublicationStageEnum } from '@api/schemas/article/publication-stage.enum';\nimport { NotificationUpdateService } from '@shared/services/notification-update.service';\nimport { PermissionService } from '@app/services/permission/permission.service';\nimport { DynamicMetaTagsService } from '@layout/dynamic-meta-tags/dynamic-meta-tags.service';\nimport { IUserView } from '@api/schemas/user/user-view.interface';\nimport { environment } from '@env';\nimport { idMap } from '@shared/utils/id-map.operator';\nimport { EventsService } from '@api/routes/events.service';\nimport { JobsService } from '@api/routes/jobs.service';\nimport { IEventView } from '@api/schemas/event/event-view.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { IJobView } from '@api/schemas/job/job-view.interface';\nimport { HeaderStatsSyncService } from '@layout/shared/services/header-stats-sync.service';\nimport { Select } from '@ngxs/store';\nimport { USER_STATS_STATE_TOKEN } from '@app/store/user-stats/user-stats.state';\nimport { IUserStatsState } from '@app/store/user-stats/interfaces/user-stats-state.interface';\n\n@Component({\n  selector: 'app-user-header',\n  templateUrl: './user-header.component.html',\n  styleUrls: ['./user-header.component.scss']\n})\nexport class UserHeaderComponent extends AbstractComponent implements OnInit, OnDestroy {\n  @Select(USER_STATS_STATE_TOKEN) public stats$: Observable<IUserStatsState>;\n\n  public readonly commentCount$: ReplaySubject<number> = new ReplaySubject<number>(1);\n  public readonly draftCount$: ReplaySubject<number> = new ReplaySubject<number>(1);\n  public readonly promotedCount$: ReplaySubject<number> = new ReplaySubject<number>(1);\n  public readonly isMe$: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n\n  public user$: Observable<IUserViewFull>;\n  public me$: Observable<boolean>;\n  public idOrName$: Observable<string | number>;\n  public id$: Observable<number>;\n\n  public authorInfo: IUserViewFull;\n  public isMe: boolean;\n  public url: string;\n\n  public unreadCount = 0;\n\n  public eventCount$: Observable<number>;\n  public jobCount$: Observable<number>;\n\n  constructor(\n    protected readonly usersService: UsersService,\n    protected readonly sessionService: SessionService,\n    private readonly feedService: FeedService,\n    private readonly companiesService: CompaniesService,\n    private readonly dynamicMetaTagsService: DynamicMetaTagsService,\n    private readonly eventsService: EventsService,\n    private readonly jobsService: JobsService,\n    public readonly headerStatsSyncService: HeaderStatsSyncService,\n    public readonly router: Router,\n    public readonly perms: PermissionService,\n    public readonly notificationUpdateService: NotificationUpdateService,\n    public readonly activatedRoute: ActivatedRoute\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.setCoreParams();\n    this.setParams();\n    this.getMainData();\n  }\n\n  ngOnDestroy(): void {\n    this.dynamicMetaTagsService.setToDefault();\n    super.ngOnDestroy();\n  }\n\n  private setCoreParams(): void {\n    this.idOrName$ = this.activatedRoute.paramMap.pipe(\n      tap(() => {\n        const urlArray: string[] = this.router.url.split('/');\n        this.url = '/' + urlArray[1] + '/' + urlArray[2];\n      }),\n      idMap()\n    );\n    this.user$ = this.idOrName$.pipe(mergeMap((id: string | number) => this.usersService.getSingle$(id)), tap(() => this.getMainData()));\n    this.id$ = this.user$.pipe(map((user: IUserViewFull) => user.meta.id));\n    this.me$ = combineLatest([this.idOrName$, this.sessionService.user$]).pipe(\n      map(([id, user]: [string | number, IUserViewFull]) => {\n        return (user && id === 'me') || id === user.info.username || id === user.meta.id;\n      }),\n    );\n  }\n\n  private setParams(): void {\n    this.id$.pipe(\n      switchMap((id: number) => this.usersService.commentCount$(id)),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(this.commentCount$);\n    const pageId$ = combineLatest([this.sessionService.user$, this.id$]);\n    pageId$.pipe(\n      filter(([me, id]: [IUserViewFull, number]) => me.meta.id === id),\n      switchMap(([, id]: [any, number]) => this.feedService.count$({ author: id, stage: [PublicationStageEnum.DRAFT] })),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(this.draftCount$);\n    this.id$.pipe(\n      switchMap((author: number) => combineLatest([\n        this.feedService.count$({ bookmark: true, bookmarked: author }),\n        this.eventsService.getBookmarked$(author, 0),\n        this.jobsService.getBookmarked$(author, 0)\n      ])),\n      map(([articles, events, jobs]: [number, IPageResponse<IEventView>, IPageResponse<IJobView>]) =>\n        articles + events.total + jobs.total),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(this.promotedCount$);\n    this.user$.pipe(takeUntil(this.ngOnDestroy$)).subscribe((user: IUserViewFull) => {\n      this.authorInfo = user;\n      this.isMe = this.sessionService.loggedIn$.value && user.meta.id === this.sessionService.userId;\n      if (user.info.company) {\n        this.headerStatsSyncService.subEvent$.pipe(\n          filter(([type, id, ]: ['topic' | 'company', number, boolean]) => type === 'company' && id === this.authorInfo.meta.id),\n          tap(([, , status]: ['topic' | 'company', number, boolean]) => this.authorInfo = {\n            ...this.authorInfo,\n            subscribers: {\n              ...this.authorInfo.subscribers,\n              you: status,\n            }\n          }),\n          takeUntil(this.ngOnDestroy$)\n        ).subscribe();\n      }\n      if (user.info.company.isCompany || user.roles?.includes('ROLE_SUPERUSER')) {\n        this.jobCount$ = this.companiesService.jobCountNew$(user.meta.id);\n        this.eventCount$ = this.companiesService.eventCount$(user.meta.id);\n      } else {\n        this.jobCount$ = null;\n        this.eventCount$ = null;\n      }\n      if (this.isMe) {\n        this.notificationUpdateService.update();\n      }\n    });\n    combineLatest([this.user$, this.sessionService.user$]).pipe(\n      map(([page, user]: [IUserViewFull, IUserViewFull]) => page?.meta.id === user?.meta.id),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe((isMe: boolean) => {\n      this.isMe$.next(isMe);\n    });\n  }\n\n  private getMainData(): void {\n    const user: IUserView = this.activatedRoute.snapshot.data.data;\n    this.dynamicMetaTagsService.metaInfo$.next({\n      title: user.info.username,\n      tags: [\n        { property: 'og:title', content: user.info.username },\n        { name: 'description', content: user.info.bio },\n        { property: 'og:description', content: user.info.bio },\n        { property: 'og:image', content: user.info.picture },\n        { property: 'og:url', content: environment.url + this.router.url },\n        { property: 'og:type', content: 'website' },\n        { property: 'og:site_name', content: 'Diskurs.Media' },\n        { name: 'twitter:card', content: 'summary' },\n        { name: 'twitter:title', content: user.info.username },\n        { name: 'twitter:description', content: user.info.bio },\n        { name: 'twitter:image', content: user.info.picture }\n      ]\n    });\n  }\n\n  public subFunc(): void {\n    this.usersService.subscribe$(this.authorInfo.meta.id, this.authorInfo.subscribers.you).pipe(takeUntil(this.ngOnDestroy$)).subscribe();\n    this.authorInfo = {\n      ...this.authorInfo,\n      subscribers: {\n        ...this.authorInfo.subscribers,\n        you: !this.authorInfo.subscribers.you,\n      },\n    };\n    if (this.authorInfo.info.company.isCompany) {\n      this.headerStatsSyncService.subEvent$.next(['company', this.authorInfo.meta.id, this.authorInfo.subscribers.you]);\n    }\n  }\n}\n","<app-ui-info-header class=\"css-block margin-bottom-44\"\n                    *ngIf=\"authorInfo\"\n                    [bgImage]=\"authorInfo.profile.cover\"\n                    [profileImage]=\"authorInfo.info.picture\"\n                    [profileText]=\"authorInfo.info | personName\"\n                    [isMe]=\"isMe$ | async\"\n                    [subscribed]=\"authorInfo.subscribers.you\"\n                    (edit)=\"router.navigate([url, 'edit'], { relativeTo: activatedRoute })\"\n                    (subscribe)=\"subFunc()\">\n    <div class=\"info-header-name\">\n        <div>{{ authorInfo.info | personName }}</div>\n        <div *ngIf=\"authorInfo.info.username\" class=\"nickname\">\n            @{{ authorInfo.info.username }}\n        </div>\n    </div>\n    <div class=\"info-header-name-small\" style=\"min-width: 150px;\">\n        <div>{{ authorInfo.info | personName }}</div>\n        <div *ngIf=\"authorInfo.info.username\" class=\"nickname\">\n            @{{ authorInfo.info.username }}\n        </div>\n    </div>\n    <div class=\"info-header-down subtitle-1\">\n        <div *ngIf=\"!(isMe$ | async) && !authorInfo.info.company.isCompany\" class=\"stats-item\">\n          {{ 'COMMON.AUTHORS_RATING' | translate }}\n            <span class=\"stats-item__value\">{{ authorInfo.rating > 0 ? '+' : '' }}{{ authorInfo.rating }}</span>\n        </div>\n        <div *ngIf=\"authorInfo.info.company.isCompany\" class=\"stats-item\">\n            <span class=\"fade-1 subtitle-1 font-1 blue\">{{ 'COMMON.COMPANYS_BLOG' | translate }}</span>\n        </div>\n        <div *ngIf=\"(isMe$ | async) && !authorInfo.info.company.isCompany\" class=\"stats-item\">\n            {{ 'COMMON.MY_RATING' | translate }}\n            &nbsp;<span class=\"stats-item__value\">{{ authorInfo.rating > 0 ? '+' : '' }}{{ authorInfo.rating }}</span>\n        </div>\n        <div class=\"subs flex-item subscribe\">\n            <span class=\"fade-1 subtitle-1 font-1\">{{ 'COMMON.SUBSCRIBERS' | translate }}</span>&nbsp;\n            <span class=\"fade-1 subtitle-1 font-1 blue\">{{ authorInfo.subscribers.count }}</span>\n        </div>\n        <app-action-menu-user *ngIf=\"!(isMe$ | async) && perms.isLoggedIn\" class=\"flex-item\" [data]=\"authorInfo\"\n            (gone)=\"this.router.navigate([authorInfo.info.company.isCompany ? '/companies' : '/authors'])\"></app-action-menu-user>\n        <div *ngIf=\"(isMe$ | async)\" class=\"notifications flex-item\" >\n            <a [routerLink]=\"[url, 'notifications']\">\n                <svg name=\"bell\" class=\"f-gray\" size=\"26\"></svg>\n                <ng-container *ngIf=\"(notificationUpdateService.unreadNotifications$ | async) as unreadCount\">\n                    <sup *ngIf=\"unreadCount > 0\" class=\"count\">{{ unreadCount > 99 ? '99+' : unreadCount }}</sup>\n                </ng-container>\n            </a>\n            \n        </div>\n    </div>\n    <div class=\"info-header-down-small\">\n        <div class=\"subs flex-item\">\n            <div *ngIf=\"!authorInfo.info.company.isCompany\" class=\"stats-item\">\n                <span class=\"fade-1 subtitle-1 font-1 subscribe-margin\">{{ 'COMMON.AUTHORS_RATING' | translate }}</span>\n                <span class=\"stats-item__value\">{{ authorInfo.rating > 0 ? '+' : '' }}{{ authorInfo.rating }}</span>\n            </div>\n            <span *ngIf=\"authorInfo.info.company.isCompany\" class=\"fade-1 subtitle-1 font-1 blue\">{{ 'COMMON.COMPANYS_BLOG' | translate }}</span>\n        </div>\n        <div class=\"subs flex-item\">\n          <span class=\"fade-1 subtitle-1 font-1 subscribe-margin\">{{ 'COMMON.SUBSCRIBERS' | translate }}</span>\n          <span class=\"fade-1 subtitle-1 font-1 blue\">{{ authorInfo.subscribers.count }}</span>\n        </div>\n        <app-action-menu-user *ngIf=\"!(isMe$ | async) && perms.isLoggedIn\" class=\"flex-item\" [data]=\"authorInfo\"\n            (gone)=\"this.router.navigate([authorInfo.info.company.isCompany ? '/companies' : '/authors'])\"></app-action-menu-user>\n        <div *ngIf=\"(isMe$ | async)\" class=\"notifications flex-item\" >\n            <a [routerLink]=\"[url, 'notifications']\">\n                <svg name=\"bell\" class=\"f-gray\" size=\"26\"></svg>\n                <ng-container *ngIf=\"(notificationUpdateService.unreadNotifications$ | async) as unreadCount\">\n                    <sup *ngIf=\"unreadCount > 0\" class=\"count\">{{ unreadCount > 99 ? '99+' : unreadCount }}</sup>\n                </ng-container>\n            </a>\n        </div>\n        <app-action-menu-user *appLoggedIn class=\"flex-item\" [data]=\"authorInfo\"\n            (gone)=\"this.router.navigate([authorInfo.info.company.isCompany ? '/companies' : '/authors'])\"></app-action-menu-user>\n    </div>\n    <div class=\"info-header-desc\">\n        <div class=\"fade-1 font-2 body-2\" style=\"white-space: pre-line\">\n            {{ authorInfo.info.bio || 'Описание профиля отсутствует.' }}\n        </div>\n        <div *ngIf=\"(authorInfo.info.company.isCompany && authorInfo.info.company.confirmed) || authorInfo.roles?.includes('ROLE_SUPERUSER')\" class=\"events-jobs\">\n            <a *ngIf=\"eventCount$ | async; let eventCount\" class=\"item item-inherit\" [routerLink]=\"[url, 'events']\" routerLinkActive=\"selected\">{{ 'COMMON.EVENT_' | translate }} <br><span class=\"blue\">({{ eventCount }})</span>\n            </a>\n            <a *ngIf=\"jobCount$ | async; let jobCount\" class=\"item\" [routerLink]=\"[url, 'jobs']\" routerLinkActive=\"selected\">{{ 'COMMON.VACANCIES_' | translate }}<br><span\n                class=\"blue\">({{ jobCount }})</span></a>\n        </div>\n    </div>\n    <div class=\"info-header-bar\">\n        <a class=\"flex-item btn\" [class.blue]=\"rlaPosts.isActive\" [routerLink]=\"[url, 'posts']\" routerLinkActive #rlaPosts=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.PUBLICATIONS_' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaPosts.isActive\">{{ authorInfo.postCount }}</span>\n            </div>\n        </a>\n        <a *ngIf=\"isMe$ | async\" class=\"flex-item btn\" [class.blue]=\"rlaDrafts.isActive\" class=\"flex-item btn\" [routerLink]=\"[url, 'drafts']\" routerLinkActive #rlaDrafts=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.DRAFTS' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaDrafts.isActive\">{{ draftCount$ | async }}</span>\n            </div>\n        </a>\n        <a class=\"flex-item btn\"  [class.blue]=\"rlaComments.isActive\" [routerLink]=\"[url, 'comments']\" routerLinkActive #rlaComments=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.COMMENTS' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaComments.isActive\">{{ commentCount$ | async }}</span>\n            </div>\n        </a>\n        <a class=\"flex-item btn\" [class.blue]=\"rlaPromoted.isActive\" [routerLink]=\"[url, 'promoted']\" routerLinkActive #rlaPromoted=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.FAVORITES' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaPromoted.isActive\">{{ this.isMe ? (stats$ | async).promoted : (promotedCount$ | async) }}</span>\n            </div>\n        </a>\n        \n        <a class=\"flex-item btn\" [routerLink]=\"[url, 'info']\" routerLinkActive #rlaInfo=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.INFORMATION' | translate }}</span>\n                <br>\n                <svg class=\"numbers\"\n                    [name]=\"rlaInfo.isActive ? 'chevron/down-fill' : 'btn-expand-h'\"></svg>\n            </div>\n        </a>\n        \n    </div>\n</app-ui-info-header>\n","import { OperatorFunction } from 'rxjs';\nimport { ParamMap } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\nexport function idMap(): OperatorFunction<ParamMap, string | number> {\n    return map((value: ParamMap) => {\n        const id: string = value.get('id');\n        return !/^\\d+$/.test(id) ? id : parseInt(id, 10);\n    });\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserHeaderComponent } from './user-header.component';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { InfoHeaderModule } from '@shared/ui/info-header/info-header.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\n\n\n\n@NgModule({\n  declarations: [UserHeaderComponent],\n  exports: [UserHeaderComponent],\n  imports: [\n    CommonModule,\n    SharedUiModule,\n    SharedPipesModule,\n    InfoHeaderModule,\n    TranslateModule.forChild(),\n    RouterModule,\n    SvgModule,\n    SharedComponentsModule\n  ]\n})\nexport class UserHeaderModule { }\n"],"sourceRoot":"webpack:///"}