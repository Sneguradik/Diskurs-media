{"version":3,"sources":["./src/app/modules/dashboard/shared/ui/dashboard-select/dashboard-select.component.ts","./src/app/modules/dashboard/shared/ui/dashboard-select/dashboard-select.component.html","./src/app/modules/dashboard/shared/ui/dashboard-select/dashboard-select.module.ts","./src/app/modules/dashboard/shared/classes/dashboard-constants.class.ts"],"names":[],"mappings":"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","file":"default~pages-ads-management-page-ads-management-page-module~pages-ratings-management-page-ratings-m~fc7da21b-es2015.js","sourcesContent":["import { Component, EventEmitter, Output, Input, SimpleChanges, OnChanges, OnDestroy, HostListener, ElementRef } from '@angular/core';\nimport { DashboardConstants } from '../../classes/dashboard-constants.class';\nimport { ISelectItem } from './select-item.interface';\n\n@Component({\n  selector: 'app-dashboard-select',\n  templateUrl: './dashboard-select.component.html',\n  styleUrls: ['./dashboard-select.component.scss'],\n})\nexport class DashboardSelectComponent implements OnChanges, OnDestroy {\n\n  constructor(private readonly ref: ElementRef) {}\n\n  @Input() public items: ISelectItem[] = [];\n  @Input() public dropdownWidth: number = null;\n  @Input() public selected: ISelectItem = DashboardConstants.SelectItemConstant;\n\n  @Output() public readonly selectedChange: EventEmitter<ISelectItem> = new EventEmitter<ISelectItem>();\n  @Output() public readonly changeRes?: EventEmitter<ISelectItem> = new EventEmitter<ISelectItem>();\n\n  public dropdown = false;\n  @HostListener('document:click', ['$event']) public clickOut(event: any): void {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      this.dropdown = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected) {\n      if (changes.selected.currentValue !== changes.selected.previousValue) {\n        this.selectedChange.emit(this.selected);\n      }\n      if (changes.selected.currentValue === DashboardConstants.SelectItemConstant &&\n          changes.selected.currentValue !== changes.selected.previousValue) {\n        this.clear();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.clear();\n  }\n\n  public select(item: ISelectItem): void {\n    this.selectedChange.emit(item);\n    this.changeRes.emit(item);\n    this.selected = item ? item : DashboardConstants.SelectItemConstant;\n  }\n\n  public clear(): void {\n    this.dropdown = false;\n    this.selected = DashboardConstants.SelectItemConstant;\n  }\n\n  public switchDropdownState(): void {\n    this.dropdown = !this.dropdown;\n  }\n}\n","<div class=\"select-container\" [style.width.px]=\"dropdownWidth\">\n    <div class=\"styled-select admin-select\" [style.width.px]=\"dropdownWidth\" (click)=\"switchDropdownState()\">\n        <div class=\"select-selected\" [ngClass]=\"{ 'select-arrow-active': dropdown }\">{{ selected ? selected.title : '' }}</div>\n        <div class=\"select-items\" [hidden]=\"!dropdown\">\n            <div *ngFor=\"let item of items\" [ngClass]=\"{ 'same-as-selected': item === selected }\" (click)=\"select(item)\">{{ item.title }}</div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardSelectComponent } from './dashboard-select.component';\n\n@NgModule({\n  declarations: [DashboardSelectComponent],\n  exports: [DashboardSelectComponent],\n  imports: [CommonModule],\n})\nexport class DashboardSelectModule {}\n","import { IActivityView } from '@api/schemas/dashboard/activity-view.interface';\nimport { IStatTags } from '../../pages/tags-management-page/components/statistic-tags-block/stat-tags.interface';\nimport { ISelectItem } from '../ui/dashboard-select/select-item.interface';\nimport { IRangeParams } from '../ui/dashboard-range/range-params.interface';\n\nexport class DashboardConstants {\n  public static SelectItemConstant: ISelectItem = {\n    title: null,\n    id: null,\n    payload: null,\n  };\n\n  public static RangeParamsConstant: IRangeParams = {\n    before: null,\n    after: null,\n    checkbox: null,\n  };\n\n  public static TagsStatConstant: IStatTags = {\n    all: null,\n    new: null,\n  };\n\n  public static ActivityConstant: IActivityView = {\n    count: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    registrations: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    presence: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    activity: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    materials: {\n      all: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n      users: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n      companies: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n    },\n  };\n}\n"],"sourceRoot":"webpack:///"}