{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/roles-management-page/roles-management-page.component.ts","webpack:///src/app/modules/dashboard/pages/roles-management-page/roles-management-page.component.html","webpack:///src/app/modules/dashboard/pages/roles-management-page/roles-management-page.module.ts","webpack:///src/app/modules/dashboard/pages/roles-management-page/components/user-management-block/user-management-block.component.ts","webpack:///src/app/modules/dashboard/pages/roles-management-page/components/user-management-block/user-management-block.component.html","webpack:///src/app/modules/dashboard/pages/roles-management-page/roles-filters.const.ts","webpack:///src/app/modules/dashboard/pages/roles-management-page/components/user-raw-drop/user-raw-drop.component.ts","webpack:///src/app/modules/dashboard/pages/roles-management-page/components/user-raw-drop/user-raw-drop.component.html","webpack:///src/app/modules/dashboard/pages/roles-management-page/roles-navs.const.ts","webpack:///src/app/modules/dashboard/pages/roles-management-page/roles-management-page-routing.module.ts"],"names":["RolesManagementPageComponent","administrationService","translateService","usersService","sidebarWrapperService","navs","filters","selectedNav","selectedFilter","users","page","total","contentLoading","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","getUsers","selectNav","nav","clearUsers","getValue","role","id","getUsersByRoleWithQuery$","payload","pipe","ngOnDestroy$","subscribe","content","totalPages","refresh","filter","setUserRole","status","setUserRole$","selector","templateUrl","styleUrls","RolesManagementPageModule","declarations","imports","UserManagementBlockComponent","req","pageReq","dropdown","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","loadNextPage","emit","changeDetection","OnPush","rolesFilters","title","instant","UserRawDropComponent","ref","editorReq","salesReq","adminReq","clickOut","event","nativeElement","contains","target","editor","sales","admin","ROLES_NAVS","routes","path","component","RolesManagementPageRoutingModule","forChild","exports"],"mappings":"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","file":"pages-roles-management-page-roles-management-page-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IUserWithRoleShort } from '@api/schemas/dashboard/user-with-role-short.interface';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { UsersService } from '@api/routes/users.service';\nimport { rolesFilters } from './roles-filters.const';\nimport { ROLES_NAVS } from './roles-navs.const';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { ITabsNavItem } from '@modules/dashboard/shared/ui/dashboard-tabs/tabs-nav-item.interface';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-roles-management-page',\n  templateUrl: './roles-management-page.component.html',\n  styleUrls: ['./roles-management-page.component.scss'],\n})\nexport class RolesManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public readonly navs: ITabsNavItem[] = ROLES_NAVS;\n  public readonly filters: ISelectItem[] = rolesFilters(this.translateService);\n\n  public selectedNav: ITabsNavItem = this.navs[0];\n  public selectedFilter: ISelectItem = this.filters[3];\n\n  public users: BehaviorSubject<IUserWithRoleShort[]> = new BehaviorSubject<IUserWithRoleShort[]>([]);\n\n  public page = 0;\n  public total = 1;\n  public contentLoading = false;\n\n  constructor(\n    private readonly administrationService: AdministrationService,\n    private readonly translateService: TranslateService,\n    private readonly usersService: UsersService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.getUsers();\n  }\n\n  public selectNav(nav: ITabsNavItem): void {\n    this.selectedNav = nav;\n    this.clearUsers();\n    this.getUsers();\n  }\n\n  public getUsers(): void {\n    if ((this.users.getValue() === [] || (this.total === 0 || this.page + 1 <= this.total)) && !this.contentLoading) {\n      this.contentLoading = true;\n      let role = '';\n      switch (this.selectedNav.id) {\n        case 0:\n          role = 'ROLE_SUPERUSER';\n          break;\n        case 1:\n          role = 'ROLE_CHIEF_EDITOR';\n          break;\n        case 2:\n          role = 'ROLE_SALES';\n          break;\n        default:\n          role = 'ROLE_SUPERUSER';\n          break;\n      }\n      this.administrationService.getUsersByRoleWithQuery$(this.page, role, this.selectedFilter.payload)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((users: IPageResponse<IUserWithRoleShort>) => {\n        this.users.next([...this.users.getValue(), ...users.content]);\n        this.total = users.totalPages;\n        this.page++;\n        this.contentLoading = false;\n      });\n    }\n  }\n\n  private clearUsers(): void {\n    this.users.next([]);\n    this.page = 0;\n  }\n\n  public refresh(filter?: ISelectItem): void {\n    if (filter) {\n      this.selectedFilter = filter;\n    }\n    this.clearUsers();\n    this.getUsers();\n  }\n\n  public setUserRole(id: number, role: string, status: boolean): void {\n    this.usersService.setUserRole$(id, role, status).pipe(takeUntil(this.ngOnDestroy$)).subscribe();\n  }\n}\n","<app-dashboard-tabs [navs]=\"navs\"\n                    [filters]=\"filters\"\n                    [activeFilter]=\"selectedFilter\"\n                    (selectedNav)=\"selectNav($event)\"\n                    (showReq)=\"refresh($event)\">\n\n    <app-user-management-block [users]=\"users\"\n                               (req)=\"setUserRole($event.id, $event.role, $event.status)\"\n                               (pageReq)=\"getUsers()\">\n    </app-user-management-block>\n\n</app-dashboard-tabs>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RolesManagementPageRoutingModule } from './roles-management-page-routing.module';\nimport { RolesManagementPageComponent } from './roles-management-page.component';\nimport { UserManagementBlockComponent } from './components/user-management-block/user-management-block.component';\nimport { UserRawDropComponent } from './components/user-raw-drop/user-raw-drop.component';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardTabsModule } from '@modules/dashboard/shared/ui/dashboard-tabs/dashboard-tabs.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\n\n@NgModule({\n  declarations: [RolesManagementPageComponent, UserManagementBlockComponent, UserRawDropComponent],\n  imports: [CommonModule, RolesManagementPageRoutingModule, DashboardTabsModule, FormsModule, TranslateModule, SharedUiModule],\n})\nexport class RolesManagementPageModule {}\n","import { Component, Input, Output, EventEmitter, HostListener, ChangeDetectionStrategy } from '@angular/core';\nimport { IUserWithRoleShort } from '@api/schemas/dashboard/user-with-role-short.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { IUserRoleInterface } from '@api/schemas/dashboard/user-role.interface';\n\n@Component({\n  selector: 'app-user-management-block',\n  templateUrl: './user-management-block.component.html',\n  styleUrls: ['./user-management-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserManagementBlockComponent {\n  @Input() public users: BehaviorSubject<IUserWithRoleShort[]>;\n\n  @Output() public readonly req: EventEmitter<IUserRoleInterface> = new EventEmitter<IUserRoleInterface>();\n\n  @Output() public readonly pageReq: EventEmitter<void> = new EventEmitter<void>();\n\n  public dropdown = false;\n\n  constructor() {}\n\n  @HostListener('window:scroll', []) public onScroll(): void {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      this.loadNextPage();\n    }\n  }\n\n  public loadNextPage(): void {\n    this.pageReq.emit();\n  }\n}\n","<div class=\"admin-authors\">\n    <div *ngFor=\"let user of users | async\" class=\"admin-author\">\n        <div class=\"admin-author__header\">\n            <div class=\"admin-author__main\">\n                <div style=\"margin-right: 20px;\">\n                    <app-ui-icon [src]=\"user.icon\" [textAlternative]=\"user.name\" [size]=\"'large'\"></app-ui-icon>\n                </div>\n                <div class=\"admin-author__name\">{{ user.name }}</div>\n            </div>\n            <app-user-raw-drop\n                    [admin]=\"user.roles.indexOf('ROLE_SUPERUSER') != -1\"\n                    [editor]=\"user.roles.indexOf('ROLE_CHIEF_EDITOR') != -1\"\n                    [sales]=\"user.roles.indexOf('ROLE_SALES') != -1\"\n                    (adminReq)=\"req.emit({ id: user.id, role: 'ROLE_SUPERUSER', status: $event })\"\n                    (editorReq)=\"req.emit({ id: user.id, role: 'ROLE_CHIEF_EDITOR', status: $event })\"\n                    (salesReq)=\"req.emit({ id: user.id, role: 'ROLE_SALES', status: $event })\"\n            ></app-user-raw-drop>\n        </div>\n        <div class=\"admin-author__content\">\n            <div class=\"admin-author__txt\">{{ 'COMMON.AUTHORS_RATING' | translate }} <span>{{ user.rating }}</span></div>\n            <div class=\"admin-author__txt\">{{ 'COMMON.PUBLICATIONS_' | translate }} <span>{{ user.publicationCount }}</span></div>\n            <div class=\"admin-author__txt\">{{ 'COMMON.SUBSCRIBERS' | translate }} <span>{{ user.subscribers }}</span></div>\n        </div>\n    </div>\n</div>\n","import { TranslateService } from '@ngx-translate/core';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\n\nexport const rolesFilters = (translateService: TranslateService): ISelectItem[] => {\n    return [\n        {\n            title: translateService.instant('COMMON.BY_RATING'),\n            id: 0,\n            payload: 'order=rating',\n        },\n        {\n            title: translateService.instant('COMMON.SORT_BY_NUMBER_OF_PUBLICATIONS'),\n            id: 1,\n            payload: 'order=post-count',\n        },\n        {\n            title: translateService.instant('COMMON.SORT_BY_NUMBER_OF_SUNSCRIBERS'),\n            id: 2,\n            payload: 'order=sub-count',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_A_TO_Z_'),\n            id: 3,\n            payload: 'order=name&locale=RUSSIAN&asc=true',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_Z_TO_A_'),\n            id: 4,\n            payload: 'order=name&locale=RUSSIAN',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_A_TO_Z'),\n            id: 5,\n            payload: 'order=name&locale=ENGLISH&asc=true',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_Z_TO_A'),\n            id: 6,\n            payload: 'order=name&locale=ENGLISH',\n        },\n    ];\n};\n","import { Component, Input, EventEmitter, Output, HostListener, ElementRef, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-user-raw-drop',\n  templateUrl: './user-raw-drop.component.html',\n  styleUrls: ['./user-raw-drop.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserRawDropComponent {\n  @Input() public editor: boolean;\n  @Input() public sales: boolean;\n  @Input() public admin: boolean;\n\n  @Output() public readonly editorReq: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() public readonly salesReq: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() public readonly adminReq: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public dropdown = false;\n\n  constructor(private readonly ref: ElementRef) {}\n\n  @HostListener('document:click', ['$event']) public clickOut(event: any): void {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      this.dropdown = false;\n    }\n  }\n}\n","<div class=\"admin-dropdown\">\n    <button class=\"btn admin-dropdown__btn\" (click)=\"dropdown = !dropdown\">\n        <svg width=\"18\" height=\"4\" viewBox=\"0 0 18 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4 2C4 0.89543 3.10457 0 2 0C0.89543 0 0 0.89543 0 2C0 3.10457 0.89543 4 2 4C3.10457 4 4 3.10457 4 2ZM11 2C11 0.89543 10.1046 0 9 0C7.89543 0 7 0.89543 7 2C7 3.10457 7.89543 4 9 4C10.1046 4 11 3.10457 11 2ZM16 0C17.1046 0 18 0.89543 18 2C18 3.10457 17.1046 4 16 4C14.8954 4 14 3.10457 14 2C14 0.89543 14.8954 0 16 0Z\" />\n        </svg>\n    </button>\n    <div class=\"admin-dropdown__content admin-dropdown__content_left\" [ngClass]=\"{ 'show': dropdown }\">\n        <label class=\"admin-check\">\n            <input type=\"checkbox\" [(ngModel)]=\"admin\" (change)=\"adminReq.emit(admin)\">\n            <span class=\"admin-check__txt\">Назначить Админом</span>\n        </label>\n        <label class=\"admin-check\">\n            <input type=\"checkbox\" [(ngModel)]=\"editor\" (change)=\"editorReq.emit(editor)\">\n            <span class=\"admin-check__txt\">Назначить Редактором</span>\n        </label>\n        <label class=\"admin-check\">\n            <input type=\"checkbox\" [(ngModel)]=\"sales\" (change)=\"salesReq.emit(sales)\">\n            <span class=\"admin-check__txt\">Назначить Сеилзом</span>\n        </label>\n    </div>\n</div>","import { ITabsNavItem } from '@modules/dashboard/shared/ui/dashboard-tabs/tabs-nav-item.interface';\n\n\nexport const ROLES_NAVS: ITabsNavItem[] = [\n    {\n        title: 'Показать Админов',\n        id: 0,\n        filters: true,\n    },\n    {\n        title: 'Показать Редакторов',\n        id: 1,\n        filters: true,\n    },\n    {\n        title: 'Показать Сеилзов',\n        id: 2,\n        filters: true,\n    },\n];\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolesManagementPageComponent } from './roles-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RolesManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RolesManagementPageRoutingModule {}\n"]}