{"version":3,"sources":["./src/app/modules/user/pages/user-info-page/user-info-page.component.ts","./src/app/modules/user/pages/user-info-page/user-info-page.component.html","./src/app/modules/user/pages/user-info-page/user-info-page.module.ts","./src/app/modules/user/pages/user-info-page/user-info-page-routing.module.ts"],"names":[],"mappings":"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","file":"pages-user-info-page-user-info-page-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { IUserView } from '@api/schemas/user/user-view.interface';\nimport { UsersService } from '@api/routes/users.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { CompaniesService } from '@api/routes/companies.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil, map, tap, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-user-info-page',\n  templateUrl: './user-info-page.component.html',\n  styleUrls: ['./user-info-page.component.scss']\n})\nexport class UserInfoPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public authorInfo: IUserViewFull = null;\n  public members: IUserView[] = [];\n\n  public memberPage = 0;\n  public memberMaxPages: number;\n  public isFetchingPage: boolean;\n\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly companiesService: CompaniesService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: true, navigation: true, live: false, showSidebar: true });\n    });\n\n    this.activatedRoute.paramMap.pipe(\n      map((pramMap: ParamMap) => {\n        const id = pramMap.get('id');\n        return /^\\d+$/.test(id) ? parseInt(id, 10) : id;\n      }),\n      switchMap((id: string | number) => this.usersService.getSingle$(id)),\n      tap((user: IUserViewFull) => (this.authorInfo = user)),\n      switchMap((user: IUserViewFull) => this.getMembers(user)),\n    ).subscribe();\n  }\n\n  private getMembers(user: IUserViewFull, page: number = 0): Observable<IUserView[]> {\n    this.isFetchingPage = true;\n    return this.companiesService.members$(user.meta.id, page).pipe(\n      tap((response: IPageResponse<IUserView>) => {\n        this.memberPage = page;\n        this.memberMaxPages = response.totalPages;\n        this.isFetchingPage = false;\n      }),\n      map((response: IPageResponse<IUserView>) => response.content),\n      tap((members: IUserView[]) => {\n        this.members = [...this.members, ...members];\n      }),\n    );\n  }\n\n  public onShowMoreMembers(): void {\n    if (!this.isFetchingPage && this.memberPage + 1 < this.memberMaxPages) {\n      this.getMembers(this.authorInfo, this.memberPage + 1).pipe(takeUntil(this.ngOnDestroy$)).subscribe();\n    }\n  }\n\n  public goTo(url: string): void {\n    window.open(url, '_blank');\n  }\n}\n","<app-user-header></app-user-header>\n\n<ul *ngIf=\"authorInfo\" class=\"block-card item-space-20\">\n    <li>\n        <div>\n            <span class=\"font-1 fade-1 body-1\"><b>{{ (authorInfo.info.company.isCompany ? 'COMMON.ABOUT_THE_COMPANY' : 'COMMON.ABOUT_THE_AUTHOR') | translate }}</b></span>\n            <br>\n            <br>\n            <div class=\"fade-1 font-2 body-2\" style=\"white-space: pre-line\">\n                {{ authorInfo.profile.fullDescription ? authorInfo.profile.fullDescription : 'Подробная информация отсутствует.' }}\n            </div>\n        </div>\n    </li>\n    <li *ngIf=\"authorInfo.info.company.isCompany && authorInfo.info.company.confirmed\">\n        <div>\n            <span class=\"font-1 fade-1 body-1\"><b>{{ 'COMMON.TEAM' | translate }} {{ authorInfo.info.username ? '@' + authorInfo.info.username : authorInfo.info.company.name }}\n                на Diskurs.Media</b></span>\n            <br>\n            <br>\n            <div class=\"users\">\n                <div *ngFor=\"let member of members\" >\n                    <a class=\"user\" [routerLink]=\"member | accountUrl\">\n                        <app-ui-icon [src]=\"member.info.picture\" [size]=\"'large'\" [textAlternative]=\"member.info | personName\"></app-ui-icon>\n                        <div class=\"user-info\">\n                            <h4>{{ member.info | personName }}</h4>\n                            <p>{{ member.info.username }}</p>\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <button *ngIf=\"memberPage + 1 < memberMaxPages\" class=\"show-more\" type=\"button\" (click)=\"onShowMoreMembers()\">\n              <span>{{ 'COMMON.SHOW_MORE' | translate }}</span>\n              <svg name=\"chevron/down\"></svg>\n            </button>\n        </div>\n    </li>\n    <li>\n        <div>\n            <span class=\"font-1 fade-1 body-1\"><b>{{ 'COMMON.CONTACTS' | translate }}</b></span>\n            <br>\n            <br>\n            <span class=\"fade-1 font-2 body-2\">\n                    <div *ngIf=\"authorInfo.contacts.websiteUrl\" class=\"contacts-item\">\n                        <svg name=\"social/web\" size=\"15\"></svg>\n                        <div class=\"info\">\n                            <a [href]=\"authorInfo.contacts.websiteUrl\">{{ authorInfo.contacts.websiteUrl }}</a>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"authorInfo.contacts.email\" class=\"contacts-item\">\n                        <svg name=\"social/mail\"\n                                  size=\"15\"></svg>\n                        <div class=\"info\">\n                            <a [href]=\"authorInfo.contacts.email\">{{ authorInfo.contacts.email }}</a>\n                        </div>\n                    </div>\n                    <div *ngIf=\"authorInfo.contacts.phone\" class=\"contacts-item\">\n                        <svg name=\"social/phone\" size=\"15\"></svg>\n                        <div class=\"info\">\n                            <div>{{ authorInfo.contacts.phone }}</div>\n                        </div>\n                    </div>\n                    <div class=\"contacts-item\">\n                        <div class=\"socials\">\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/twitter', key: 'twitter', text: 'Twitter'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/in', key: 'linkedIn', text: 'LinkedIn'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/yt', key: 'youtube', text: 'YouTube'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/telegram', key: 'telegram', text: 'Telegram'}\"></ng-container>\n                          <ng-container [ngTemplateOutlet]=\"contactView\"\n                                        [ngTemplateOutletContext]=\"{icon: 'social/vk', key: 'vk', text: 'VK'}\"></ng-container>\n                        </div>\n                    </div>\n            </span>\n        </div>\n    </li>\n</ul>\n\n<ng-template #contactView let-icon=\"icon\" let-key=\"key\" let-text=\"text\">\n    <div *ngIf=\"authorInfo.contacts[key]\" class=\"contacts-item clickable\" (click)=\"goTo(this.authorInfo.contacts[key])\">\n        <svg *ngIf=\"icon !== 'social/instagram' && icon !== 'social/telegram'\" [name]=icon [size]=\"icon === 'social/web' ? 15 : 25\"></svg>\n        <img *ngIf=\"icon === 'social/instagram'\" src=\"assets/icons/uncorrect/instagram.png\" style =\"width: 25px; height: 25px;\" alt=\"\">\n        <img *ngIf=\"icon === 'social/telegram'\" src=\"assets/icons/uncorrect/telegram.png\" style =\"width: 25px; height: 25px;\" alt=\"\">\n        <div class=\"info\">{{ (key === 'youtube' ? 'COMMON.IM_ON' : 'COMMON.IM_IN') | translate : {snName: text} }}</div>\n    </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserInfoPageRoutingModule } from './user-info-page-routing.module';\nimport { UserInfoPageComponent } from './user-info-page.component';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { UserHeaderModule } from '@modules/user/user-header/user-header.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  declarations: [UserInfoPageComponent],\n  imports: [\n    CommonModule,\n    UserInfoPageRoutingModule,\n    SharedComponentsModule,\n    UserHeaderModule,\n    SharedUiModule,\n    SharedPipesModule,\n    SvgModule,\n    TranslateModule.forChild()\n  ]\n})\nexport class UserInfoPageModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserInfoPageComponent } from './user-info-page.component';\nimport { UsersResolverService } from '@shared/services/users-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserInfoPageComponent,\n    resolve: { data: UsersResolverService }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserInfoPageRoutingModule { }\n"],"sourceRoot":"webpack:///"}