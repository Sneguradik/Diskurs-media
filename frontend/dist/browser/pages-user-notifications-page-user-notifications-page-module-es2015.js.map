{"version":3,"sources":["./src/app/modules/user/pages/user-notifications-page/notification/notification.component.ts","./src/app/modules/user/pages/user-notifications-page/notification/notification.component.html","./src/app/modules/user/pages/user-notifications-page/user-notifications-page-routing.module.ts","./src/app/modules/user/pages/user-notifications-page/notifications-ranges.const.ts","./src/app/modules/user/pages/user-notifications-page/user-notifications-page.module.ts","./src/app/modules/user/pages/user-notifications-page/user-notifications-page.component.ts","./src/app/modules/user/pages/user-notifications-page/user-notifications-page.component.html"],"names":[],"mappings":"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","file":"pages-user-notifications-page-user-notifications-page-module-es2015.js","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { NotificationsService } from '@api/routes/notifications.service';\nimport { ArticlesService } from '@api/routes/articles.service';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { TagsService } from '@api/routes/tags.service';\nimport { UsersService } from '@api/routes/users.service';\nimport { AbstractNotificationComponent } from '@shared/classes/abstract-notification-component/abstract-notification-component.class';\nimport { PersonNamePipe } from '@shared/pipes/person-name.pipe';\n\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent extends AbstractNotificationComponent implements OnDestroy {\n  constructor(\n    protected readonly notificationsService: NotificationsService,\n    protected readonly articlesService: ArticlesService,\n    protected readonly topicsService: TopicsService,\n    protected readonly tagsService: TagsService,\n    protected readonly usersService: UsersService,\n    protected readonly personNamePipe: PersonNamePipe\n  ) { super(notificationsService, articlesService, topicsService, tagsService, usersService, personNamePipe); }\n}\n","<div class=\"type fade-2\">\n    <svg class=\"f-gray margin-right-10\" size=\"18\"\n         [class.f-primary]=\"!item.read\" [name]=\"TYPE_MAP[item.type].type.icon\"></svg>\n    <span [class.c-primary]=\"!item.read\" class=\"caption margin-right-20\">{{ TYPE_MAP[item.type].type.name | translate }}</span>\n    <span class=\"caption fade-3\">{{ item.createdAt | customDate }}</span>\n</div>\n<p class=\"name button-1\">\n    <ng-container [ngSwitch]=\"true\">\n        <a *ngSwitchCase=\"!TYPE_MAP[item.type].custom\" [routerLink]=\"url\" [fragment]=\"fragment\">{{ TYPE_MAP[item.type].message | translate }}</a>\n        <a *ngSwitchCase=\"item.type === 'content_report'\" [href]=\"body.url\">{{ TYPE_MAP[item.type].message | translate }}</a>\n        <span *ngSwitchCase=\"item.type === 'account_banned' || item.type === 'account_unbanned'\">{{ TYPE_MAP[item.type].message | translate }}</span>\n        <ng-container *ngSwitchDefault>{{ item.type }}</ng-container>\n    </ng-container>\n</p>\n<div>\n    <ng-container [ngSwitch]=\"bodyType\">\n        <ng-container *ngSwitchCase=\"notificationBodyType.USER_BODY\" [ngTemplateOutlet]=\"userBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.COMMENT_BODY\" [ngTemplateOutlet]=\"commentBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.SHORT_POST_BODY\" [ngTemplateOutlet]=\"shortPostBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.POST_BODY\" [ngTemplateOutlet]=\"postBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.REPORT\" [ngTemplateOutlet]=\"report\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.ACCOUNT_BANNED\" [ngTemplateOutlet]=\"accountBanned\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.ACCOUNT_UNBANNED\" [ngTemplateOutlet]=\"accountUnbanned\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.WATCHED_COMMENT_REPLY\" [ngTemplateOutlet]=\"watchedCommentReply\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.COMMENT_MENTION\" [ngTemplateOutlet]=\"commentMention\"></ng-container>\n        <ng-container *ngSwitchDefault>{{ item.body | json }}</ng-container>\n    </ng-container>\n</div>\n\n<!-- TEMPLATES -->\n<ng-template #commentMention>\n    <div class=\"subtitle-2\">\n        <a class=\"button-1\" [routerLink]=\"['/user', item.body.owner.id]\">{{ item.body.owner.info | personName }}</a>\n        <span class=\"subtitle-2\"> {{ 'COMMON.ANOTHER_USER_MENTIONED' | translate }} </span>\n        <a class=\"button-1\" [routerLink]=\"['/news', item.body.context.id]\" [fragment]=\"'comment-' + item.body.id\">{{ 'COMMON.COMMENTS' | translate }}</a>\n    </div>\n    <p class=\"caption fade-2\" [innerHTML]=\"item.body.html\"></p>\n</ng-template>\n\n<ng-template #watchedCommentReply>\n    <div class=\"subtitle-2\">\n        <a class=\"button-1\" [routerLink]=\"['/user', item.body.reply.owner.id]\">{{ item.body.reply.owner.info | personName }}</a>\n        <span class=\"fade-0\">{{ 'COMMON.REPLIED' | translate }}</span>\n        <a class=\"button-1\" [routerLink]=\"['/news', item.body.parent.context.id]\" [fragment]=\"'comment-' + item.body.parent.id\">{{ 'COMMON.COMMENTS' | translate }}</a>\n        <span class=\"fade-0\">{{ 'COMMON.TO_PUBLICATION' | translate }}</span>\n        <a class=\"button-1\" [routerLink]=\"['/news', item.body.parent.context.id]\" [fragment]=\"'comment-' + item.body.reply.id\">{{ item.body.parent.context.title }}</a>\n    </div>\n</ng-template>\n\n<ng-template #userBody>\n    <div class=\"v-center margin-bottom-10\">\n        <app-ui-icon class=\"margin-right-10\" [src]=\"body.info.picture\" [size]=\"'small'\"\n                     [textAlternative]=\"body.info | personName\"></app-ui-icon>\n        <span class=\"subtitle-1\">{{ body.info | personName }}</span>\n    </div>\n    <span class=\"caption btn\" style=\"color: #92929D\" [routerLink]=\"url\">{{ 'COMMON.TO_YOUR_PROFILE' | translate }}</span>\n</ng-template>\n\n<ng-template #commentBody>\n    <div class=\"subtitle-2\">\n        <a class=\"button-1\" [routerLink]=\"['/', 'user', body.owner.id]\">{{ body.owner.info | personName }}</a>\n        <span class=\"fade-0\"> {{ 'COMMON.MADE_A_COMMENT' | translate }} </span>\n        <a class=\"button-1\" [routerLink]=\"['/', 'news', body.context.id]\">{{ body.context.title }}</a>\n    </div>\n</ng-template>\n\n<ng-template #postBody>\n    <div class=\"subtitle-2 margin-bottom-10\">\n        <a class=\"button-1\" [routerLink]=\"['/', 'user', body.owner.id]\">{{ body.owner.info | personName }}</a>\n        &ensp;<span class=\"fade-0\">&ensp;{{ 'COMMON.AWAITING_POSTING' | translate }} </span>\n        <a class=\"button-1\" [routerLink]=\"['/', 'news', body.id]\">{{ body.info.title || ('COMMON.UNTITLED_ARTICLE' | translate) }}</a>\n        <div *ngIf=\"body.info.topics\" style=\"display: inline-block;\"><span *ngIf=\"body.info.topics[0]\" class=\"fade-0\"> в тему </span></div>\n        <span *ngIf=\"body.info.topics\" class=\"button-1\">{{ body.info.topics[0] ? ' ' + body.info.topics[0].name : ' (Автор не указал тему)' }}</span>\n    </div>\n    <span class=\"caption btn\" style=\"color: #92929D\" [routerLink]=\"['/', 'news', body.id]\">{{ 'COMMON.GO_TO' | translate }}</span>\n</ng-template>\n\n<ng-template #report>\n    <div class=\"subtitle-2 margin-bottom-10\">\n        <p *ngIf=\"body.entity.name && body.entity.id\">\n            <span class=\"fade-0\">{{ 'COMMON.COMPLIANT_ABOUT' | translate }}</span>\n            <a class=\"button-1\" [href]=\"body.url\">{{ body.entity.name + ' '  + body.entity.idMeta }} </a>\n            <span *appRoleGuard=\"'EDITOR$'; and body.owner\" class=\"fade-0\">{{ 'COMMON.FROM_USER' | translate }} </span>\n            <a *appRoleGuard=\"'EDITOR$'; and body.owner\" class=\"button-1\" [routerLink]=\"['/user/', body.owner.id]\">{{ body.owner.info | personName }} </a>\n        </p>\n        <div *ngIf=\"body.message\">\n            <span class=\"subtitle-1\">{{ 'COMMON.FROM_USER' | translate }}</span>\n            <span>{{ body.message }}</span>\n        </div>\n    </div>\n    <a class=\"caption btn\" [href]=\"body.url\" style=\"color: #92929D\">{{'COMMON.GO_TO' | translate}}</a>\n</ng-template>\n\n<ng-template #shortPostBody>\n    <p class=\"subtitle-2\" [routerLink]=\"['/news', body.id]\">{{ body.info.title }}</p>\n</ng-template>\n\n<ng-template #accountBanned>\n    <p class=\"subtitle-2 margin-bottom-10\" >{{ 'COMMON.RECOVER_PRIVILLEGES' | translate }}</p>\n    <span class=\"caption btn\" style=\"color: #92929D\" [routerLink]=\"['/terms']\">Правила сайта</span>\n</ng-template>\n\n<ng-template #accountUnbanned>\n    <p class=\"subtitle-2\">{{ 'COMMON.PRIVILLEGES_RECOVERED' | translate }}</p>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserNotificationsPageComponent } from './user-notifications-page.component';\nimport { UsersResolverService } from '@shared/services/users-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserNotificationsPageComponent,\n    resolve: { data: UsersResolverService }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserNotificationsPageRoutingModule { }\n","import { IToggleItem } from '@shared/interfaces/toggle-item.interface';\n\nexport const NOTIFICATIONS_RANGES: IToggleItem<never, { order: string }>[] = [\n    {\n        id: 0,\n        text: 'COMMON.ALL',\n        payload: 'EVERYTHING',\n    },\n    {\n        id: 1,\n        text: 'COMMON.UNREAD',\n        payload: 'UNREAD',\n    },\n    {\n        id: 2,\n        text: 'COMMON.SYSTEM_NOTIFICATIONS',\n        payload: 'SYSTEM_GROUP',\n    },\n    {\n        id: 3,\n        text: 'COMMON.COMMENTS',\n        payload: 'COMMENTS_GROUP',\n    },\n    {\n        id: 4,\n        text: 'COMMON.PUBLICATIONS_',\n        payload: 'PUBLICATIONS_GROUP',\n    },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserNotificationsPageRoutingModule } from './user-notifications-page-routing.module';\nimport { UserNotificationsPageComponent } from './user-notifications-page.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { RangesModule } from '@shared/modules/ranges/ranges.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { UserHeaderModule } from '@modules/user/user-header/user-header.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LayoutModule } from '@layout/layout.module';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\nimport { PersonNamePipe } from '@shared/pipes/person-name.pipe';\n\n\n@NgModule({\n  declarations: [UserNotificationsPageComponent, NotificationComponent],\n  imports: [\n    CommonModule,\n    CommonDirectivesModule,\n    UserNotificationsPageRoutingModule,\n    RangesModule,\n    SharedUiModule,\n    SharedComponentsModule,\n    SharedPipesModule,\n    SvgModule,\n    UserHeaderModule,\n    TranslateModule.forChild(),\n    LayoutModule,\n  ],\n  providers: [\n    PersonNamePipe\n  ]\n})\nexport class UserNotificationsPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { INotification } from '@api/schemas/notification/notification.interface';\nimport { NOTIFICATIONS_RANGES } from './notifications-ranges.const';\nimport { IToggleItem } from '@shared/interfaces/toggle-item.interface';\nimport { NotificationsService } from '@api/routes/notifications.service';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { NotificationUpdateService } from '@shared/services/notification-update.service';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-notifications-page',\n  templateUrl: './user-notifications-page.component.html',\n  styleUrls: ['./user-notifications-page.component.scss']\n})\nexport class UserNotificationsPageComponent extends AbstractComponent implements OnInit {\n  public readonly ranges: IToggleItem<never, { order: string }>[] = NOTIFICATIONS_RANGES;\n\n  public maxPages = 0;\n  public page = 0;\n  public isLoadingNextPage = false;\n  public notifications: INotification[] = [];\n\n  public selectedRange: IToggleItem = this.ranges[0];\n  public activeRange = 0;\n\n  constructor(private readonly notificationsService: NotificationsService,\n              private readonly sidebarWrapperService: SidebarWrapperService,\n              public readonly notificationUpdateService: NotificationUpdateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$\n        .next({\n          article: false,\n          trending: true,\n          navigation: true,\n          live: false,\n          showSidebar: true\n        });\n    });\n  }\n\n  public appendPage(page: number): void {\n    this.isLoadingNextPage = true;\n    this.notificationsService.get$(page, this.selectedRange ? this.selectedRange.payload : null)\n      .pipe(takeUntil(this.ngOnDestroy$))\n      .subscribe((response: IPageResponse<INotification>) => {\n      this.isLoadingNextPage = false;\n      this.page = response.page;\n      this.maxPages = response.totalPages;\n      this.notificationUpdateService.add(response.content as any);\n    });\n  }\n\n  public rangeEvent(range: IToggleItem): void {\n    this.selectedRange = range;\n    this.activeRange = range.id;\n    this.notificationUpdateService.clear();\n    this.notificationUpdateService.updateCount();\n    this.appendPage(0);\n  }\n}\n","<app-user-header></app-user-header>\n\n<app-ranges [ranges]=\"ranges\" [activeRange]=\"activeRange\" (toggleRange)=\"rangeEvent($event)\"></app-ranges>\n<ul class=\"block-card item-space-20\">\n    <li *ngFor=\"let item of (notificationUpdateService.notifications$ | async)\">\n        <div class=\"border-bottom\">\n            <app-notification [data]=\"item\"></app-notification>\n        </div>\n    </li>\n</ul>\n<app-pagination [page]=\"page\"\n                [maxPages]=\"maxPages\"\n                [enabled]=\"!isLoadingNextPage\"\n                (onPage)=\"appendPage($event)\">\n</app-pagination>\n"],"sourceRoot":"webpack:///"}