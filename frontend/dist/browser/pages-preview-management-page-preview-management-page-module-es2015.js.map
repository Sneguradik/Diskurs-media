{"version":3,"sources":["./src/app/api/schemas/dashboard/preview-site-type.enum.ts","./src/app/modules/dashboard/pages/preview-management-page/preview-management-block/preview-management-block.component.ts","./src/app/modules/dashboard/pages/preview-management-page/preview-management-block/preview-management-block.component.html","./src/app/modules/dashboard/pages/preview-management-page/preview-management-page.module.ts","./src/app/modules/dashboard/pages/preview-management-page/preview-management-page.component.ts","./src/app/modules/dashboard/pages/preview-management-page/preview-management-page.component.html","./src/app/modules/dashboard/pages/preview-management-page/preview-management-page-routing.module.ts"],"names":[],"mappings":"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","file":"pages-preview-management-page-preview-management-page-module-es2015.js","sourcesContent":["export enum PreviewSiteTypeEnum {\n    WEBSITE = 'WEBSITE'\n}\n","import { Component, ChangeDetectionStrategy, Output, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { IPreviewManagementView } from '@api/schemas/dashboard/preview-management-view.interface';\nimport { IPreviewManagementCreate } from '@api/schemas/dashboard/preview-management-create.interface';\nimport { PreviewSiteTypeEnum } from '@api/schemas/dashboard/preview-site-type.enum';\n\n@Component({\n  selector: 'app-preview-management-block',\n  templateUrl: './preview-management-block.component.html',\n  styleUrls: ['./preview-management-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PreviewManagementBlockComponent implements OnChanges {\n  @Input() public inputData: IPreviewManagementView;\n  @Input() public saved = false;\n\n  @Output() public readonly saveReq: EventEmitter<IPreviewManagementCreate> = new EventEmitter<IPreviewManagementCreate>();\n  @Output() public readonly pictureReq: EventEmitter<[File, IPreviewManagementCreate]>\n    = new EventEmitter<[File, IPreviewManagementCreate]>();\n\n  public data: IPreviewManagementCreate = {\n    title: null,\n    siteName: null,\n    description: null,\n    url: 'default',\n    type: PreviewSiteTypeEnum.WEBSITE,\n    card: 'summary'\n  };\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.inputData) {\n      this.data = {\n        ...this.data,\n        title: this.inputData?.title,\n        siteName: this.inputData?.siteName,\n        description: this.inputData?.description,\n      };\n    }\n  }\n\n  public onImageChange(files: FileList): void {\n    const image = files ? files[0] : null;\n    this.pictureReq.emit([image, this.data]);\n  }\n\n  public save(): void {\n    this.saveReq.emit(this.data);\n  }\n}\n","<form class=\"admin-form\">\n    <div class=\"admin-form__wrap\">\n        <div class=\"admin-form__wrap-main\">\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Title</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"text\" class=\"admin-input\" name=\"title\" [(ngModel)]=\"data.title\">\n                </span>\n            </label>\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Description</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"text\" class=\"admin-input\" name=\"description\" [(ngModel)]=\"data.description\">\n                </span>\n            </label>\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">URL</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"url\" class=\"admin-input\" name=\"url\" [(ngModel)]=\"data.siteName\">\n                </span>\n            </label>\n            <fieldset class=\"admin-form__fieldset\">\n                <legend class=\"admin-input-blc\"><span class=\"admin-input-row__title\">Изображение</span></legend>\n                <div class=\"admin-upload\">\n                    <div class=\"admin-upload__bar\">\n                        <label class=\"admin-upload__label\">\n                            <input #image type=\"file\" accept=\"image/*\" (change)=\"onImageChange($any($event).target.files)\">\n                            <div class=\"btn admin-upload__add\">Загрузить изображение</div>\n                        </label>\n                        <button class=\"btn admin-upload__del\" type=\"button\" (click)=\"onImageChange(null)\">Удалить изображение</button>\n                    </div>\n                    <div *ngIf=\"!inputData?.image\" class=\"admin-upload__wrap\" style=\"cursor: pointer;\" (click)=\"image.click()\">\n                        <div class=\"admin-upload__wrap-plus\">\n                            <svg id=\"btn-add\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n                                <path d=\"M0.5 12C0.5 5.64873 5.64873 0.5 12 0.5C18.3513 0.5 23.5 5.64873 23.5 12C23.5 18.3513 18.3513 23.5 12 23.5C5.64873 23.5 0.5 18.3513 0.5 12Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7132 11.2856H17.7132C18.1077 11.2856 18.4275 11.6054 18.4275 11.9999C18.4275 12.3943 18.1077 12.7141 17.7132 12.7141H12.7132V17.7141C12.7132 18.1086 12.3934 18.4284 11.9989 18.4284C11.6044 18.4284 11.2846 18.1086 11.2846 17.7141V12.7141H6.2846C5.89011 12.7141 5.57031 12.3943 5.57031 11.9999C5.57031 11.6054 5.89011 11.2856 6.2846 11.2856H11.2846V6.28557C11.2846 5.89109 11.6044 5.57129 11.9989 5.57129C12.3934 5.57129 12.7132 5.89109 12.7132 6.28557V11.2856Z\" fill=\"#00B7FF\"></path>\n                            </svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"inputData?.image\">\n                        <img [src]=\"inputData.image\" alt=\"\" style=\"max-width: 100%;\">\n                    </div>\n                </div>\n            </fieldset>\n            <div class=\"admin-form__bar\">\n                <button class=\"btn admin-btn_white\" (click)=\"save()\">{{ saved ? 'Изменения сохранены' : 'Сохранить' }}</button>\n            </div>\n        </div>\n    </div>\n</form> ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PreviewManagementPageRoutingModule } from './preview-management-page-routing.module';\nimport { PreviewManagementPageComponent } from './preview-management-page.component';\nimport { PreviewManagementBlockComponent } from './preview-management-block/preview-management-block.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [PreviewManagementPageComponent, PreviewManagementBlockComponent],\n  imports: [\n    CommonModule,\n    PreviewManagementPageRoutingModule,\n    FormsModule\n  ]\n})\nexport class PreviewManagementPageModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { IPreviewManagementView } from '@api/schemas/dashboard/preview-management-view.interface';\nimport { IUploadImageResponse } from '@api/schemas/image/upload-image-response.interface';\nimport { IPreviewManagementCreate } from '@api/schemas/dashboard/preview-management-create.interface';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-preview-management-page',\n  templateUrl: './preview-management-page.component.html',\n  styleUrls: ['./preview-management-page.component.scss']\n})\nexport class PreviewManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public data: IPreviewManagementView;\n  public saved = false;\n\n  constructor(\n    private readonly administrationService: AdministrationService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) { super(); }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.administrationService.getPreview$().pipe(takeUntil(this.ngOnDestroy$)).subscribe((_: IPreviewManagementView) => {\n      this.data = _;\n    });\n  }\n\n  public putCover(image: File, data: IPreviewManagementCreate): void {\n    this.administrationService.putPreviewCover$(image).pipe(takeUntil(this.ngOnDestroy$)).subscribe((_: IUploadImageResponse) => {\n      this.data = { ...this.data, ...data, image: _.url };\n    });\n  }\n\n  public putContent(data: IPreviewManagementCreate): void {\n    this.administrationService.putPreviewContent$(data).pipe(takeUntil(this.ngOnDestroy$)).subscribe((_: IPreviewManagementView) => {\n      this.data = _;\n      this.saved = true;\n      setTimeout(() => {\n        this.saved = false;\n      }, 5000);\n    });\n  }\n}\n","<app-preview-management-block\n    [inputData]=\"data\"\n    [saved]=\"saved\"\n    (saveReq)=\"putContent($event)\"\n    (pictureReq)=\"putCover($event[0], $event[1])\"\n></app-preview-management-block>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PreviewManagementPageComponent } from './preview-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreviewManagementPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreviewManagementPageRoutingModule { }\n"],"sourceRoot":"webpack:///"}