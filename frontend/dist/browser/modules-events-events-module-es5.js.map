{"version":3,"sources":["webpack:///src/app/modules/events/events-routing.module.ts","webpack:///src/app/modules/events/events.module.ts","webpack:///src/app/modules/events/event-edit/event-create.guard.ts"],"names":["routes","path","loadChildren","then","module","EventEditModule","canActivate","data","guards","guardsRelation","alternativeRoute","EventPageModule","pathMatch","AllEventsModule","EventsRoutingModule","forChild","imports","exports","EventsModule","declarations","EventCreateGuard","eventsService","router","create$","pipe","id","createUrlTree","providedIn"],"mappings":"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","file":"modules-events-events-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EventCreateGuard } from './event-edit/event-create.guard';\nimport { MasterGuard } from '@shared/guards/master.guard';\nimport { CompanyGuard, EditorGuard, SuperUserGuard } from '@shared/guards/guards';\n\nconst routes: Routes = [\n  {\n    path: 'create',\n    loadChildren: () => import('./event-edit/event-edit.module').then((module: any) => module.EventEditModule),\n    canActivate: [MasterGuard],\n    data: { guards: [EventCreateGuard], guardsRelation: 'AND'},\n  },\n  {\n    path: ':id/edit',\n    loadChildren: () => import('./event-edit/event-edit.module').then((module: any) => module.EventEditModule),\n    canActivate: [MasterGuard],\n    data: { guards: [SuperUserGuard, EditorGuard, CompanyGuard], guardsRelation: 'OR', alternativeRoute: '/'},\n  },\n  {\n    path: ':id',\n    loadChildren: () => import('./event-page/event-page.module').then((module: any) => module.EventPageModule)\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    loadChildren: () => import('./all-events/all-events.module').then((module: any) => module.AllEventsModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventsRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EventsRoutingModule } from './events-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    EventsRoutingModule,\n    TranslateModule.forChild(),\n  ],\n})\nexport class EventsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EventsService } from '@api/routes/events.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventCreateGuard implements CanActivate {\n  constructor(\n    private readonly eventsService: EventsService,\n    private readonly router: Router\n  ) {}\n\n  canActivate(): Observable<UrlTree> {\n    return this.eventsService.create$().pipe(map((id: number) => this.router.createUrlTree(['/events', id, 'edit'])));\n  }\n}\n"]}