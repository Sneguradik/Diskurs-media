{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/ads-management-page/ads-management-page.component.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/ads-management-page.component.html","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-list.component.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-list.component.html","webpack:///src/app/modules/dashboard/pages/ads-management-page/ads-management-page-routing.module.ts","webpack:///src/app/api/schemas/advertisement/banner-place-type.enum.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/create-banner/create-banner.component.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/create-banner/create-banner.component.html","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-editor/banner-editor.component.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-editor/banner-editor.component.html","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-sort-items.const.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-dropdown/banner-dropdown.component.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-dropdown/banner-dropdown.component.html","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-state.enum.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/ads-management-page.module.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/components/banner-editor/banner-editor-items.const.ts","webpack:///src/app/modules/dashboard/pages/ads-management-page/create-banner.const.ts"],"names":["AdsManagementPageComponent","advertisementService","sidebarWrapperService","allBanners","content","currentPage","totalPages","contentLoading","edit","editBannerInfo$","sort","query","bannerSubject$","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","fetchNextPage","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","getAll$","pipe","ngOnDestroy$","subscribe","banners","push","create","post$","banner","creations","save","id","put$","clear","savePicture","picture","updateImage$","res","getValue","url","cancel","editBannerInfo","delete$","filter","scroll","queryApply","q","sortApply","forEach","element","slice","setActive","active","getById$","_","setPlace","place","editBanner","delete","parseReq","req","selector","templateUrl","styleUrls","BannerListComponent","actionReq","sortReq","sortItems","StateEnum","parseDate","date","temp","Date","getUTCDate","getUTCMonth","getUTCFullYear","returnState","item","state","changeSortItem","UNSELECTED","SELECTED_DESC","SELECTED_ASC","changeSort","x","length","shift","parseSort","str","payload","emit","parseActivity","activity","getDateDifference","date1","date2","temp1","temp2","Math","ceil","abs","getTime","parsePlace","FEED1","FEED2","FEED3","HEADER","PUBLICATION_ABOVE_COMMENTS","PUBLICATION_BELOW_COMMENTS","PUBLICATION_SIDEBAR","makeAction","action","param","changeDetection","OnPush","banners$","routes","path","component","AdsManagementPageRoutingModule","forChild","imports","exports","BannerPlaceTypeEnum","CreateBannerComponent","createReq","queryReq","e","target","value","BannerEditorComponent","fb","datePipe","cancelReq","saveReq","savePlaceReq","pictureReq","items","selectedPlace","imagePreview","now","minDateTime","transform","data","inputData$","adsForm","group","name","required","afterPublication","min","pattern","startDateTime","stopDateTime","startViewsTime","stopViewsCount","startClicksTime","stopClicksCount","rotation","text","placeType","TIME_INTERVAL","VIEWS_COUNT","CLICKS_COUNT","sendImg","controls","img","setPlaceType","type","setValue","onImageChange","event","files","clearImg","imageInput","nativeElement","onPlaceChange","getRawValue","ret","BANNER_SORT_ITEMS","BannerDropdownComponent","ref","activeReq","deleteReq","editReq","dropdown","clickOut","contains","isActive","BannerStateEnum","AdsManagementPageModule","declarations","providers","BANNER_EDITOR_ITEMS","title","size","CREATE_BANNER"],"mappings":"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","file":"pages-ads-management-page-ads-management-page-module-es5.js","sourcesContent":["import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { catchError, takeUntil, switchMap, tap } from 'rxjs/operators';\nimport { BehaviorSubject, of, Subject } from 'rxjs';\nimport { IBannerPageableContent } from './banner-pageable-content.interface';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { IBannerReturnView } from '@api/schemas/advertisement/banner-return-view.interface';\nimport { AdvertisementService } from '@api/routes/advertisement.service';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { IBannerCreateView } from '@api/schemas/advertisement/banner-create-view.interface';\nimport { CREATE_BANNER } from './create-banner.const';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-ads-management-page',\n  templateUrl: './ads-management-page.component.html',\n  styleUrls: ['./ads-management-page.component.scss'],\n})\nexport class AdsManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public allBanners: IBannerPageableContent = {\n    content: [],\n    currentPage: 0,\n    totalPages: 1,\n    contentLoading: false,\n  };\n\n  public edit = false;\n  public editBannerInfo$: BehaviorSubject<IBannerReturnView> = new BehaviorSubject<IBannerReturnView>(null);\n  private sort = '';\n  private query: string = null;\n  public bannerSubject$ = new Subject<IBannerReturnView[]>();\n  public creations: boolean;\n\n  constructor(\n    private readonly advertisementService: AdvertisementService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super(); }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.fetchNextPage();\n  }\n\n  @HostListener('window:scroll', []) public onScroll(): void {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      this.fetchNextPage();\n    }\n  }\n\n  private fetchNextPage(): void {\n    if ((this.allBanners.content === [] || this.allBanners.currentPage + 1 <= this.allBanners.totalPages) &&\n        !this.allBanners.contentLoading) {\n      this.allBanners.contentLoading = true;\n      this.advertisementService.getAll$(\n        this.allBanners.currentPage, null, this.sort !== '' ? this.sort : null, this.query ? this.query : null\n      )\n        .pipe(takeUntil(this.ngOnDestroy$))\n        .subscribe((banners: IPageResponse<IBannerReturnView>) => {\n          this.allBanners.content.push(...banners.content);\n          this.allBanners.totalPages = banners.totalPages;\n          this.allBanners.currentPage++;\n          this.allBanners.contentLoading = false;\n          this.bannerSubject$.next(this.allBanners.content);\n        });\n    }\n  }\n\n  public create(): void {\n    const body: IBannerCreateView = CREATE_BANNER;\n    this.advertisementService.post$(body).pipe(takeUntil(this.ngOnDestroy$)).subscribe((banner: IBannerReturnView) => {\n      this.editBannerInfo$.next(banner);\n      this.creations = true;\n      this.edit = true;\n    });\n  }\n\n  public save(id: number, body: IBannerCreateView): void {\n    this.advertisementService.put$(id, body).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n      this.edit = false;\n      this.clear();\n    });\n  }\n\n  public savePicture(id: number, picture: File): void {\n    this.advertisementService.updateImage$(id, picture).pipe(\n      catchError(() => of(null)),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe((res: { url: string }) => {\n      if (res !== null) {\n        this.editBannerInfo$.next({\n          ...this.editBannerInfo$.getValue(),\n          picture: res.url\n        });\n      }\n    });\n  }\n\n  public cancel(): void {\n    if (this.creations) {\n      const editBannerInfo = this.editBannerInfo$.getValue();\n      this.advertisementService.delete$(editBannerInfo.id)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe(() => {\n              this.allBanners.content = this.allBanners.content.filter((banner: IBannerReturnView) => banner.id !== editBannerInfo.id);\n              this.bannerSubject$.next(this.allBanners.content);\n          });\n    }\n    this.edit = false;\n    this.editBannerInfo$.next(null);\n    this.creations = null;\n    this.clear();\n  }\n\n  public clear(): void {\n    this.allBanners = { currentPage: 0, totalPages: 1, contentLoading: false, content: [] };\n    this.fetchNextPage();\n    window.scroll(0, 0);\n  }\n\n  public queryApply(q: string): void {\n    this.query = q !== '' ? q : null;\n    this.clear();\n  }\n\n  public sortApply(sort: string[]): void {\n    this.sort = '';\n    if (sort !== []) {\n      sort.forEach((element: string) => {\n        this.sort += element + ',';\n      });\n      this.sort = this.sort.slice(0, -1);\n    }\n    this.clear();\n  }\n\n  public setActive(id: number, active: boolean): void {\n    this.advertisementService.getById$(id).pipe(\n      switchMap((_: IBannerReturnView) => this.advertisementService.put$(id, { ...(_ as IBannerCreateView), active })),\n      tap(() => this.allBanners.content.filter((banner: IBannerReturnView) => banner.id === id)[0].active = active),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(() => this.bannerSubject$.next(this.allBanners.content));\n  }\n\n  public setPlace(id: number, place: BannerPlaceEnum): void {\n    this.advertisementService.getById$(id).pipe(\n      switchMap((_: IBannerReturnView) => this.advertisementService.put$(id, { ...(_ as IBannerCreateView), place })),\n      tap(() => this.savePicture(id, null)),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe();\n  }\n\n  public editBanner(id: number): void {\n    this.advertisementService.getById$(id)\n        .pipe(takeUntil(this.ngOnDestroy$))\n        .subscribe((banner: IBannerReturnView) => {\n      this.editBannerInfo$.next({ ...banner, id });\n      this.edit = true;\n      this.creations = false;\n    });\n  }\n\n  public delete(id: number): void {\n    this.advertisementService.delete$(id)\n      .pipe(takeUntil(this.ngOnDestroy$))\n      .subscribe(() => {\n        this.allBanners.content = this.allBanners.content.filter((banner: IBannerReturnView) => banner.id !== id);\n        this.bannerSubject$.next(this.allBanners.content);\n    });\n  }\n\n  public parseReq(req: [number, string, boolean?]): void {\n    switch (req[1]) {\n      case 'delete':\n        this.delete(req[0]);\n        break;\n      case 'active':\n        this.setActive(req[0], req[2]);\n        break;\n      case 'edit':\n        this.editBanner(req[0]);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div class=\"admin-wrap\">\n    <div class=\"admin-bar\">\n        <nav class=\"admin-nav\">\n            <ul>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/ratings\">Настройка рейтингов</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/topics\">Управление темами</a></li>\n                <li><a routerLink=\"/dashboard/ads\" routerLinkActive=\"active\">Управление рекламными блоками</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/events-jobs\">Мероприятия и Вакансии</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/roles\">Управление правами Админов</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/tags\">Управление Тегами</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/activity\">Активность пользователей</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/preview\">Управление preview</a></li>\n            </ul>        \n        </nav>\n        <div *ngIf=\"edit\" class=\"admin-bar-list\">\n            <h2 class=\"admin-bar-list__title\">Место размещения</h2>\n            <ol>\n                <li>Хэдер (под хэдером) [Х]</li>\n                <li>Лента [Л1]</li>\n                <li>Лента [Л2]</li>\n                <li>Лента [Л3]</li>\n                <li>Публикация (под публикацией, над комментариями) [ПП1]</li>\n                <li>Публикация / Правый сайдбар первый [ПП2] (под публикацией, под комментариями)</li>\n                <li>Публикация (правый сайдбар в публикации) [ПС]</li>\n            </ol>\n        </div>\n    </div>\n    <div class=\"admin-content\">\n        <app-create-banner *ngIf=\"!edit\"\n                           (createReq)=\"create()\"\n                           (queryReq)=\"queryApply($event)\"\n        ></app-create-banner>\n        <app-banner-editor *ngIf=\"edit\"\n                           [inputData$]=\"editBannerInfo$\"\n                           (pictureReq)=\"savePicture($event[0], $event[1])\"\n                           (cancelReq)=\"cancel()\"\n                           (saveReq)=\"save($event[0], $event[1])\"\n                           (savePlaceReq)=\"setPlace($event[0], $event[1])\"\n        ></app-banner-editor>\n    </div>\n</div>\n<div *ngIf=\"!edit\" class=\"admin-tab-wrap\">\n    <app-banner-list [banners$]=\"bannerSubject$\"\n                     (actionReq)=\"parseReq($event)\"\n                     (sortReq)=\"sortApply($event)\"\n    ></app-banner-list>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { IBannerReturnView } from '@api/schemas/advertisement/banner-return-view.interface';\nimport { IBannerSortItem } from './banner-sort-item.interface';\nimport { BANNER_SORT_ITEMS } from './banner-sort-items.const';\nimport { BannerStateEnum } from './banner-state.enum';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-banner-list',\n  templateUrl: './banner-list.component.html',\n  styleUrls: ['./banner-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BannerListComponent {\n  @Input() public banners$: Subject<IBannerReturnView[]>;\n\n  @Output() public readonly actionReq: EventEmitter<[number, string, boolean?]> = new EventEmitter<[number, string, boolean?]>();\n  @Output() public readonly sortReq: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  public sortItems: IBannerSortItem[] = BANNER_SORT_ITEMS;\n  public StateEnum: typeof BannerStateEnum = BannerStateEnum;\n  public sort: IBannerSortItem[] = [];\n\n  constructor() { }\n\n  public parseDate(date: string | number): string {\n    const temp: Date = new Date(date);\n    return date ? temp.getUTCDate() + '.' + (temp.getUTCMonth() + 1) + '.' + temp.getUTCFullYear() : null;\n  }\n\n  public returnState(item: IBannerSortItem): BannerStateEnum {\n    return this.sortItems.filter((_: IBannerSortItem) => _.id === item.id)[0].state;\n  }\n\n  private changeSortItem(item: IBannerSortItem): void {\n    this.sortItems[item.id].state =\n      this.sortItems[item.id].state === BannerStateEnum.UNSELECTED\n        ? BannerStateEnum.SELECTED_DESC\n        : this.sortItems[item.id].state === BannerStateEnum.SELECTED_DESC\n        ? BannerStateEnum.SELECTED_ASC\n        : BannerStateEnum.UNSELECTED;\n  }\n\n  public changeSort(item: IBannerSortItem): void {\n    this.changeSortItem(item);\n    this.sort = this.sort.filter((x: IBannerSortItem) => x.id !== item.id);\n    if (this.sortItems[item.id].state !== BannerStateEnum.UNSELECTED) {\n      if (this.sort.length === 3) {\n        this.sort.shift();\n      }\n      this.sort.push({ ...this.sortItems[item.id] });\n    }\n    this.parseSort();\n  }\n\n  private parseSort(): void {\n    const str: string[] = [];\n    this.sort.forEach((element: IBannerSortItem) => {\n      str.push(element.payload + (element.state === BannerStateEnum.SELECTED_DESC ? 'DESC' : 'ASC'));\n    });\n    this.sortReq.emit(str);\n  }\n\n  public parseActivity(activity: boolean): string {\n    return activity ? 'да' : 'нет';\n  }\n\n  public getDateDifference(date1: string | number, date2: string | number): number {\n    const temp1: Date = new Date(date1);\n    const temp2: Date = new Date(date2);\n    return date1 && date2 ? Math.ceil(Math.abs(temp1.getTime() - temp2.getTime()) / (1000 * 60 * 60 * 24)) : null;\n  }\n\n  public parsePlace(place: BannerPlaceEnum): string {\n    switch (place) {\n      case BannerPlaceEnum.FEED1:\n        return 'Лента [Л1]';\n      case BannerPlaceEnum.FEED2:\n        return 'Лента [Л2]';\n      case BannerPlaceEnum.FEED3:\n        return 'Лента [Л3]';\n      case BannerPlaceEnum.HEADER:\n        return 'Хэдер (под хэдером)';\n      case BannerPlaceEnum.PUBLICATION_ABOVE_COMMENTS:\n        return 'Публикация (под публикацией, над комментариями) [ПП]';\n      case BannerPlaceEnum.PUBLICATION_BELOW_COMMENTS:\n        return 'Публикация (под комментариями) [ПК]';\n      case BannerPlaceEnum.PUBLICATION_SIDEBAR:\n        return 'Публикация / Правый сайдбар [П/ПС]';\n      default:\n        return null;\n    }\n  }\n\n  public makeAction(id: number, action: string, param?: boolean): void {\n    if (param) {\n      this.actionReq.emit([id, action, param]);\n    } else {\n      this.actionReq.emit([id, action]);\n    }\n  }\n}\n","<div class=\"table-container\">\n    <table class=\"admin-tab\">\n        <thead>\n        <tr>\n            <th></th>\n            <th *ngFor=\"let item of ('COMMON.SORT_ITEMS' | translate)\">\n                <div class=\"admin-tab__sort\" (click)=\"changeSort(item)\">\n                    {{ item.name }}\n                    <div *ngIf=\"returnState(item) === StateEnum.SELECTED_DESC\" class=\"admin-tab__sort-icn\">\n                        <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7927 0C13.0424 0 13.1828 0.28719 13.0294 0.484237L7.23743 7.92754C7.11732 8.08189 6.88401 8.08189 6.76391 7.92754L0.971897 0.484237C0.818564 0.287189 0.958983 0 1.20866 0L12.7927 0Z\" />\n                        </svg>\n                    </div>\n                    <div *ngIf=\"returnState(item) === StateEnum.SELECTED_ASC\" class=\"admin-tab__sort-icn\">\n                        <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" style=\"display: block; transform: scale(1,-1)\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7927 0C13.0424 0 13.1828 0.28719 13.0294 0.484237L7.23743 7.92754C7.11732 8.08189 6.88401 8.08189 6.76391 7.92754L0.971897 0.484237C0.818564 0.287189 0.958983 0 1.20866 0L12.7927 0Z\" />\n                        </svg>\n                    </div>\n                </div>\n            </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let banner of banners$ | async\">\n            <td>\n                <app-banner-dropdown [isActive]=\"banner.active\"\n                        (deleteReq)=\"makeAction(banner.id, 'delete')\"\n                        (activeReq)=\"makeAction(banner.id, 'active', $event)\"\n                        (editReq)=\"makeAction(banner.id, 'edit')\">\n                </app-banner-dropdown>\n            </td>\n            <td>{{ banner.name }}</td>\n            <td>{{ parsePlace(banner.place) }}</td>\n            <td>{{ parseActivity(banner.active) }}</td>\n            <td>{{ parseDate(banner.startDateTime) }}</td>\n            <td>{{ parseDate(banner.stopDateTime) }}</td>\n            <td>{{ getDateDifference(banner.startDateTime, banner.stopDateTime) }}</td>\n            <td>{{ banner.clicksCount }}</td>\n            <td>{{ banner.viewsCount }}</td>\n            <td>{{ banner.rotation }}</td>\n            <td>{{ banner.id }}</td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdsManagementPageComponent } from './ads-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdsManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdsManagementPageRoutingModule {}\n","export enum BannerPlaceTypeEnum {\n    TIME_INTERVAL = 'TIME_INTERVAL',\n    VIEWS_COUNT = 'VIEWS_COUNT',\n    CLICKS_COUNT = 'CLICKS_COUNT',\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-create-banner',\n  templateUrl: './create-banner.component.html',\n  styleUrls: ['./create-banner.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CreateBannerComponent {\n  @Output() public readonly createReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly queryReq: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {}\n\n  public create(): void {\n    this.createReq.emit();\n  }\n\n  public query(e: Event): void {\n    this.queryReq.emit((e.target as any).value);\n  }\n}\n","<section class=\"admin-blc admin-blc__grey\">            \n    <form action=\"#\" method=\"post\" class=\"admin-form\">\n        <h2 class=\"admin-blc__title\">Рекламный баннер. Список</h2>\n        <div class=\"admin-form__wrap\">\n            <div class=\"admin-form__wrap-main\">\n                <label class=\"admin-input-blc\">\n                    <span class=\"admin-input-row__title\">Список</span>\n                    <span class=\"admin-input-row__inputgroup\">\n                        <input type=\"text\" class=\"admin-input\" name=\"list\" (keyup)=\"query($event)\">\n                    </span>\n                </label>                  \n            </div>\n            <div class=\"admin-form__wrap-bar\">\n                <button class=\"btn admin-form__add\" (click)=\"create()\">\n                    <svg id=\"btn-add\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n                        <path d=\"M0.5 12C0.5 5.64873 5.64873 0.5 12 0.5C18.3513 0.5 23.5 5.64873 23.5 12C23.5 18.3513 18.3513 23.5 12 23.5C5.64873 23.5 0.5 18.3513 0.5 12Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7132 11.2856H17.7132C18.1077 11.2856 18.4275 11.6054 18.4275 11.9999C18.4275 12.3943 18.1077 12.7141 17.7132 12.7141H12.7132V17.7141C12.7132 18.1086 12.3934 18.4284 11.9989 18.4284C11.6044 18.4284 11.2846 18.1086 11.2846 17.7141V12.7141H6.2846C5.89011 12.7141 5.57031 12.3943 5.57031 11.9999C5.57031 11.6054 5.89011 11.2856 6.2846 11.2856H11.2846V6.28557C11.2846 5.89109 11.6044 5.57129 11.9989 5.57129C12.3934 5.57129 12.7132 5.89109 12.7132 6.28557V11.2856Z\" fill=\"#00B7FF\"></path>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </form>\n </section>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { IBannerReturnView } from '@api/schemas/advertisement/banner-return-view.interface';\nimport { IBannerCreateView } from '@api/schemas/advertisement/banner-create-view.interface';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { BannerPlaceTypeEnum } from '@api/schemas/advertisement/banner-place-type.enum';\nimport { BANNER_EDITOR_ITEMS } from './banner-editor-items.const';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-banner-editor',\n  templateUrl: './banner-editor.component.html',\n  styleUrls: ['./banner-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BannerEditorComponent implements OnInit {\n  @ViewChild('image', { static: false }) private imageInput: ElementRef;\n\n  @Input() public inputData$: BehaviorSubject<IBannerReturnView>;\n\n  @Output() public readonly cancelReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly saveReq: EventEmitter<[number, IBannerCreateView]> = new EventEmitter<[number, IBannerCreateView]>();\n  @Output() public readonly savePlaceReq: EventEmitter<[number, BannerPlaceEnum]> = new EventEmitter<[number, BannerPlaceEnum]>();\n  @Output() public readonly pictureReq: EventEmitter<[number, File]> = new EventEmitter<[number, File]>();\n\n  public items: ISelectItem[] = BANNER_EDITOR_ITEMS;\n  public selectedPlace: ISelectItem = this.items[0];\n  public BannerPlaceTypeEnum: typeof BannerPlaceTypeEnum = BannerPlaceTypeEnum;\n  public imagePreview: string = null;\n  public now = Date.now();\n  public minDateTime = this.datePipe.transform(this.now, 'yyyy-MM-dd');\n\n  public adsForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private readonly datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    const data = this.inputData$.getValue();\n    this.adsForm = this.fb.group({\n      name: [data.name, [Validators.required]],\n      afterPublication: [data.afterPublication, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      startDateTime: [this.datePipe.transform(data.startDateTime, 'yyyy-MM-dd'), []],\n      stopDateTime: [this.datePipe.transform(data.stopDateTime, 'yyyy-MM-dd'), []],\n      startViewsTime: [this.datePipe.transform(data.startViewsTime, 'yyyy-MM-dd'), []],\n      stopViewsCount: [data.stopViewsCount, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      startClicksTime: [this.datePipe.transform(data.startClicksTime, 'yyyy-MM-dd'), []],\n      stopClicksCount: [data.stopClicksCount, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      rotation: [data.rotation, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      url: [data.url, []],\n      text: [data.text, []],\n      active: [data.active, []],\n      placeType: [data.placeType],\n      [BannerPlaceTypeEnum.TIME_INTERVAL]: [data.placeType === BannerPlaceTypeEnum.TIME_INTERVAL],\n      [BannerPlaceTypeEnum.VIEWS_COUNT]: [data.placeType === BannerPlaceTypeEnum.VIEWS_COUNT],\n      [BannerPlaceTypeEnum.CLICKS_COUNT]: [data.placeType === BannerPlaceTypeEnum.CLICKS_COUNT],\n      img: [null, []]\n    });\n    this.parsePlace();\n  }\n\n  private sendImg(): void {\n    this.pictureReq.emit([this.inputData$.getValue().id, this.adsForm.controls.img.value]);\n  }\n\n  private parsePlace(): void {\n    switch (this.inputData$.getValue().place) {\n      case BannerPlaceEnum.HEADER:\n        this.selectedPlace = this.items[0];\n        break;\n      case BannerPlaceEnum.FEED1:\n        this.selectedPlace = this.items[1];\n        break;\n      case BannerPlaceEnum.FEED2:\n        this.selectedPlace = this.items[2];\n        break;\n      case BannerPlaceEnum.FEED3:\n        this.selectedPlace = this.items[3];\n        break;\n      case BannerPlaceEnum.PUBLICATION_ABOVE_COMMENTS:\n        this.selectedPlace = this.items[4];\n        break;\n      case BannerPlaceEnum.PUBLICATION_BELOW_COMMENTS:\n        this.selectedPlace = this.items[5];\n        break;\n      case BannerPlaceEnum.PUBLICATION_SIDEBAR:\n        this.selectedPlace = this.items[6];\n        break;\n    }\n  }\n\n  public setPlaceType(type: BannerPlaceTypeEnum): void {\n    switch (type) {\n      case BannerPlaceTypeEnum.CLICKS_COUNT: {\n        this.adsForm.controls[BannerPlaceTypeEnum.TIME_INTERVAL].setValue(false);\n        this.adsForm.controls[BannerPlaceTypeEnum.VIEWS_COUNT].setValue(false);\n        this.adsForm.controls.placeType.setValue(BannerPlaceTypeEnum.CLICKS_COUNT);\n        break;\n      }\n      case BannerPlaceTypeEnum.TIME_INTERVAL: {\n        this.adsForm.controls[BannerPlaceTypeEnum.CLICKS_COUNT].setValue(false);\n        this.adsForm.controls[BannerPlaceTypeEnum.VIEWS_COUNT].setValue(false);\n        this.adsForm.controls.placeType.setValue(BannerPlaceTypeEnum.TIME_INTERVAL);\n        break;\n      }\n      case BannerPlaceTypeEnum.VIEWS_COUNT: {\n        this.adsForm.controls[BannerPlaceTypeEnum.CLICKS_COUNT].setValue(false);\n        this.adsForm.controls[BannerPlaceTypeEnum.TIME_INTERVAL].setValue(false);\n        this.adsForm.controls.placeType.setValue(BannerPlaceTypeEnum.VIEWS_COUNT);\n      }\n    }\n  }\n\n  public onImageChange(event: any): void {\n    if (event.target.files.length) {\n      this.adsForm.controls.img.setValue(event.target.files[0]);\n    }\n\n    this.sendImg();\n  }\n\n  public clearImg(): void {\n    if (this.adsForm.controls.img.value) {\n      this.adsForm.controls.img.setValue(null);\n      this.imageInput.nativeElement.value = '';\n      this.sendImg();\n    }\n  }\n\n  public onPlaceChange(place: ISelectItem): void {\n    this.savePlaceReq.emit([this.inputData$.getValue().id, place.payload.type]);\n  }\n\n  public save(): void {\n    const data = this.adsForm.getRawValue();\n    const ret: IBannerCreateView = {\n      ...data,\n      startDateTime: data.startDateTime ? new Date(data.startDateTime).getTime() : null,\n      stopDateTime: data.stopDateTime ? new Date(data.stopDateTime).getTime() : null,\n      startViewsTime: data.startViewsTime ? new Date(data.startViewsTime).getTime() : null,\n      startClicksTime: data.startClicksTime ? new Date(data.startClicksTime).getTime() : null,\n      picture: this.inputData$.getValue().picture,\n      place: this.selectedPlace.payload.type,\n    };\n    this.saveReq.emit([this.inputData$.getValue().id, ret]);\n  }\n\n  public cancel(): void {\n    this.cancelReq.emit();\n  }\n}\n","<section class=\"admin-blc admin-blc__grey\">\n    <form *ngIf=\"adsForm\" class=\"admin-form\" [formGroup]=\"adsForm\">\n        <h2 class=\"admin-blc__title\">Форма создания рекламного баннера</h2>\n        <fieldset class=\"admin-form__fieldset\">\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Наименование проекта (100 знаков)</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <textarea name=\"name\"\n                              class=\"admin-textarea admin-textarea_100\"\n                              maxlength=\"100\"\n                              formControlName=\"name\">\n                    </textarea>\n                </span>\n            </label>\n            <div class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">Место размещения</span>\n                <app-dashboard-select [(selected)]=\"selectedPlace\"\n                                      [items]=\"items\"\n                                      [dropdownWidth]=\"250\"\n                                      (changeRes)=\"onPlaceChange($event)\">\n                </app-dashboard-select>\n            </div>\n            <label class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">Выводить после</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"number\"\n                           class=\"admin-input admin-input_xs\"\n                           name=\"afterPublication\"\n                           style=\"width: 100px;\"\n                           min=\"0\"\n                           formControlName=\"afterPublication\">\n                    <span>&nbsp;публикации</span>\n                </span>\n            </label>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <legend class=\"admin-form__legend\">Период размещения</legend>\n            <div class=\"admin-form__grid\" style=\"grid-template-rows: 1fr 1fr 1fr; grid-auto-flow: column;\">\n                <div class=\"admin-form__col\" style=\"width: 100%\">\n                    <label class=\"admin-check\" (click)=\"setPlaceType(BannerPlaceTypeEnum.TIME_INTERVAL)\">\n                        <input type=\"checkbox\" \n                               [formControlName]=\"BannerPlaceTypeEnum.TIME_INTERVAL\">\n                        <span class=\"admin-check__txt\">Временной интервал</span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Старт:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\"\n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"timeinterval_start\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   [min]=\"minDateTime\"\n                                   formControlName=\"startDateTime\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Финиш:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\"\n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"timeinterval_finish\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   [min]=\"adsForm.controls.startDateTime.value || now | date : 'yyyy-MM-dd'\"\n                                   formControlName=\"stopDateTime\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                </div>\n                <div class=\"admin-form__col\" style=\"width: 100%\">\n                    <label class=\"admin-check\" (click)=\"setPlaceType(BannerPlaceTypeEnum.VIEWS_COUNT)\">\n                        <input type=\"checkbox\"\n                               [formControlName]=\"BannerPlaceTypeEnum.VIEWS_COUNT\">\n                        <span class=\"admin-check__txt\">Количество показов</span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Старт:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\"\n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"show_start\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   [min]=\"now | date : 'yyyy-MM-dd'\"\n                                   formControlName=\"startViewsTime\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Финиш:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"number\"\n                                   class=\"admin-input admin-input_xs\"\n                                   [min]=\"0\" style=\"width: 100px;\"\n                                   name=\"how_finish\"\n                                   formControlName=\"stopViewsCount\">\n                            <span>&nbsp;показов</span>\n                        </span>\n                    </label>\n                </div>\n                <div class=\"admin-form__col\" style=\"width: 100%\">\n                    <label class=\"admin-check\" (click)=\"setPlaceType(BannerPlaceTypeEnum.CLICKS_COUNT)\">\n                        <input type=\"checkbox\" \n                               [formControlName]=\"BannerPlaceTypeEnum.CLICKS_COUNT\">\n                        <span class=\"admin-check__txt\">Количество кликов</span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Старт:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\" \n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"click_start\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   formControlName=\"startClicksTime\"\n                                   [min]=\"now | date : 'yyyy-MM-dd'\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Финиш:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"number\"\n                                   class=\"admin-input admin-input_xs\"\n                                   min=\"0\"\n                                   style=\"width: 100px;\"\n                                   name=\"click_finish\"\n                                   formControlName=\"stopClicksCount\">\n                            <span>&nbsp;кликов</span>\n                        </span>\n                    </label>\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <label class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">Коэффициент ротации</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"number\"\n                           class=\"admin-input admin-input_short admin-input-row__input\"\n                           name=\"coeficient\"\n                           min=\"0\"\n                           formControlName=\"rotation\">\n                </span>\n            </label>\n            <label class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">URL</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"text\" class=\"admin-input\" name=\"url\" formControlName=\"url\">\n                </span>\n            </label>\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Текст гиперактивной кнопки</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <textarea #btnText\n                              name=\"text\"\n                              class=\"admin-textarea admin-textarea_100\"\n                              formControlName=\"text\"\n                              maxlength=\"12\">\n                    </textarea>\n                    <div class=\"btn-text\"><span>{{ 12 - btnText.value.length }}</span></div>\n                </span>\n            </label>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <legend class=\"admin-form__legend\">{{ 'COMMON.IMAGE' | translate }}</legend>\n            <p>Рекомендуемые форматы: <b>png, jpg</b> Размер изображения (берется из места размещения): {{ selectedPlace.payload.size }}</p>\n            <div class=\"admin-upload\">\n                <div class=\"admin-upload__bar\">\n                    <label class=\"admin-upload__label\">\n                        <input formArrayName=\"img\" #image type=\"file\" accept=\"image/*\" (change)=\"onImageChange($event)\">\n                        <div class=\"btn admin-upload__add\">Загрузить изображение</div>\n                    </label>\n                    <button class=\"btn admin-upload__del\"\n                            type=\"button\" \n                            (click)=\"clearImg()\">\n                        Удалить изображение\n                    </button>\n                </div>\n                <div *ngIf=\"!(inputData$ | async).picture\" class=\"admin-upload__wrap\"\n                     style=\"cursor: pointer;\" (click)=\"image.click()\">\n                    <div class=\"admin-upload__wrap-plus\">\n                        <svg id=\"btn-add\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n                            <path d=\"M0.5 12C0.5 5.64873 5.64873 0.5 12 0.5C18.3513 0.5 23.5 5.64873 23.5 12C23.5 18.3513 18.3513 23.5 12 23.5C5.64873 23.5 0.5 18.3513 0.5 12Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7132 11.2856H17.7132C18.1077 11.2856 18.4275 11.6054 18.4275 11.9999C18.4275 12.3943 18.1077 12.7141 17.7132 12.7141H12.7132V17.7141C12.7132 18.1086 12.3934 18.4284 11.9989 18.4284C11.6044 18.4284 11.2846 18.1086 11.2846 17.7141V12.7141H6.2846C5.89011 12.7141 5.57031 12.3943 5.57031 11.9999C5.57031 11.6054 5.89011 11.2856 6.2846 11.2856H11.2846V6.28557C11.2846 5.89109 11.6044 5.57129 11.9989 5.57129C12.3934 5.57129 12.7132 5.89109 12.7132 6.28557V11.2856Z\" fill=\"#00B7FF\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div *ngIf=\"(inputData$ | async).picture\">\n                    <img [src]=\"(inputData$ | async).picture\" alt=\"\" style=\"max-width: 100%;\">\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <label class=\"admin-check\">\n                <input type=\"checkbox\" name=\"active\" formControlName=\"active\">\n                <span class=\"admin-check__txt\">Активировать сразу (в списке будет активным)</span>\n            </label>\n        </fieldset>\n        <div class=\"admin-form__bar\">\n            <button class=\"btn admin-btn_white\" [disabled]=\"adsForm.invalid\" (click)=\"save()\">Добавить в список</button>\n            <button class=\"btn admin-btn_blue\" (click)=\"cancel()\">{{ 'COMMON.UNDO' | translate}}</button>\n        </div>\n    </form>\n</section>\n","import { BannerStateEnum } from './banner-state.enum';\nimport { IBannerSortItem } from './banner-sort-item.interface';\n\nexport const BANNER_SORT_ITEMS: IBannerSortItem[] = [\n    {\n        id: 0,\n        name: 'Наименование',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'NAME_',\n    },\n    {\n        id: 1,\n        name: 'Место',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'PLACE_',\n    },\n    {\n        id: 2,\n        name: 'Активность',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'ACTIVITY_',\n    },\n    {\n        id: 3,\n        name: 'Дата размещения',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'START_DATE_',\n    },\n    {\n        id: 4,\n        name: 'Дата завершения',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'END_DATE_',\n    },\n    {\n        id: 5,\n        name: 'Период размещения',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'PLACE_PERIOD_',\n    },\n    {\n        id: 6,\n        name: 'Кликов',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'CLICKS_',\n    },\n    {\n        id: 7,\n        name: 'Показов',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'VIEWS_',\n    },\n    {\n        id: 8,\n        name: 'К. ротации',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'ROTATION_',\n    },\n    {\n        id: 9,\n        name: 'ID',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'ID_',\n    }\n];\n","import { Component, HostListener, ElementRef, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-banner-dropdown',\n  templateUrl: './banner-dropdown.component.html',\n  styleUrls: ['./banner-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BannerDropdownComponent {\n  @Input() public isActive: boolean;\n\n  @Output() public readonly activeReq: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() public readonly deleteReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly editReq: EventEmitter<void> = new EventEmitter<void>();\n\n  public dropdown = false;\n\n  constructor(private readonly ref: ElementRef) {}\n\n  @HostListener('document:click', ['$event']) public clickOut(event: Event): void {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      this.dropdown = false;\n    }\n  }\n\n  public delete(): void {\n    this.dropdown = false;\n    this.deleteReq.emit();\n  }\n\n  public edit(): void {\n    this.dropdown = false;\n    this.editReq.emit();\n  }\n\n  public active(param: boolean): void {\n    this.dropdown = false;\n    this.activeReq.emit(param);\n  }\n}\n","<div class=\"admin-dropdown\">\n    <button class=\"btn admin-dropdown__btn\" (click)=\"dropdown = !dropdown\">\n        <svg width=\"18\" height=\"4\" viewBox=\"0 0 18 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4 2C4 0.89543 3.10457 0 2 0C0.89543 0 0 0.89543 0 2C0 3.10457 0.89543 4 2 4C3.10457 4 4 3.10457 4 2ZM11 2C11 0.89543 10.1046 0 9 0C7.89543 0 7 0.89543 7 2C7 3.10457 7.89543 4 9 4C10.1046 4 11 3.10457 11 2ZM16 0C17.1046 0 18 0.89543 18 2C18 3.10457 17.1046 4 16 4C14.8954 4 14 3.10457 14 2C14 0.89543 14.8954 0 16 0Z\" />\n        </svg>\n    </button>\n    <div class=\"admin-dropdown__content\" [ngClass]=\"{ 'show': dropdown }\">\n        <a *ngIf=\"isActive\" (click)=\"active(false)\">Сделать не активным</a>\n        <a *ngIf=\"!isActive\" (click)=\"active(true)\">Сделать активным</a>\n        <a (click)=\"edit()\">{{ 'COMMON.EDIT' | translate}}</a>\n        <a (click)=\"delete()\">{{ 'COMMON.REMOVE' | translate}}</a>\n    </div>\n</div>\n","export enum BannerStateEnum {\n    SELECTED_DESC = 'SELECTED_DESC',\n    SELECTED_ASC = 'SELECTED_ASC',\n    UNSELECTED = 'UNSELECTED',\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { AdsManagementPageRoutingModule } from './ads-management-page-routing.module';\nimport { AdsManagementPageComponent } from './ads-management-page.component';\nimport { CreateBannerComponent } from './components/create-banner/create-banner.component';\nimport { BannerListComponent } from './components/banner-list/banner-list.component';\nimport { BannerEditorComponent } from './components/banner-editor/banner-editor.component';\nimport { BannerDropdownComponent } from './components/banner-dropdown/banner-dropdown.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardSelectModule } from '@modules/dashboard/shared/ui/dashboard-select/dashboard-select.module';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\n\n@NgModule({\n  declarations: [\n      AdsManagementPageComponent,\n      CreateBannerComponent,\n      BannerListComponent,\n      BannerEditorComponent,\n      BannerDropdownComponent\n  ],\n  imports: [\n      CommonModule,\n      AdsManagementPageRoutingModule,\n      FormsModule,\n      DashboardSelectModule,\n      CommonDirectivesModule,\n      TranslateModule,\n      ReactiveFormsModule\n  ],\n  providers: [\n      DatePipe\n  ]\n})\nexport class AdsManagementPageModule {}\n","import { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\n\nexport const BANNER_EDITOR_ITEMS: ISelectItem[] = [\n    {\n        id: 0,\n        title: 'Хэдер (под хэдером)',\n        payload: {\n            size: '1440x100',\n            type: BannerPlaceEnum.HEADER,\n        },\n    },\n    {\n        id: 1,\n        title: 'Лента [Л1]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.FEED1,\n        },\n    },\n    {\n        id: 2,\n        title: 'Лента [Л2]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.FEED2,\n        },\n    },\n    {\n        id: 3,\n        title: 'Лента [Л3]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.FEED3,\n        },\n    },\n    {\n        id: 4,\n        title: 'Публикация (под публикацией, над комментариями) [ПП]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.PUBLICATION_ABOVE_COMMENTS,\n        },\n    },\n    {\n        id: 5,\n        title: 'Публикация (под комментариями) [ПК]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.PUBLICATION_BELOW_COMMENTS,\n        },\n    },\n    {\n        id: 6,\n        title: 'Публикация / Правый сайдбар [П/ПС]',\n        payload: {\n            size: '300x600',\n            type: BannerPlaceEnum.PUBLICATION_SIDEBAR,\n        },\n    },\n];\n","import { IBannerCreateView } from '@api/schemas/advertisement/banner-create-view.interface';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\n\nexport const CREATE_BANNER: IBannerCreateView = {\n    name: null,\n    text: null,\n    place: BannerPlaceEnum.HEADER,\n    rotation: null,\n    url: null,\n    picture: null,\n    active: null,\n    afterPublication: null,\n    placeType: null,\n    startDateTime: null,\n    stopDateTime: null,\n    startViewsTime: null,\n    stopViewsCount: null,\n    startClicksTime: null,\n    stopClicksCount: null,\n};\n"]}