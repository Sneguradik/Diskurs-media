{"version":3,"sources":["./src/app/modules/dashboard/pages/ads-management-page/ads-management-page.component.ts","./src/app/modules/dashboard/pages/ads-management-page/ads-management-page.component.html","./src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-list.component.ts","./src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-list.component.html","./src/app/modules/dashboard/pages/ads-management-page/ads-management-page-routing.module.ts","./src/app/api/schemas/advertisement/banner-place-type.enum.ts","./src/app/modules/dashboard/pages/ads-management-page/components/create-banner/create-banner.component.ts","./src/app/modules/dashboard/pages/ads-management-page/components/create-banner/create-banner.component.html","./src/app/modules/dashboard/pages/ads-management-page/components/banner-editor/banner-editor.component.ts","./src/app/modules/dashboard/pages/ads-management-page/components/banner-editor/banner-editor.component.html","./src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-sort-items.const.ts","./src/app/modules/dashboard/pages/ads-management-page/components/banner-dropdown/banner-dropdown.component.ts","./src/app/modules/dashboard/pages/ads-management-page/components/banner-dropdown/banner-dropdown.component.html","./src/app/modules/dashboard/pages/ads-management-page/components/banner-list/banner-state.enum.ts","./src/app/modules/dashboard/pages/ads-management-page/ads-management-page.module.ts","./src/app/modules/dashboard/pages/ads-management-page/components/banner-editor/banner-editor-items.const.ts","./src/app/modules/dashboard/pages/ads-management-page/create-banner.const.ts"],"names":[],"mappings":"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","file":"pages-ads-management-page-ads-management-page-module-es2015.js","sourcesContent":["import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { catchError, takeUntil, switchMap, tap } from 'rxjs/operators';\nimport { BehaviorSubject, of, Subject } from 'rxjs';\nimport { IBannerPageableContent } from './banner-pageable-content.interface';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { IBannerReturnView } from '@api/schemas/advertisement/banner-return-view.interface';\nimport { AdvertisementService } from '@api/routes/advertisement.service';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { IBannerCreateView } from '@api/schemas/advertisement/banner-create-view.interface';\nimport { CREATE_BANNER } from './create-banner.const';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-ads-management-page',\n  templateUrl: './ads-management-page.component.html',\n  styleUrls: ['./ads-management-page.component.scss'],\n})\nexport class AdsManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public allBanners: IBannerPageableContent = {\n    content: [],\n    currentPage: 0,\n    totalPages: 1,\n    contentLoading: false,\n  };\n\n  public edit = false;\n  public editBannerInfo$: BehaviorSubject<IBannerReturnView> = new BehaviorSubject<IBannerReturnView>(null);\n  private sort = '';\n  private query: string = null;\n  public bannerSubject$ = new Subject<IBannerReturnView[]>();\n  public creations: boolean;\n\n  constructor(\n    private readonly advertisementService: AdvertisementService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super(); }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.fetchNextPage();\n  }\n\n  @HostListener('window:scroll', []) public onScroll(): void {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      this.fetchNextPage();\n    }\n  }\n\n  private fetchNextPage(): void {\n    if ((this.allBanners.content === [] || this.allBanners.currentPage + 1 <= this.allBanners.totalPages) &&\n        !this.allBanners.contentLoading) {\n      this.allBanners.contentLoading = true;\n      this.advertisementService.getAll$(\n        this.allBanners.currentPage, null, this.sort !== '' ? this.sort : null, this.query ? this.query : null\n      )\n        .pipe(takeUntil(this.ngOnDestroy$))\n        .subscribe((banners: IPageResponse<IBannerReturnView>) => {\n          this.allBanners.content.push(...banners.content);\n          this.allBanners.totalPages = banners.totalPages;\n          this.allBanners.currentPage++;\n          this.allBanners.contentLoading = false;\n          this.bannerSubject$.next(this.allBanners.content);\n        });\n    }\n  }\n\n  public create(): void {\n    const body: IBannerCreateView = CREATE_BANNER;\n    this.advertisementService.post$(body).pipe(takeUntil(this.ngOnDestroy$)).subscribe((banner: IBannerReturnView) => {\n      this.editBannerInfo$.next(banner);\n      this.creations = true;\n      this.edit = true;\n    });\n  }\n\n  public save(id: number, body: IBannerCreateView): void {\n    this.advertisementService.put$(id, body).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n      this.edit = false;\n      this.clear();\n    });\n  }\n\n  public savePicture(id: number, picture: File): void {\n    this.advertisementService.updateImage$(id, picture).pipe(\n      catchError(() => of(null)),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe((res: { url: string }) => {\n      if (res !== null) {\n        this.editBannerInfo$.next({\n          ...this.editBannerInfo$.getValue(),\n          picture: res.url\n        });\n      }\n    });\n  }\n\n  public cancel(): void {\n    if (this.creations) {\n      const editBannerInfo = this.editBannerInfo$.getValue();\n      this.advertisementService.delete$(editBannerInfo.id)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe(() => {\n              this.allBanners.content = this.allBanners.content.filter((banner: IBannerReturnView) => banner.id !== editBannerInfo.id);\n              this.bannerSubject$.next(this.allBanners.content);\n          });\n    }\n    this.edit = false;\n    this.editBannerInfo$.next(null);\n    this.creations = null;\n    this.clear();\n  }\n\n  public clear(): void {\n    this.allBanners = { currentPage: 0, totalPages: 1, contentLoading: false, content: [] };\n    this.fetchNextPage();\n    window.scroll(0, 0);\n  }\n\n  public queryApply(q: string): void {\n    this.query = q !== '' ? q : null;\n    this.clear();\n  }\n\n  public sortApply(sort: string[]): void {\n    this.sort = '';\n    if (sort !== []) {\n      sort.forEach((element: string) => {\n        this.sort += element + ',';\n      });\n      this.sort = this.sort.slice(0, -1);\n    }\n    this.clear();\n  }\n\n  public setActive(id: number, active: boolean): void {\n    this.advertisementService.getById$(id).pipe(\n      switchMap((_: IBannerReturnView) => this.advertisementService.put$(id, { ...(_ as IBannerCreateView), active })),\n      tap(() => this.allBanners.content.filter((banner: IBannerReturnView) => banner.id === id)[0].active = active),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(() => this.bannerSubject$.next(this.allBanners.content));\n  }\n\n  public setPlace(id: number, place: BannerPlaceEnum): void {\n    this.advertisementService.getById$(id).pipe(\n      switchMap((_: IBannerReturnView) => this.advertisementService.put$(id, { ...(_ as IBannerCreateView), place })),\n      tap(() => this.savePicture(id, null)),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe();\n  }\n\n  public editBanner(id: number): void {\n    this.advertisementService.getById$(id)\n        .pipe(takeUntil(this.ngOnDestroy$))\n        .subscribe((banner: IBannerReturnView) => {\n      this.editBannerInfo$.next({ ...banner, id });\n      this.edit = true;\n      this.creations = false;\n    });\n  }\n\n  public delete(id: number): void {\n    this.advertisementService.delete$(id)\n      .pipe(takeUntil(this.ngOnDestroy$))\n      .subscribe(() => {\n        this.allBanners.content = this.allBanners.content.filter((banner: IBannerReturnView) => banner.id !== id);\n        this.bannerSubject$.next(this.allBanners.content);\n    });\n  }\n\n  public parseReq(req: [number, string, boolean?]): void {\n    switch (req[1]) {\n      case 'delete':\n        this.delete(req[0]);\n        break;\n      case 'active':\n        this.setActive(req[0], req[2]);\n        break;\n      case 'edit':\n        this.editBanner(req[0]);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div class=\"admin-wrap\">\n    <div class=\"admin-bar\">\n        <nav class=\"admin-nav\">\n            <ul>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/ratings\">Настройка рейтингов</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/topics\">Управление темами</a></li>\n                <li><a routerLink=\"/dashboard/ads\" routerLinkActive=\"active\">Управление рекламными блоками</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/events-jobs\">Мероприятия и Вакансии</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/roles\">Управление правами Админов</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/tags\">Управление Тегами</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/activity\">Активность пользователей</a></li>\n                <li><a *appRoleGuard=\"['ROLE_SUPERUSER']\" routerLink=\"/dashboard/preview\">Управление preview</a></li>\n            </ul>        \n        </nav>\n        <div *ngIf=\"edit\" class=\"admin-bar-list\">\n            <h2 class=\"admin-bar-list__title\">Место размещения</h2>\n            <ol>\n                <li>Хэдер (под хэдером) [Х]</li>\n                <li>Лента [Л1]</li>\n                <li>Лента [Л2]</li>\n                <li>Лента [Л3]</li>\n                <li>Публикация (под публикацией, над комментариями) [ПП1]</li>\n                <li>Публикация / Правый сайдбар первый [ПП2] (под публикацией, под комментариями)</li>\n                <li>Публикация (правый сайдбар в публикации) [ПС]</li>\n            </ol>\n        </div>\n    </div>\n    <div class=\"admin-content\">\n        <app-create-banner *ngIf=\"!edit\"\n                           (createReq)=\"create()\"\n                           (queryReq)=\"queryApply($event)\"\n        ></app-create-banner>\n        <app-banner-editor *ngIf=\"edit\"\n                           [inputData$]=\"editBannerInfo$\"\n                           (pictureReq)=\"savePicture($event[0], $event[1])\"\n                           (cancelReq)=\"cancel()\"\n                           (saveReq)=\"save($event[0], $event[1])\"\n                           (savePlaceReq)=\"setPlace($event[0], $event[1])\"\n        ></app-banner-editor>\n    </div>\n</div>\n<div *ngIf=\"!edit\" class=\"admin-tab-wrap\">\n    <app-banner-list [banners$]=\"bannerSubject$\"\n                     (actionReq)=\"parseReq($event)\"\n                     (sortReq)=\"sortApply($event)\"\n    ></app-banner-list>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { IBannerReturnView } from '@api/schemas/advertisement/banner-return-view.interface';\nimport { IBannerSortItem } from './banner-sort-item.interface';\nimport { BANNER_SORT_ITEMS } from './banner-sort-items.const';\nimport { BannerStateEnum } from './banner-state.enum';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-banner-list',\n  templateUrl: './banner-list.component.html',\n  styleUrls: ['./banner-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BannerListComponent {\n  @Input() public banners$: Subject<IBannerReturnView[]>;\n\n  @Output() public readonly actionReq: EventEmitter<[number, string, boolean?]> = new EventEmitter<[number, string, boolean?]>();\n  @Output() public readonly sortReq: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  public sortItems: IBannerSortItem[] = BANNER_SORT_ITEMS;\n  public StateEnum: typeof BannerStateEnum = BannerStateEnum;\n  public sort: IBannerSortItem[] = [];\n\n  constructor() { }\n\n  public parseDate(date: string | number): string {\n    const temp: Date = new Date(date);\n    return date ? temp.getUTCDate() + '.' + (temp.getUTCMonth() + 1) + '.' + temp.getUTCFullYear() : null;\n  }\n\n  public returnState(item: IBannerSortItem): BannerStateEnum {\n    return this.sortItems.filter((_: IBannerSortItem) => _.id === item.id)[0].state;\n  }\n\n  private changeSortItem(item: IBannerSortItem): void {\n    this.sortItems[item.id].state =\n      this.sortItems[item.id].state === BannerStateEnum.UNSELECTED\n        ? BannerStateEnum.SELECTED_DESC\n        : this.sortItems[item.id].state === BannerStateEnum.SELECTED_DESC\n        ? BannerStateEnum.SELECTED_ASC\n        : BannerStateEnum.UNSELECTED;\n  }\n\n  public changeSort(item: IBannerSortItem): void {\n    this.changeSortItem(item);\n    this.sort = this.sort.filter((x: IBannerSortItem) => x.id !== item.id);\n    if (this.sortItems[item.id].state !== BannerStateEnum.UNSELECTED) {\n      if (this.sort.length === 3) {\n        this.sort.shift();\n      }\n      this.sort.push({ ...this.sortItems[item.id] });\n    }\n    this.parseSort();\n  }\n\n  private parseSort(): void {\n    const str: string[] = [];\n    this.sort.forEach((element: IBannerSortItem) => {\n      str.push(element.payload + (element.state === BannerStateEnum.SELECTED_DESC ? 'DESC' : 'ASC'));\n    });\n    this.sortReq.emit(str);\n  }\n\n  public parseActivity(activity: boolean): string {\n    return activity ? 'да' : 'нет';\n  }\n\n  public getDateDifference(date1: string | number, date2: string | number): number {\n    const temp1: Date = new Date(date1);\n    const temp2: Date = new Date(date2);\n    return date1 && date2 ? Math.ceil(Math.abs(temp1.getTime() - temp2.getTime()) / (1000 * 60 * 60 * 24)) : null;\n  }\n\n  public parsePlace(place: BannerPlaceEnum): string {\n    switch (place) {\n      case BannerPlaceEnum.FEED1:\n        return 'Лента [Л1]';\n      case BannerPlaceEnum.FEED2:\n        return 'Лента [Л2]';\n      case BannerPlaceEnum.FEED3:\n        return 'Лента [Л3]';\n      case BannerPlaceEnum.HEADER:\n        return 'Хэдер (под хэдером)';\n      case BannerPlaceEnum.PUBLICATION_ABOVE_COMMENTS:\n        return 'Публикация (под публикацией, над комментариями) [ПП]';\n      case BannerPlaceEnum.PUBLICATION_BELOW_COMMENTS:\n        return 'Публикация (под комментариями) [ПК]';\n      case BannerPlaceEnum.PUBLICATION_SIDEBAR:\n        return 'Публикация / Правый сайдбар [П/ПС]';\n      default:\n        return null;\n    }\n  }\n\n  public makeAction(id: number, action: string, param?: boolean): void {\n    if (param) {\n      this.actionReq.emit([id, action, param]);\n    } else {\n      this.actionReq.emit([id, action]);\n    }\n  }\n}\n","<div class=\"table-container\">\n    <table class=\"admin-tab\">\n        <thead>\n        <tr>\n            <th></th>\n            <th *ngFor=\"let item of ('COMMON.SORT_ITEMS' | translate)\">\n                <div class=\"admin-tab__sort\" (click)=\"changeSort(item)\">\n                    {{ item.name }}\n                    <div *ngIf=\"returnState(item) === StateEnum.SELECTED_DESC\" class=\"admin-tab__sort-icn\">\n                        <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7927 0C13.0424 0 13.1828 0.28719 13.0294 0.484237L7.23743 7.92754C7.11732 8.08189 6.88401 8.08189 6.76391 7.92754L0.971897 0.484237C0.818564 0.287189 0.958983 0 1.20866 0L12.7927 0Z\" />\n                        </svg>\n                    </div>\n                    <div *ngIf=\"returnState(item) === StateEnum.SELECTED_ASC\" class=\"admin-tab__sort-icn\">\n                        <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" style=\"display: block; transform: scale(1,-1)\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7927 0C13.0424 0 13.1828 0.28719 13.0294 0.484237L7.23743 7.92754C7.11732 8.08189 6.88401 8.08189 6.76391 7.92754L0.971897 0.484237C0.818564 0.287189 0.958983 0 1.20866 0L12.7927 0Z\" />\n                        </svg>\n                    </div>\n                </div>\n            </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let banner of banners$ | async\">\n            <td>\n                <app-banner-dropdown [isActive]=\"banner.active\"\n                        (deleteReq)=\"makeAction(banner.id, 'delete')\"\n                        (activeReq)=\"makeAction(banner.id, 'active', $event)\"\n                        (editReq)=\"makeAction(banner.id, 'edit')\">\n                </app-banner-dropdown>\n            </td>\n            <td>{{ banner.name }}</td>\n            <td>{{ parsePlace(banner.place) }}</td>\n            <td>{{ parseActivity(banner.active) }}</td>\n            <td>{{ parseDate(banner.startDateTime) }}</td>\n            <td>{{ parseDate(banner.stopDateTime) }}</td>\n            <td>{{ getDateDifference(banner.startDateTime, banner.stopDateTime) }}</td>\n            <td>{{ banner.clicksCount }}</td>\n            <td>{{ banner.viewsCount }}</td>\n            <td>{{ banner.rotation }}</td>\n            <td>{{ banner.id }}</td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdsManagementPageComponent } from './ads-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdsManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdsManagementPageRoutingModule {}\n","export enum BannerPlaceTypeEnum {\n    TIME_INTERVAL = 'TIME_INTERVAL',\n    VIEWS_COUNT = 'VIEWS_COUNT',\n    CLICKS_COUNT = 'CLICKS_COUNT',\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-create-banner',\n  templateUrl: './create-banner.component.html',\n  styleUrls: ['./create-banner.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CreateBannerComponent {\n  @Output() public readonly createReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly queryReq: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {}\n\n  public create(): void {\n    this.createReq.emit();\n  }\n\n  public query(e: Event): void {\n    this.queryReq.emit((e.target as any).value);\n  }\n}\n","<section class=\"admin-blc admin-blc__grey\">            \n    <form action=\"#\" method=\"post\" class=\"admin-form\">\n        <h2 class=\"admin-blc__title\">Рекламный баннер. Список</h2>\n        <div class=\"admin-form__wrap\">\n            <div class=\"admin-form__wrap-main\">\n                <label class=\"admin-input-blc\">\n                    <span class=\"admin-input-row__title\">Список</span>\n                    <span class=\"admin-input-row__inputgroup\">\n                        <input type=\"text\" class=\"admin-input\" name=\"list\" (keyup)=\"query($event)\">\n                    </span>\n                </label>                  \n            </div>\n            <div class=\"admin-form__wrap-bar\">\n                <button class=\"btn admin-form__add\" (click)=\"create()\">\n                    <svg id=\"btn-add\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n                        <path d=\"M0.5 12C0.5 5.64873 5.64873 0.5 12 0.5C18.3513 0.5 23.5 5.64873 23.5 12C23.5 18.3513 18.3513 23.5 12 23.5C5.64873 23.5 0.5 18.3513 0.5 12Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7132 11.2856H17.7132C18.1077 11.2856 18.4275 11.6054 18.4275 11.9999C18.4275 12.3943 18.1077 12.7141 17.7132 12.7141H12.7132V17.7141C12.7132 18.1086 12.3934 18.4284 11.9989 18.4284C11.6044 18.4284 11.2846 18.1086 11.2846 17.7141V12.7141H6.2846C5.89011 12.7141 5.57031 12.3943 5.57031 11.9999C5.57031 11.6054 5.89011 11.2856 6.2846 11.2856H11.2846V6.28557C11.2846 5.89109 11.6044 5.57129 11.9989 5.57129C12.3934 5.57129 12.7132 5.89109 12.7132 6.28557V11.2856Z\" fill=\"#00B7FF\"></path>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </form>\n </section>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { IBannerReturnView } from '@api/schemas/advertisement/banner-return-view.interface';\nimport { IBannerCreateView } from '@api/schemas/advertisement/banner-create-view.interface';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { BannerPlaceTypeEnum } from '@api/schemas/advertisement/banner-place-type.enum';\nimport { BANNER_EDITOR_ITEMS } from './banner-editor-items.const';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-banner-editor',\n  templateUrl: './banner-editor.component.html',\n  styleUrls: ['./banner-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BannerEditorComponent implements OnInit {\n  @ViewChild('image', { static: false }) private imageInput: ElementRef;\n\n  @Input() public inputData$: BehaviorSubject<IBannerReturnView>;\n\n  @Output() public readonly cancelReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly saveReq: EventEmitter<[number, IBannerCreateView]> = new EventEmitter<[number, IBannerCreateView]>();\n  @Output() public readonly savePlaceReq: EventEmitter<[number, BannerPlaceEnum]> = new EventEmitter<[number, BannerPlaceEnum]>();\n  @Output() public readonly pictureReq: EventEmitter<[number, File]> = new EventEmitter<[number, File]>();\n\n  public items: ISelectItem[] = BANNER_EDITOR_ITEMS;\n  public selectedPlace: ISelectItem = this.items[0];\n  public BannerPlaceTypeEnum: typeof BannerPlaceTypeEnum = BannerPlaceTypeEnum;\n  public imagePreview: string = null;\n  public now = Date.now();\n  public minDateTime = this.datePipe.transform(this.now, 'yyyy-MM-dd');\n\n  public adsForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private readonly datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    const data = this.inputData$.getValue();\n    this.adsForm = this.fb.group({\n      name: [data.name, [Validators.required]],\n      afterPublication: [data.afterPublication, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      startDateTime: [this.datePipe.transform(data.startDateTime, 'yyyy-MM-dd'), []],\n      stopDateTime: [this.datePipe.transform(data.stopDateTime, 'yyyy-MM-dd'), []],\n      startViewsTime: [this.datePipe.transform(data.startViewsTime, 'yyyy-MM-dd'), []],\n      stopViewsCount: [data.stopViewsCount, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      startClicksTime: [this.datePipe.transform(data.startClicksTime, 'yyyy-MM-dd'), []],\n      stopClicksCount: [data.stopClicksCount, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      rotation: [data.rotation, [Validators.min(0), Validators.pattern('^[0-9]*$')]],\n      url: [data.url, []],\n      text: [data.text, []],\n      active: [data.active, []],\n      placeType: [data.placeType],\n      [BannerPlaceTypeEnum.TIME_INTERVAL]: [data.placeType === BannerPlaceTypeEnum.TIME_INTERVAL],\n      [BannerPlaceTypeEnum.VIEWS_COUNT]: [data.placeType === BannerPlaceTypeEnum.VIEWS_COUNT],\n      [BannerPlaceTypeEnum.CLICKS_COUNT]: [data.placeType === BannerPlaceTypeEnum.CLICKS_COUNT],\n      img: [null, []]\n    });\n    this.parsePlace();\n  }\n\n  private sendImg(): void {\n    this.pictureReq.emit([this.inputData$.getValue().id, this.adsForm.controls.img.value]);\n  }\n\n  private parsePlace(): void {\n    switch (this.inputData$.getValue().place) {\n      case BannerPlaceEnum.HEADER:\n        this.selectedPlace = this.items[0];\n        break;\n      case BannerPlaceEnum.FEED1:\n        this.selectedPlace = this.items[1];\n        break;\n      case BannerPlaceEnum.FEED2:\n        this.selectedPlace = this.items[2];\n        break;\n      case BannerPlaceEnum.FEED3:\n        this.selectedPlace = this.items[3];\n        break;\n      case BannerPlaceEnum.PUBLICATION_ABOVE_COMMENTS:\n        this.selectedPlace = this.items[4];\n        break;\n      case BannerPlaceEnum.PUBLICATION_BELOW_COMMENTS:\n        this.selectedPlace = this.items[5];\n        break;\n      case BannerPlaceEnum.PUBLICATION_SIDEBAR:\n        this.selectedPlace = this.items[6];\n        break;\n    }\n  }\n\n  public setPlaceType(type: BannerPlaceTypeEnum): void {\n    switch (type) {\n      case BannerPlaceTypeEnum.CLICKS_COUNT: {\n        this.adsForm.controls[BannerPlaceTypeEnum.TIME_INTERVAL].setValue(false);\n        this.adsForm.controls[BannerPlaceTypeEnum.VIEWS_COUNT].setValue(false);\n        this.adsForm.controls.placeType.setValue(BannerPlaceTypeEnum.CLICKS_COUNT);\n        break;\n      }\n      case BannerPlaceTypeEnum.TIME_INTERVAL: {\n        this.adsForm.controls[BannerPlaceTypeEnum.CLICKS_COUNT].setValue(false);\n        this.adsForm.controls[BannerPlaceTypeEnum.VIEWS_COUNT].setValue(false);\n        this.adsForm.controls.placeType.setValue(BannerPlaceTypeEnum.TIME_INTERVAL);\n        break;\n      }\n      case BannerPlaceTypeEnum.VIEWS_COUNT: {\n        this.adsForm.controls[BannerPlaceTypeEnum.CLICKS_COUNT].setValue(false);\n        this.adsForm.controls[BannerPlaceTypeEnum.TIME_INTERVAL].setValue(false);\n        this.adsForm.controls.placeType.setValue(BannerPlaceTypeEnum.VIEWS_COUNT);\n      }\n    }\n  }\n\n  public onImageChange(event: any): void {\n    if (event.target.files.length) {\n      this.adsForm.controls.img.setValue(event.target.files[0]);\n    }\n\n    this.sendImg();\n  }\n\n  public clearImg(): void {\n    if (this.adsForm.controls.img.value) {\n      this.adsForm.controls.img.setValue(null);\n      this.imageInput.nativeElement.value = '';\n      this.sendImg();\n    }\n  }\n\n  public onPlaceChange(place: ISelectItem): void {\n    this.savePlaceReq.emit([this.inputData$.getValue().id, place.payload.type]);\n  }\n\n  public save(): void {\n    const data = this.adsForm.getRawValue();\n    const ret: IBannerCreateView = {\n      ...data,\n      startDateTime: data.startDateTime ? new Date(data.startDateTime).getTime() : null,\n      stopDateTime: data.stopDateTime ? new Date(data.stopDateTime).getTime() : null,\n      startViewsTime: data.startViewsTime ? new Date(data.startViewsTime).getTime() : null,\n      startClicksTime: data.startClicksTime ? new Date(data.startClicksTime).getTime() : null,\n      picture: this.inputData$.getValue().picture,\n      place: this.selectedPlace.payload.type,\n    };\n    this.saveReq.emit([this.inputData$.getValue().id, ret]);\n  }\n\n  public cancel(): void {\n    this.cancelReq.emit();\n  }\n}\n","<section class=\"admin-blc admin-blc__grey\">\n    <form *ngIf=\"adsForm\" class=\"admin-form\" [formGroup]=\"adsForm\">\n        <h2 class=\"admin-blc__title\">Форма создания рекламного баннера</h2>\n        <fieldset class=\"admin-form__fieldset\">\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Наименование проекта (100 знаков)</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <textarea name=\"name\"\n                              class=\"admin-textarea admin-textarea_100\"\n                              maxlength=\"100\"\n                              formControlName=\"name\">\n                    </textarea>\n                </span>\n            </label>\n            <div class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">Место размещения</span>\n                <app-dashboard-select [(selected)]=\"selectedPlace\"\n                                      [items]=\"items\"\n                                      [dropdownWidth]=\"250\"\n                                      (changeRes)=\"onPlaceChange($event)\">\n                </app-dashboard-select>\n            </div>\n            <label class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">Выводить после</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"number\"\n                           class=\"admin-input admin-input_xs\"\n                           name=\"afterPublication\"\n                           style=\"width: 100px;\"\n                           min=\"0\"\n                           formControlName=\"afterPublication\">\n                    <span>&nbsp;публикации</span>\n                </span>\n            </label>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <legend class=\"admin-form__legend\">Период размещения</legend>\n            <div class=\"admin-form__grid\" style=\"grid-template-rows: 1fr 1fr 1fr; grid-auto-flow: column;\">\n                <div class=\"admin-form__col\" style=\"width: 100%\">\n                    <label class=\"admin-check\" (click)=\"setPlaceType(BannerPlaceTypeEnum.TIME_INTERVAL)\">\n                        <input type=\"checkbox\" \n                               [formControlName]=\"BannerPlaceTypeEnum.TIME_INTERVAL\">\n                        <span class=\"admin-check__txt\">Временной интервал</span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Старт:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\"\n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"timeinterval_start\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   [min]=\"minDateTime\"\n                                   formControlName=\"startDateTime\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Финиш:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\"\n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"timeinterval_finish\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   [min]=\"adsForm.controls.startDateTime.value || now | date : 'yyyy-MM-dd'\"\n                                   formControlName=\"stopDateTime\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                </div>\n                <div class=\"admin-form__col\" style=\"width: 100%\">\n                    <label class=\"admin-check\" (click)=\"setPlaceType(BannerPlaceTypeEnum.VIEWS_COUNT)\">\n                        <input type=\"checkbox\"\n                               [formControlName]=\"BannerPlaceTypeEnum.VIEWS_COUNT\">\n                        <span class=\"admin-check__txt\">Количество показов</span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Старт:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\"\n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"show_start\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   [min]=\"now | date : 'yyyy-MM-dd'\"\n                                   formControlName=\"startViewsTime\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Финиш:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"number\"\n                                   class=\"admin-input admin-input_xs\"\n                                   [min]=\"0\" style=\"width: 100px;\"\n                                   name=\"how_finish\"\n                                   formControlName=\"stopViewsCount\">\n                            <span>&nbsp;показов</span>\n                        </span>\n                    </label>\n                </div>\n                <div class=\"admin-form__col\" style=\"width: 100%\">\n                    <label class=\"admin-check\" (click)=\"setPlaceType(BannerPlaceTypeEnum.CLICKS_COUNT)\">\n                        <input type=\"checkbox\" \n                               [formControlName]=\"BannerPlaceTypeEnum.CLICKS_COUNT\">\n                        <span class=\"admin-check__txt\">Количество кликов</span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Старт:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"date\" \n                                   class=\"admin-input admin-input_s\"\n                                   style=\"width: 220px;\"\n                                   name=\"click_start\"\n                                   placeholder=\"'COMMON.DATE_PLACEHOLDER' | translate\"\n                                   formControlName=\"startClicksTime\"\n                                   [min]=\"now | date : 'yyyy-MM-dd'\">\n                            <span>&nbsp;г.</span>\n                        </span>\n                    </label>\n                    <label class=\"admin-input-row\">\n                        <span class=\"admin-input-row__title admin-input-row__title_s\">Финиш:</span>\n                        <span class=\"admin-input-row__inputgroup\">\n                            <input type=\"number\"\n                                   class=\"admin-input admin-input_xs\"\n                                   min=\"0\"\n                                   style=\"width: 100px;\"\n                                   name=\"click_finish\"\n                                   formControlName=\"stopClicksCount\">\n                            <span>&nbsp;кликов</span>\n                        </span>\n                    </label>\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <label class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">Коэффициент ротации</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"number\"\n                           class=\"admin-input admin-input_short admin-input-row__input\"\n                           name=\"coeficient\"\n                           min=\"0\"\n                           formControlName=\"rotation\">\n                </span>\n            </label>\n            <label class=\"admin-input-row\">\n                <span class=\"admin-input-row__title\">URL</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <input type=\"text\" class=\"admin-input\" name=\"url\" formControlName=\"url\">\n                </span>\n            </label>\n            <label class=\"admin-input-blc\">\n                <span class=\"admin-input-row__title\">Текст гиперактивной кнопки</span>\n                <span class=\"admin-input-row__inputgroup\">\n                    <textarea #btnText\n                              name=\"text\"\n                              class=\"admin-textarea admin-textarea_100\"\n                              formControlName=\"text\"\n                              maxlength=\"12\">\n                    </textarea>\n                    <div class=\"btn-text\"><span>{{ 12 - btnText.value.length }}</span></div>\n                </span>\n            </label>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <legend class=\"admin-form__legend\">{{ 'COMMON.IMAGE' | translate }}</legend>\n            <p>Рекомендуемые форматы: <b>png, jpg</b> Размер изображения (берется из места размещения): {{ selectedPlace.payload.size }}</p>\n            <div class=\"admin-upload\">\n                <div class=\"admin-upload__bar\">\n                    <label class=\"admin-upload__label\">\n                        <input formArrayName=\"img\" #image type=\"file\" accept=\"image/*\" (change)=\"onImageChange($event)\">\n                        <div class=\"btn admin-upload__add\">Загрузить изображение</div>\n                    </label>\n                    <button class=\"btn admin-upload__del\"\n                            type=\"button\" \n                            (click)=\"clearImg()\">\n                        Удалить изображение\n                    </button>\n                </div>\n                <div *ngIf=\"!(inputData$ | async).picture\" class=\"admin-upload__wrap\"\n                     style=\"cursor: pointer;\" (click)=\"image.click()\">\n                    <div class=\"admin-upload__wrap-plus\">\n                        <svg id=\"btn-add\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n                            <path d=\"M0.5 12C0.5 5.64873 5.64873 0.5 12 0.5C18.3513 0.5 23.5 5.64873 23.5 12C23.5 18.3513 18.3513 23.5 12 23.5C5.64873 23.5 0.5 18.3513 0.5 12Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7132 11.2856H17.7132C18.1077 11.2856 18.4275 11.6054 18.4275 11.9999C18.4275 12.3943 18.1077 12.7141 17.7132 12.7141H12.7132V17.7141C12.7132 18.1086 12.3934 18.4284 11.9989 18.4284C11.6044 18.4284 11.2846 18.1086 11.2846 17.7141V12.7141H6.2846C5.89011 12.7141 5.57031 12.3943 5.57031 11.9999C5.57031 11.6054 5.89011 11.2856 6.2846 11.2856H11.2846V6.28557C11.2846 5.89109 11.6044 5.57129 11.9989 5.57129C12.3934 5.57129 12.7132 5.89109 12.7132 6.28557V11.2856Z\" fill=\"#00B7FF\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div *ngIf=\"(inputData$ | async).picture\">\n                    <img [src]=\"(inputData$ | async).picture\" alt=\"\" style=\"max-width: 100%;\">\n                </div>\n            </div>\n        </fieldset>\n        <fieldset class=\"admin-form__fieldset\">\n            <label class=\"admin-check\">\n                <input type=\"checkbox\" name=\"active\" formControlName=\"active\">\n                <span class=\"admin-check__txt\">Активировать сразу (в списке будет активным)</span>\n            </label>\n        </fieldset>\n        <div class=\"admin-form__bar\">\n            <button class=\"btn admin-btn_white\" [disabled]=\"adsForm.invalid\" (click)=\"save()\">Добавить в список</button>\n            <button class=\"btn admin-btn_blue\" (click)=\"cancel()\">{{ 'COMMON.UNDO' | translate}}</button>\n        </div>\n    </form>\n</section>\n","import { BannerStateEnum } from './banner-state.enum';\nimport { IBannerSortItem } from './banner-sort-item.interface';\n\nexport const BANNER_SORT_ITEMS: IBannerSortItem[] = [\n    {\n        id: 0,\n        name: 'Наименование',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'NAME_',\n    },\n    {\n        id: 1,\n        name: 'Место',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'PLACE_',\n    },\n    {\n        id: 2,\n        name: 'Активность',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'ACTIVITY_',\n    },\n    {\n        id: 3,\n        name: 'Дата размещения',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'START_DATE_',\n    },\n    {\n        id: 4,\n        name: 'Дата завершения',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'END_DATE_',\n    },\n    {\n        id: 5,\n        name: 'Период размещения',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'PLACE_PERIOD_',\n    },\n    {\n        id: 6,\n        name: 'Кликов',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'CLICKS_',\n    },\n    {\n        id: 7,\n        name: 'Показов',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'VIEWS_',\n    },\n    {\n        id: 8,\n        name: 'К. ротации',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'ROTATION_',\n    },\n    {\n        id: 9,\n        name: 'ID',\n        state: BannerStateEnum.UNSELECTED,\n        payload: 'ID_',\n    }\n];\n","import { Component, HostListener, ElementRef, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-banner-dropdown',\n  templateUrl: './banner-dropdown.component.html',\n  styleUrls: ['./banner-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BannerDropdownComponent {\n  @Input() public isActive: boolean;\n\n  @Output() public readonly activeReq: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() public readonly deleteReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly editReq: EventEmitter<void> = new EventEmitter<void>();\n\n  public dropdown = false;\n\n  constructor(private readonly ref: ElementRef) {}\n\n  @HostListener('document:click', ['$event']) public clickOut(event: Event): void {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      this.dropdown = false;\n    }\n  }\n\n  public delete(): void {\n    this.dropdown = false;\n    this.deleteReq.emit();\n  }\n\n  public edit(): void {\n    this.dropdown = false;\n    this.editReq.emit();\n  }\n\n  public active(param: boolean): void {\n    this.dropdown = false;\n    this.activeReq.emit(param);\n  }\n}\n","<div class=\"admin-dropdown\">\n    <button class=\"btn admin-dropdown__btn\" (click)=\"dropdown = !dropdown\">\n        <svg width=\"18\" height=\"4\" viewBox=\"0 0 18 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4 2C4 0.89543 3.10457 0 2 0C0.89543 0 0 0.89543 0 2C0 3.10457 0.89543 4 2 4C3.10457 4 4 3.10457 4 2ZM11 2C11 0.89543 10.1046 0 9 0C7.89543 0 7 0.89543 7 2C7 3.10457 7.89543 4 9 4C10.1046 4 11 3.10457 11 2ZM16 0C17.1046 0 18 0.89543 18 2C18 3.10457 17.1046 4 16 4C14.8954 4 14 3.10457 14 2C14 0.89543 14.8954 0 16 0Z\" />\n        </svg>\n    </button>\n    <div class=\"admin-dropdown__content\" [ngClass]=\"{ 'show': dropdown }\">\n        <a *ngIf=\"isActive\" (click)=\"active(false)\">Сделать не активным</a>\n        <a *ngIf=\"!isActive\" (click)=\"active(true)\">Сделать активным</a>\n        <a (click)=\"edit()\">{{ 'COMMON.EDIT' | translate}}</a>\n        <a (click)=\"delete()\">{{ 'COMMON.REMOVE' | translate}}</a>\n    </div>\n</div>\n","export enum BannerStateEnum {\n    SELECTED_DESC = 'SELECTED_DESC',\n    SELECTED_ASC = 'SELECTED_ASC',\n    UNSELECTED = 'UNSELECTED',\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { AdsManagementPageRoutingModule } from './ads-management-page-routing.module';\nimport { AdsManagementPageComponent } from './ads-management-page.component';\nimport { CreateBannerComponent } from './components/create-banner/create-banner.component';\nimport { BannerListComponent } from './components/banner-list/banner-list.component';\nimport { BannerEditorComponent } from './components/banner-editor/banner-editor.component';\nimport { BannerDropdownComponent } from './components/banner-dropdown/banner-dropdown.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardSelectModule } from '@modules/dashboard/shared/ui/dashboard-select/dashboard-select.module';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\n\n@NgModule({\n  declarations: [\n      AdsManagementPageComponent,\n      CreateBannerComponent,\n      BannerListComponent,\n      BannerEditorComponent,\n      BannerDropdownComponent\n  ],\n  imports: [\n      CommonModule,\n      AdsManagementPageRoutingModule,\n      FormsModule,\n      DashboardSelectModule,\n      CommonDirectivesModule,\n      TranslateModule,\n      ReactiveFormsModule\n  ],\n  providers: [\n      DatePipe\n  ]\n})\nexport class AdsManagementPageModule {}\n","import { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\n\nexport const BANNER_EDITOR_ITEMS: ISelectItem[] = [\n    {\n        id: 0,\n        title: 'Хэдер (под хэдером)',\n        payload: {\n            size: '1440x100',\n            type: BannerPlaceEnum.HEADER,\n        },\n    },\n    {\n        id: 1,\n        title: 'Лента [Л1]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.FEED1,\n        },\n    },\n    {\n        id: 2,\n        title: 'Лента [Л2]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.FEED2,\n        },\n    },\n    {\n        id: 3,\n        title: 'Лента [Л3]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.FEED3,\n        },\n    },\n    {\n        id: 4,\n        title: 'Публикация (под публикацией, над комментариями) [ПП]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.PUBLICATION_ABOVE_COMMENTS,\n        },\n    },\n    {\n        id: 5,\n        title: 'Публикация (под комментариями) [ПК]',\n        payload: {\n            size: '1060x100',\n            type: BannerPlaceEnum.PUBLICATION_BELOW_COMMENTS,\n        },\n    },\n    {\n        id: 6,\n        title: 'Публикация / Правый сайдбар [П/ПС]',\n        payload: {\n            size: '300x600',\n            type: BannerPlaceEnum.PUBLICATION_SIDEBAR,\n        },\n    },\n];\n","import { IBannerCreateView } from '@api/schemas/advertisement/banner-create-view.interface';\nimport { BannerPlaceEnum } from '@api/schemas/advertisement/banner-place.enum';\n\nexport const CREATE_BANNER: IBannerCreateView = {\n    name: null,\n    text: null,\n    place: BannerPlaceEnum.HEADER,\n    rotation: null,\n    url: null,\n    picture: null,\n    active: null,\n    afterPublication: null,\n    placeType: null,\n    startDateTime: null,\n    stopDateTime: null,\n    startViewsTime: null,\n    stopViewsCount: null,\n    startClicksTime: null,\n    stopClicksCount: null,\n};\n"],"sourceRoot":"webpack:///"}