{"version":3,"sources":["webpack:///src/app/shared/services/feed-resolver.service.ts","webpack:///src/app/api/schemas/event/event-currency.enum.ts","webpack:///src/app/api/schemas/event/event-filters.enum.ts"],"names":["fetchArticlesWithTopics$","page","topicsService","topics","topicsIds","content","forEach","article","length","includes","push","getOne$","pipe","topicsRet","find","x","meta","id","FeedResolverService","feedService","platformService","usersService","resolve","route","isServer","path","pathFromRoot","map","ars","url","segment","toString","join","feedRequest$","order","TIME","topic","params","tag","getSingle$","user","author","providedIn","EventCurrencyEnum","EventFiltersEnum"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FeedService } from '@api/routes/feed.service';\nimport { ActivatedRouteSnapshot, UrlSegment } from '@angular/router';\nimport { IArticleView } from '@api/schemas/article/article-view.interface';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { PlatformService } from './platform.service';\nimport { switchMap, map, defaultIfEmpty, catchError } from 'rxjs/operators';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { FeedOrderEnum } from '@api/schemas/feed/feed-order.enum';\nimport { ITopicView } from '@api/schemas/topic/topic-view.interface';\nimport { UsersService } from '@api/routes/users.service';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { ITopicViewFull } from '@api/schemas/topic/topic-view-full.interface';\n\nfunction fetchArticlesWithTopics$(\n  page: IPageResponse<IArticleView>,\n  topicsService: TopicsService\n): Observable<IPageResponse<[IArticleView, ITopicView]>> {\n  const topics: Observable<ITopicViewFull>[] = [];\n  const topicsIds: number[] = [];\n  page.content.forEach((article: IArticleView) => {\n    if (article.topics.length > 0) {\n      if (!topicsIds.includes(article.topics[0])) {\n        topicsIds.push(article.topics[0]);\n        topics.push(topicsService.getOne$(article.topics[0]).pipe(catchError(() => of(null))));\n      }\n    }\n  });\n  return page.content.length > 0 ? combineLatest(topics).pipe(defaultIfEmpty([]), map((topicsRet: ITopicViewFull[]) => {\n    const content: [IArticleView, ITopicView][] = [];\n    page.content.forEach((article: IArticleView) => {\n      if (article.topics.length > 0) {\n        content.push([article, topicsRet.find((x: ITopicViewFull) => x.meta.id === article.topics[0]) as ITopicView]);\n      } else {\n        content.push([article, null]);\n      }\n    });\n    return { ...page, content };\n  })) : of({ ...page, content: [] });\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedResolverService {\n  constructor(\n    private readonly feedService: FeedService,\n    private readonly platformService: PlatformService,\n    private readonly topicsService: TopicsService,\n    private readonly usersService: UsersService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<[IArticleView, ITopicView][]> {\n    if (this.platformService.isServer) {\n      const path: string = route.pathFromRoot.map(\n        (ars: ActivatedRouteSnapshot) => ars.url.map((segment: UrlSegment) => segment.toString()\n      ).join('/')).join('/');\n      if (path.includes('/all')) {\n        return this.feedService.feedRequest$({ order: FeedOrderEnum.TIME, page: 0 }).pipe(\n          switchMap((article: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(article, this.topicsService)),\n          map((page: IPageResponse<[IArticleView, ITopicView]>) => page.content),\n        );\n      }\n      if (path.includes('/topics/')) {\n        return this.feedService.feedRequest$({ order: FeedOrderEnum.TIME, topic: route.params['id'], page: 0 }).pipe(\n          switchMap((article: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(article, this.topicsService)),\n          map((page: IPageResponse<[IArticleView, ITopicView]>) => page.content)\n        );\n      }\n      if (path.includes('/tags/')) {\n        return this.feedService.feedRequest$({ order: FeedOrderEnum.TIME, tag: route.params['id'], page: 0 }).pipe(\n          switchMap((article: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(article, this.topicsService)),\n          map((page: IPageResponse<[IArticleView, ITopicView]>) => page.content),\n        );\n      }\n      if (path.includes('/company/') || path.includes('/user/')) {\n        return this.usersService.getSingle$(route.params['id']).pipe(\n          switchMap((user: IUserViewFull) => this.feedService.feedRequest$({ order: FeedOrderEnum.TIME, author: user.meta.id, page: 0 })),\n          switchMap((article: IPageResponse<IArticleView>) => fetchArticlesWithTopics$(article, this.topicsService)),\n          map((page: IPageResponse<[IArticleView, ITopicView]>) => page.content)\n        );\n      }\n    }\n    return of([]);\n  }\n}\n","export enum EventCurrencyEnum {\n    FREE = 'FREE',\n    RUB = 'RUB',\n    USD = 'USD',\n    EUR = 'EUR',\n    NONE = 'NONE'\n}\n","export enum EventFiltersEnum {\n    ALL = 'ALL',\n    OTHER = 'OTHER',\n    EXHIBITIONS = 'EXHIBITIONS',\n    TRAINING = 'TRAINING',\n    REGATTAS = 'REGATTAS',\n    FLOTILLAS = 'FLOTILLAS',\n    PRESENTATIONS = 'PRESENTATIONS',\n    CONFERENCES = 'CONFERENCES',\n    FORUMS = 'FORUMS',\n}\n"]}