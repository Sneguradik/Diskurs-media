{"version":3,"sources":["webpack:///src/app/shared/utils/money-format.ts","webpack:///src/app/modules/jobs/job-preview/job-preview.module.ts","webpack:///src/app/modules/jobs/job-preview/job-preview.component.ts","webpack:///src/app/modules/jobs/job-preview/job-preview.component.html","webpack:///src/app/api/schemas/job/job-currency.enum.ts"],"names":["formatMoney","amount","currency","JobPreviewModule","forChild","declarations","imports","exports","JobPreviewComponent","sessionService","jobsService","changeDetectorRef","showcaseService","userDropdown","gone","goneBookmarked","publicationStageEnum","result","job","info","minSalary","push","maxSalary","join","ngOnInit","user$","pipe","ngOnDestroy$","subscribe","user","isOwner","meta","id","company","markForCheck","hide","hide$","publish","value","publish$","publicationStage","PUBLISHED","withdraw$","DRAFT","delete","delete$","showcase","showcase$","_","navigate$","toggleBookmark","loggedIn$","bookmark$","bookmarks","you","count","next","setShowDropdown","selector","templateUrl","styleUrls","changeDetection","OnPush","JobCurrencyEnum"],"mappings":"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","file":"default~all-jobs-all-jobs-module~pages-user-jobs-page-user-jobs-page-module~pages-user-promoted-page~90d31588-es5.js","sourcesContent":["export function formatMoney(amount: number, currency: 'RUB' | 'EUR' | 'USD' | string): string {\n  switch (currency) {\n    case 'EUR':\n      return `€${ amount }`;\n    case 'USD':\n      return `$${ amount }`;\n    case 'RUB':\n      return `${ amount } ₽`;\n    default:\n      return `${ amount } ${ currency }`;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { JobPreviewComponent } from './job-preview.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\nimport { UserInfoModule } from '@shared/modules/user-info/user-info.module';\n\n@NgModule({\n  declarations: [JobPreviewComponent],\n  imports: [\n    CommonModule,\n    UserInfoModule,\n    SharedComponentsModule,\n    SharedUiModule,\n    SharedPipesModule,\n    RouterModule,\n    CommonDirectivesModule,\n    TranslateModule.forChild()\n  ],\n  exports: [JobPreviewComponent],\n})\nexport class JobPreviewModule { }\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, OnInit, OnDestroy } from '@angular/core';\nimport { ShowcasesService } from '@api/routes/showcases.service';\nimport { IJobView } from '@api/schemas/job/job-view.interface';\nimport { SessionService } from '@app/services/session.service';\nimport { UserDropdownService } from '@layout/shared/services/user-dropdown.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { formatMoney } from '@shared/utils/money-format';\nimport { takeUntil } from 'rxjs/operators';\nimport { JobsService } from '@api/routes/jobs.service';\nimport { JobCurrencyEnum } from '@api/schemas/job/job-currency.enum';\nimport { PublicationStageEnum } from '@api/schemas/article/publication-stage.enum';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { ICreatedObject } from '@api/schemas/object/created-object.interface';\n\n@Component({\n  selector: 'app-job-preview',\n  templateUrl: './job-preview.component.html',\n  styleUrls: ['./job-preview.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class JobPreviewComponent extends AbstractComponent implements OnInit, OnDestroy {\n  @Input() public job: IJobView;\n  @Input() public isOwner: boolean;\n\n  @Output() public readonly gone: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly goneBookmarked: EventEmitter<[IJobView, string]> = new EventEmitter<[IJobView, string]>();\n\n  public readonly publicationStageEnum: typeof PublicationStageEnum = PublicationStageEnum;\n\n  public get salary(): string {\n    const result = [];\n    if (this.job.info.minSalary) {\n      result.push('от', formatMoney(+this.job.info.minSalary, JobCurrencyEnum[this.job.info.currency]));\n    }\n    if (this.job.info.maxSalary) {\n      result.push('до', formatMoney(+this.job.info.maxSalary, JobCurrencyEnum[this.job.info.currency]));\n    }\n\n    return result.join(' ');\n  }\n\n  constructor(\n    private readonly sessionService: SessionService,\n    private readonly jobsService: JobsService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly showcaseService: ShowcasesService,\n    public readonly userDropdown: UserDropdownService,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.sessionService.user$.pipe(takeUntil(this.ngOnDestroy$)).subscribe((user: IUserViewFull) => {\n      this.isOwner = user && user.meta.id === this.job.company.meta.id;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  public hide(): void {\n    this.jobsService.hide$(this.job.meta.id).pipe(takeUntil(this.ngOnDestroy$)).subscribe(this.gone);\n  }\n\n  public publish(value: boolean): void {\n    if (value) {\n      this.jobsService.publish$(this.job.meta.id).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n        this.job.info.publicationStage = PublicationStageEnum.PUBLISHED;\n        this.changeDetectorRef.markForCheck();\n      });\n    } else {\n      this.jobsService.withdraw$(this.job.meta.id).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n        this.job.info.publicationStage = PublicationStageEnum.DRAFT;\n        this.changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  public delete(): void {\n    this.jobsService.delete$(this.job.meta.id).pipe(takeUntil(this.ngOnDestroy$)).subscribe(this.gone);\n  }\n\n  public showcase(): void {\n    this.jobsService.showcase$(this.job.meta.id).pipe(takeUntil(this.ngOnDestroy$))\n      .subscribe((_: ICreatedObject) => this.showcaseService.navigate$(_));\n  }\n\n  public toggleBookmark(): void {\n    if (this.sessionService.loggedIn$.value) {\n      this.jobsService.bookmark$(this.job.meta.id, this.job.bookmarks.you).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n        this.job.bookmarks.you = !this.job.bookmarks.you;\n        this.job.bookmarks.count += this.job.bookmarks.you ? 1 : -1;\n        this.changeDetectorRef.markForCheck();\n        if (!this.job.bookmarks.you) {\n          this.goneBookmarked.next([this.job, 'job']);\n        }\n      });\n    } else {\n      this.userDropdown.setShowDropdown(true);\n    }\n  }\n}\n","<header class=\"v-center margin-bottom-20\">\n    <app-user-info class=\"margin-right-20\" [user]=\"job.company\"></app-user-info>\n    <span *ngIf=\"job.info.publicationStage !== publicationStageEnum.PUBLISHED\" class=\"overline c-caption\">Не опубликовано</span>\n    <span class=\"date align-right\">{{ job.meta.updatedAt | customDate }}</span>\n</header>\n<main>\n    <h3 class=\"margin-bottom-15 fade-0\"><a [routerLink]=\"['/jobs', job.meta.id]\">{{ job.info.name }}</a></h3>\n    <h5 class=\"margin-bottom-15 fade-2\">{{ job.info.city }} {{ salary ? salary : ('COMMON.INTERVIEW_SALARY' | translate) }}</h5>\n</main>\n<footer class=\"v-center\">\n    <div class=\"v-center event-stats\">\n        <div class=\"v-center margin-right-20\">\n            <svg name=\"bookmark\" class=\"margin-right-4 icon f-gray clickable\" [class.active]=\"job.bookmarks && job.bookmarks.you\" (click)=\"toggleBookmark()\"></svg>\n        </div>\n    </div>\n    <a class=\"align-right subtitle-2 fade-2 v-center\"><a [routerLink]=\"['/jobs', job.meta.id]\">{{ 'COMMON.TO_THE_VACANCY' | translate }}</a>\n        <svg name=\"chevron/right\" class=\"f-gray\"></svg>\n    </a>\n</footer>\n","export enum JobCurrencyEnum {\n    RUB = 'RUB',\n    USD = 'USD',\n    EUR = 'EUR',\n}\n"]}