{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/ratings-management-page/ratings-management-page.component.ts","webpack:///src/app/modules/dashboard/pages/ratings-management-page/ratings-management-page.component.html","webpack:///src/app/modules/dashboard/pages/ratings-management-page/components/ratings-form-block/ratings-form-block.component.ts","webpack:///src/app/modules/dashboard/pages/ratings-management-page/components/ratings-form-block/ratings-form-block.component.html","webpack:///src/app/modules/dashboard/pages/ratings-management-page/ratings-management-page.module.ts","webpack:///src/app/modules/dashboard/pages/ratings-management-page/ratings-management-page-routing.module.ts"],"names":["RatingsManagementPageComponent","administrationService","sidebarWrapperService","saved","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","getData","getRatings$","pipe","ngOnDestroy$","subscribe","_","data","postDataReq","postRatings$","selector","templateUrl","styleUrls","RatingsFormBlockComponent","fb","dataChange","submitReq","avarageItems","title","id","payload","selectedAvarage","resetData","ngOnChanges","changes","parseAvarage","userRanking","form","group","views","required","min","comments","favourites","likes","dislikes","factor1","factor2","divider","days","avarage","submit","emit","getRawValue","reset","changeDetection","OnPush","RatingsManagementPageModule","declarations","imports","routes","path","component","RatingsManagementPageRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaA,8B;AAIX,gDACmBC,qBADnB,EAEmBC,qBAFnB,EAE+D;AAAA;;AAAA;;AAE7D;AAHiB,gBAAAD,qBAAA,GAAAA,qBAAA;AACA,gBAAAC,qBAAA,GAAAA,qBAAA;AAJZ,gBAAAC,KAAA,GAAQ,KAAR;AAIwD;AAG9D;;;;;;iBAED,SAAAC,QAAQ;AAAA;;AACNC,sBAAU,CAAC,YAAM;AACf,oBAAI,CAACH,qBAAL,CAA2BI,OAA3B,CAAmCC,IAAnC,CAAwC;AAAEC,uBAAO,EAAE,KAAX;AAAkBC,wBAAQ,EAAE,KAA5B;AAAmCC,0BAAU,EAAE,KAA/C;AAAsDC,oBAAI,EAAE,KAA5D;AAAmEC,2BAAW,EAAE;AAAhF,eAAxC;AACD,aAFS,CAAV;AAGA,iBAAKC,OAAL;AACD;;;iBAEO,SAAAA,OAAO;AAAA;;AACb,iBAAKZ,qBAAL,CAA2Ba,WAA3B,GAAyCC,IAAzC,CAA8C,iEAAU,KAAKC,YAAf,CAA9C,EAA4EC,SAA5E,CAAsF,UAACC,CAAD,EAAoB;AACxG,oBAAI,CAACC,IAAL,GAAYD,CAAZ;AACD,aAFD;AAGD;;;iBAEM,SAAAE,WAAW;AAAA;;AAChB,iBAAKnB,qBAAL,CAA2BoB,YAA3B,CAAwC,KAAKF,IAA7C,EAAmDJ,IAAnD,CAAwD,iEAAU,KAAKC,YAAf,CAAxD,EAAsFC,SAAtF,CAAgG,YAAM;AACpG,oBAAI,CAACd,KAAL,GAAa,IAAb;AACAE,wBAAU,CAAC,YAAM;AACf,sBAAI,CAACF,KAAL,GAAa,KAAb;AACD,eAFS,EAEP,IAFO,CAAV;AAGD,aALD;AAMD;;QA/BiD,0F;;;;;;cAAvCH,8B;AAA8B;AAAA;AAAA;AAAA;AAAA,U;AAAA;;;;;cAA9BA,8B;AAA8B,+C;AAAA,6B;AAAA,4D;AAAA,kBCZ3C,uH;AACA,+M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;cDWaA,8B;AAA8B;gBAL1C,uDAK0C;iBALhC;AACTsB,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmBaC,yB;AAuBX,2CAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AArBJ,eAAAvB,KAAA,GAAQ,KAAR;AAEU,eAAAwB,UAAA,GAAwC,IAAI,0DAAJ,EAAxC;AACA,eAAAC,SAAA,GAAgC,IAAI,0DAAJ,EAAhC;AAEnB,eAAAC,YAAA,GAA8B,CACnC;AACEC,iBAAK,EAAE,SADT;AAEEC,cAAE,EAAE,CAFN;AAGEC,mBAAO,EAAE;AAHX,WADmC,EAMnC;AACEF,iBAAK,EAAE,wBADT;AAEEC,cAAE,EAAE,CAFN;AAGEC,mBAAO,EAAE;AAHX,WANmC,CAA9B;AAYA,eAAAC,eAAA,GAA+B,KAAKJ,YAAL,CAAkB,CAAlB,CAA/B;AACA,eAAAK,SAAA,GAAyB,IAAzB;AAGgC;;;;iBAEvC,SAAAC,WAAW,CAACC,OAAD,EAAuB;AAChC,gBAAIA,OAAO,CAACjB,IAAZ,EAAkB;AAChB,kBAAI,KAAKA,IAAT,EAAe;AACb,oBAAI,KAAKe,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,uBAAKA,SAAL,GAAiB,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKf,IAAV,CAAjB;AACD;;AACD,qBAAKkB,YAAL,CAAkB,KAAKlB,IAAL,CAAUmB,WAA5B;AAEA,qBAAKC,IAAL,GAAY,KAAKb,EAAL,CAAQc,KAAR,CAAc;AACxBC,uBAAK,EAAE,CAAC,KAAKtB,IAAL,CAAUsB,KAAX,EAAkB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAAlB,CADiB;AAExBC,0BAAQ,EAAE,CAAC,KAAKzB,IAAL,CAAUyB,QAAX,EAAqB,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAArB,CAFc;AAGxBE,4BAAU,EAAE,CAAC,KAAK1B,IAAL,CAAU0B,UAAX,EAAuB,CAAC,0DAAWH,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAAvB,CAHY;AAIxBG,uBAAK,EAAE,CAAC,KAAK3B,IAAL,CAAU2B,KAAX,EAAkB,CAAC,0DAAWJ,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAAlB,CAJiB;AAKxBI,0BAAQ,EAAE,CAAC,KAAK5B,IAAL,CAAU4B,QAAX,EAAqB,CAAC,0DAAWL,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAArB,CALc;AAMxBK,yBAAO,EAAE,CAAC,KAAK7B,IAAL,CAAU6B,OAAX,EAAoB,CAAC,0DAAWN,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAApB,CANe;AAOxBM,yBAAO,EAAE,CAAC,KAAK9B,IAAL,CAAU8B,OAAX,EAAoB,CAAC,0DAAWP,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAApB,CAPe;AAQxBO,yBAAO,EAAE,CAAC,KAAK/B,IAAL,CAAU+B,OAAX,EAAoB,CAAC,0DAAWR,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAApB,CARe;AASxBQ,sBAAI,EAAE,CAAC,KAAKhC,IAAL,CAAUgC,IAAX,EAAiB,CAAC,0DAAWT,QAAZ,EAAsB,0DAAWC,GAAX,CAAe,CAAf,CAAtB,CAAjB;AATkB,iBAAd,CAAZ;AAWD;AACF;AACF;;;iBAEO,SAAAN,YAAY,CAACe,OAAD,EAAgB;AAClC,oBAAQA,OAAR;AACE,mBAAK,MAAL;AACE,qBAAKnB,eAAL,GAAuB,KAAKJ,YAAL,CAAkB,CAAlB,CAAvB;AACA;;AACF,mBAAK,QAAL;AACE,qBAAKI,eAAL,GAAuB,KAAKJ,YAAL,CAAkB,CAAlB,CAAvB;AACA;AANJ;AAQD;;;iBAEM,SAAAwB,MAAM;AACX,iBAAKlC,IAAL,CAAUmB,WAAV,GAAwB,KAAKL,eAAL,CAAqBD,OAA7C;AACA,iBAAKL,UAAL,CAAgB2B,IAAhB,CAAqB,MAAD,OAAC,CAAD,kBAAK,KAAKf,IAAL,CAAUgB,WAAV,EAAL,CAAC,EAA2B;AAAEjB,yBAAW,EAAE,KAAKnB,IAAL,CAAUmB;AAAzB,aAA3B,CAArB;AACA,iBAAKV,SAAL,CAAe0B,IAAf;AACD;;;iBAEM,SAAAE,KAAK;AACV,iBAAKrC,IAAL,GAAY,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKe,SAAV,CAAZ;AACA,iBAAKP,UAAL,CAAgB2B,IAAhB,CAAqB,KAAKnC,IAA1B;AACA,iBAAKkB,YAAL,CAAkB,KAAKlB,IAAL,CAAUmB,WAA5B;AACD;;;;;;;;cArEUb,yB;AAAyB;AAAA;AAAA,U;AAAA;;;;;cAAzBA,yB;AAAyB,0C;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA,S;AAAA,2B;AAAA,4D;AAAA,kBCnBtC,skM;AAoHA,6ljF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;AAAA;AAAA,S;AAAA;;;;;;;cDjGaA,yB;AAAyB;gBANrC,uDAMqC;iBAN3B;AACTH,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD,CAHF;AAITiC,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAM2B,U;;;;;;;AACpBvC,cAAI,EAAE,CAAF;kBAAnB;AAAmB,WAAE,C;AACNhB,eAAK;kBAApB;AAAoB,Y;AAEKwB,oBAAU,EAAE,CAAF;kBAAnC;AAAmC,WAAE,C;AACZC,mBAAS,EAAE,CAAF;kBAAlC;AAAkC,WAAE;;;;;;;;;;;;;;;;;;;AExBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAwBa+B,2B;;;;;;;;cAAAA,2B;AAA2B,gB;AAAA;;;;;;cAA3BA,2B;AAA2B,uBAZlC,iGAYkC,EAXlC,qHAWkC,C;AAXT,kBAGzB,4DAHyB,EAIzB,0GAJyB,EAKzB,0DALyB,EAMzB,2HANyB,EAOzB,mEAPyB,EAQzB,kEARyB;;;;;;cAWlBA,2B;AAA2B,kBAT7B,CACL,4DADK,EAEL,0GAFK,EAGL,0DAHK,EAIL,2HAJK,EAKL,mEALK,EAML,kEANK,CAS6B;;;;;;;cAA3BA,2B;AAA2B;gBAdvC,sDAcuC;iBAd9B;AACRC,wBAAY,EAAE,CACV,iGADU,EAEV,qHAFU,CADN;AAKRC,mBAAO,EAAE,CACL,4DADK,EAEL,0GAFK,EAGL,0DAHK,EAIL,2HAJK,EAKL,mEALK,EAML,kEANK;AALD,W;AAc8B;;;;;;;;;;;;;;;;;;ACxBxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,kC;;;;;;;;cAAAA,kC;AAAkC,gB;AAAA;;;;;;cAAlCA,kC;AAAkC,+E;AAAA,kBAFnC,4DAEmC;;;;;;cAAlCA,kC;AAAkC,kBAHpC,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGoC,EAFnC,4DAEmC;;;;;;;cAAlCG,kC;AAAkC;gBAJ9C,sDAI8C;iBAJrC;AACRJ,mBAAO,EAAE,CAAC,6DAAaK,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIqC","file":"pages-ratings-management-page-ratings-management-page-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IRatingData } from '@api/schemas/dashboard/ratings-data.interface';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\n\n@Component({\n  selector: 'app-ratings-management-page',\n  templateUrl: './ratings-management-page.component.html',\n  styleUrls: ['./ratings-management-page.component.scss'],\n})\nexport class RatingsManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public data: IRatingData;\n  public saved = false;\n\n  constructor(\n    private readonly administrationService: AdministrationService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.getData();\n  }\n\n  private getData(): void {\n    this.administrationService.getRatings$().pipe(takeUntil(this.ngOnDestroy$)).subscribe((_: IRatingData) => {\n      this.data = _;\n    });\n  }\n\n  public postDataReq(): void {\n    this.administrationService.postRatings$(this.data).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() => {\n      this.saved = true;\n      setTimeout(() => {\n        this.saved = false;\n      }, 5000);\n    });\n  }\n}\n","<app-ratings-form-block [(data)]=\"data\" [saved]=\"saved\" (submitReq)=\"postDataReq()\"></app-ratings-form-block>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { IRatingData } from '@api/schemas/dashboard/ratings-data.interface';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-ratings-form-block',\n  templateUrl: './ratings-form-block.component.html',\n  styleUrls: ['./ratings-form-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RatingsFormBlockComponent implements OnChanges {\n  @Input() public data: IRatingData;\n  @Input() public saved = false;\n\n  @Output() public readonly dataChange: EventEmitter<IRatingData> = new EventEmitter<IRatingData>();\n  @Output() public readonly submitReq: EventEmitter<void> = new EventEmitter<void>();\n\n  public avarageItems: ISelectItem[] = [\n    {\n      title: 'Медиана',\n      id: 0,\n      payload: 'MEDIAN',\n    },\n    {\n      title: 'Среднее арифметическое',\n      id: 1,\n      payload: 'MEAN',\n    },\n  ];\n  public selectedAvarage: ISelectItem = this.avarageItems[0];\n  public resetData: IRatingData = null;\n  public form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.data) {\n      if (this.data) {\n        if (this.resetData === null) {\n          this.resetData = { ...this.data };\n        }\n        this.parseAvarage(this.data.userRanking);\n\n        this.form = this.fb.group({\n          views: [this.data.views, [Validators.required, Validators.min(0)]],\n          comments: [this.data.comments, [Validators.required, Validators.min(0)]],\n          favourites: [this.data.favourites, [Validators.required, Validators.min(0)]],\n          likes: [this.data.likes, [Validators.required, Validators.min(0)]],\n          dislikes: [this.data.dislikes, [Validators.required, Validators.min(0)]],\n          factor1: [this.data.factor1, [Validators.required, Validators.min(0)]],\n          factor2: [this.data.factor2, [Validators.required, Validators.min(0)]],\n          divider: [this.data.divider, [Validators.required, Validators.min(0)]],\n          days: [this.data.days, [Validators.required, Validators.min(0)]],\n        });\n      }\n    }\n  }\n\n  private parseAvarage(avarage: string): void {\n    switch (avarage) {\n      case 'MEAN':\n        this.selectedAvarage = this.avarageItems[1];\n        break;\n      case 'MEDIAN':\n        this.selectedAvarage = this.avarageItems[0];\n        break;\n    }\n  }\n\n  public submit(): void {\n    this.data.userRanking = this.selectedAvarage.payload;\n    this.dataChange.emit({...this.form.getRawValue(), userRanking: this.data.userRanking});\n    this.submitReq.emit();\n  }\n\n  public reset(): void {\n    this.data = { ...this.resetData };\n    this.dataChange.emit(this.data);\n    this.parseAvarage(this.data.userRanking);\n  }\n}\n","<form *ngIf=\"form\" class=\"admin-form\" [formGroup]=\"form\">\n    <h3 class=\"admin-blc__subtitle\">Коэффициенты для расчета</h3>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Просмотры</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"views\"\n                       [min]=\"0\"\n                       formControlName=\"views\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">{{ 'COMMON.COMMENTS' | translate }}</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"comments\"\n                       [min]=\"0\"\n                       formControlName=\"comments\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">{{ 'COMMON.FAVORITES' | translate }}</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"fav\"\n                       [min]=\"0\"\n                       formControlName=\"favourites\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Лайки</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"likes\"\n                       [min]=\"0\"\n                       formControlName=\"likes\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Дизлайки</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"dislikes\"\n                       [min]=\"0\"\n                       formControlName=\"dislikes\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Фактор 1</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"factor1\"\n                       [min]=\"0\"\n                       formControlName=\"factor1\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Фактор 2</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"factor2\"\n                       [min]=\"0\"\n                       formControlName=\"factor2\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Делитель</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"divider\"\n                       [min]=\"0\"\n                       formControlName=\"divider\">\n            </span>\n        </label>\n    </fieldset>\n    <h2 class=\"admin-blc__title\">{{ 'COMMON.AUTHORS_RATING' | translate }}</h2>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Разновидность среднего значения</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <app-dashboard-select [(selected)]=\"selectedAvarage\"\n                                      [items]=\"avarageItems\"\n                                      [dropdownWidth]=\"250\">\n                </app-dashboard-select>\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Период расчета</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"number\"\n                       class=\"admin-input admin-input_short admin-input-row__input\"\n                       name=\"days\"\n                       [min]=\"0\"\n                       formControlName=\"days\">\n                &nbsp;дней\n            </span>\n        </label>\n    </fieldset>\n    <div class=\"admin-form__bar\">\n        <button class=\"btn admin-btn_white\"\n                type=\"submit\" [disabled]=\"form.invalid\"\n                (click)=\"submit()\">\n            {{ saved ? 'Изменения сохранены' : 'Сохранить изменения' }}\n        </button>\n        <button class=\"btn admin-btn_blue\" (click)=\"reset()\">{{ 'COMMON.UNDO' | translate }}</button>\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RatingsManagementPageRoutingModule } from './ratings-management-page-routing.module';\nimport { RatingsManagementPageComponent } from './ratings-management-page.component';\nimport { RatingsFormBlockComponent } from './components/ratings-form-block/ratings-form-block.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardSelectModule } from '@modules/dashboard/shared/ui/dashboard-select/dashboard-select.module';\n\n@NgModule({\n  declarations: [\n      RatingsManagementPageComponent,\n      RatingsFormBlockComponent\n  ],\n  imports: [\n      CommonModule,\n      RatingsManagementPageRoutingModule,\n      FormsModule,\n      DashboardSelectModule,\n      TranslateModule,\n      ReactiveFormsModule\n    ],\n})\nexport class RatingsManagementPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RatingsManagementPageComponent } from './ratings-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RatingsManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RatingsManagementPageRoutingModule {}\n"]}