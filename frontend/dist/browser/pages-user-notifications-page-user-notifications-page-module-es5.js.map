{"version":3,"sources":["webpack:///src/app/modules/user/pages/user-notifications-page/notification/notification.component.ts","webpack:///src/app/modules/user/pages/user-notifications-page/notification/notification.component.html","webpack:///src/app/modules/user/pages/user-notifications-page/user-notifications-page-routing.module.ts","webpack:///src/app/modules/user/pages/user-notifications-page/notifications-ranges.const.ts","webpack:///src/app/modules/user/pages/user-notifications-page/user-notifications-page.module.ts","webpack:///src/app/modules/user/pages/user-notifications-page/user-notifications-page.component.ts","webpack:///src/app/modules/user/pages/user-notifications-page/user-notifications-page.component.html"],"names":["NotificationComponent","notificationsService","articlesService","topicsService","tagsService","usersService","personNamePipe","selector","templateUrl","styleUrls","routes","path","component","resolve","data","UserNotificationsPageRoutingModule","forChild","imports","exports","NOTIFICATIONS_RANGES","id","text","payload","UserNotificationsPageModule","declarations","providers","UserNotificationsPageComponent","sidebarWrapperService","notificationUpdateService","ranges","maxPages","page","isLoadingNextPage","notifications","selectedRange","activeRange","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","appendPage","get$","pipe","ngOnDestroy$","subscribe","response","totalPages","add","content","rangeEvent","range","clear","updateCount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaA,qB;AACX,uCACqBC,oBADrB,EAEqBC,eAFrB,EAGqBC,aAHrB,EAIqBC,WAJrB,EAKqBC,YALrB,EAMqBC,cANrB,EAMmD;AAAA;;AAAA;;AAC/C,2DAAML,oBAAN,EAA4BC,eAA5B,EAA6CC,aAA7C,EAA4DC,WAA5D,EAAyEC,YAAzE,EAAuFC,cAAvF;AANiB,gBAAAL,oBAAA,GAAAA,oBAAA;AACA,gBAAAC,eAAA,GAAAA,eAAA;AACA,gBAAAC,aAAA,GAAAA,aAAA;AACA,gBAAAC,WAAA,GAAAA,WAAA;AACA,gBAAAC,YAAA,GAAAA,YAAA;AACA,gBAAAC,cAAA,GAAAA,cAAA;AAA8B;AAC0D;;;;;QARpE,mJ;;;;;;cAA9BN,qB;AAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;;;;;cAArBA,qB;AAAqB,oC;AAAA,6B;AAAA,4D;AAAA,kBCflC,i3N;AAyGA,q7wB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;cD1FaA,qB;AAAqB;gBALjC,uDAKiC;iBALvB;AACTO,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEflC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,iGAFb;AAGEC,eAAO,EAAE;AAAEC,cAAI,EAAE;AAAR;AAHX,OADqB,CAAvB;;UAYaC,kC;;;;;;;;cAAAA,kC;AAAkC,gB;AAAA;;;;;;cAAlCA,kC;AAAkC,+E;AAAA,kBAFnC,4DAEmC;;;;;;cAAlCA,kC;AAAkC,kBAHpC,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CAGoC,EAFnC,4DAEmC;;;;;;;cAAlCK,kC;AAAkC;gBAJ9C,sDAI8C;iBAJrC;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBN,MAAtB,CAAD,CADD;AAERQ,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIqC;;;;;;;;;;;;;;;;;;AChB/C;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAMC,oBAAoB,GAA4C,CACzE;AACIC,UAAE,EAAE,CADR;AAEIC,YAAI,EAAE,YAFV;AAGIC,eAAO,EAAE;AAHb,OADyE,EAMzE;AACIF,UAAE,EAAE,CADR;AAEIC,YAAI,EAAE,eAFV;AAGIC,eAAO,EAAE;AAHb,OANyE,EAWzE;AACIF,UAAE,EAAE,CADR;AAEIC,YAAI,EAAE,6BAFV;AAGIC,eAAO,EAAE;AAHb,OAXyE,EAgBzE;AACIF,UAAE,EAAE,CADR;AAEIC,YAAI,EAAE,iBAFV;AAGIC,eAAO,EAAE;AAHb,OAhByE,EAqBzE;AACIF,UAAE,EAAE,CADR;AAEIC,YAAI,EAAE,sBAFV;AAGIC,eAAO,EAAE;AAHb,OArByE,CAAtE;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAqCaC,2B;;;;;;;;cAAAA,2B;AAA2B,gB;AAAA;;;;;;cAA3BA,2B;AAA2B,uBAlBvB,iGAkBuB,EAlBS,0FAkBT,C;AAlB8B,kBAElE,4DAFkE,EAGlE,4FAHkE,EAIlE,0GAJkE,EAKlE,iFALkE,EAMlE,0EANkE,EAOlE,kGAPkE,EAQlE,mFARkE,EASlE,wEATkE,EAUlE,8FAVkE,EAUlD,oEAVkD,EAYlE,mEAZkE;;;;;;cAkBzDA,2B;AAA2B,mBAJ3B,CACT,8EADS,C;AAEV,kBAfQ,CACP,4DADO,EAEP,4FAFO,EAGP,0GAHO,EAIP,iFAJO,EAKP,0EALO,EAMP,kGANO,EAOP,mFAPO,EAQP,wEARO,EASP,8FATO,EAUP,qEAAgBP,QAAhB,EAVO,EAWP,mEAXO,CAeR;;;;;;;cAEUO,2B;AAA2B;gBAnBvC,sDAmBuC;iBAnB9B;AACRC,wBAAY,EAAE,CAAC,iGAAD,EAAiC,0FAAjC,CADN;AAERP,mBAAO,EAAE,CACP,4DADO,EAEP,4FAFO,EAGP,0GAHO,EAIP,iFAJO,EAKP,0EALO,EAMP,kGANO,EAOP,mFAPO,EAQP,wEARO,EASP,8FATO,EAUP,qEAAgBD,QAAhB,EAVO,EAWP,mEAXO,CAFD;AAeRS,qBAAS,EAAE,CACT,8EADS;AAfH,W;AAmB8B;;;;;;;;;;;;;;;;;;ACrCxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaC,8B;AAWX,gDAA6BzB,oBAA7B,EAC6B0B,qBAD7B,EAE4BC,yBAF5B,EAEgF;AAAA;;AAAA;;AAE9E;AAJ2B,iBAAA3B,oBAAA,GAAAA,oBAAA;AACA,iBAAA0B,qBAAA,GAAAA,qBAAA;AACD,iBAAAC,yBAAA,GAAAA,yBAAA;AAZZ,iBAAAC,MAAA,GAAkD,gFAAlD;AAET,iBAAAC,QAAA,GAAW,CAAX;AACA,iBAAAC,IAAA,GAAO,CAAP;AACA,iBAAAC,iBAAA,GAAoB,KAApB;AACA,iBAAAC,aAAA,GAAiC,EAAjC;AAEA,iBAAAC,aAAA,GAA6B,OAAKL,MAAL,CAAY,CAAZ,CAA7B;AACA,iBAAAM,WAAA,GAAc,CAAd;AAIyE;AAG/E;;;;;;iBAED,SAAAC,QAAQ;AAAA;;AACNC,sBAAU,CAAC,YAAM;AACf,oBAAI,CAACV,qBAAL,CAA2BW,OAA3B,CACGC,IADH,CACQ;AACJC,uBAAO,EAAE,KADL;AAEJC,wBAAQ,EAAE,IAFN;AAGJC,0BAAU,EAAE,IAHR;AAIJC,oBAAI,EAAE,KAJF;AAKJC,2BAAW,EAAE;AALT,eADR;AAQD,aATS,CAAV;AAUD;;;iBAEM,SAAAC,UAAU,CAACd,IAAD,EAAa;AAAA;;AAC5B,iBAAKC,iBAAL,GAAyB,IAAzB;AACA,iBAAK/B,oBAAL,CAA0B6C,IAA1B,CAA+Bf,IAA/B,EAAqC,KAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBZ,OAAxC,GAAkD,IAAvF,EACGyB,IADH,CACQ,iEAAU,KAAKC,YAAf,CADR,EAEGC,SAFH,CAEa,UAACC,QAAD,EAA4C;AACvD,oBAAI,CAAClB,iBAAL,GAAyB,KAAzB;AACA,oBAAI,CAACD,IAAL,GAAYmB,QAAQ,CAACnB,IAArB;AACA,oBAAI,CAACD,QAAL,GAAgBoB,QAAQ,CAACC,UAAzB;;AACA,oBAAI,CAACvB,yBAAL,CAA+BwB,GAA/B,CAAmCF,QAAQ,CAACG,OAA5C;AACD,aAPD;AAQD;;;iBAEM,SAAAC,UAAU,CAACC,KAAD,EAAmB;AAClC,iBAAKrB,aAAL,GAAqBqB,KAArB;AACA,iBAAKpB,WAAL,GAAmBoB,KAAK,CAACnC,EAAzB;AACA,iBAAKQ,yBAAL,CAA+B4B,KAA/B;AACA,iBAAK5B,yBAAL,CAA+B6B,WAA/B;AACA,iBAAKZ,UAAL,CAAgB,CAAhB;AACD;;QAjDiD,0F;;;;;;cAAvCnB,8B;AAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;;;;;cAA9BA,8B;AAA8B,+C;AAAA,6B;AAAA,4D;AAAA,kBChB3C,qmB;AAeA,8oB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;AAAA;AAAA;AAAA;AAAA,U;AAAA;AAAA;AAAA;;;;;;;cDCaA,8B;AAA8B;gBAL1C,uDAK0C;iBALhC;AACTnB,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD;AAHF,W;AAKgC,U","file":"pages-user-notifications-page-user-notifications-page-module-es5.js","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { NotificationsService } from '@api/routes/notifications.service';\nimport { ArticlesService } from '@api/routes/articles.service';\nimport { TopicsService } from '@api/routes/topics.service';\nimport { TagsService } from '@api/routes/tags.service';\nimport { UsersService } from '@api/routes/users.service';\nimport { AbstractNotificationComponent } from '@shared/classes/abstract-notification-component/abstract-notification-component.class';\nimport { PersonNamePipe } from '@shared/pipes/person-name.pipe';\n\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent extends AbstractNotificationComponent implements OnDestroy {\n  constructor(\n    protected readonly notificationsService: NotificationsService,\n    protected readonly articlesService: ArticlesService,\n    protected readonly topicsService: TopicsService,\n    protected readonly tagsService: TagsService,\n    protected readonly usersService: UsersService,\n    protected readonly personNamePipe: PersonNamePipe\n  ) { super(notificationsService, articlesService, topicsService, tagsService, usersService, personNamePipe); }\n}\n","<div class=\"type fade-2\">\n    <svg class=\"f-gray margin-right-10\" size=\"18\"\n         [class.f-primary]=\"!item.read\" [name]=\"TYPE_MAP[item.type].type.icon\"></svg>\n    <span [class.c-primary]=\"!item.read\" class=\"caption margin-right-20\">{{ TYPE_MAP[item.type].type.name | translate }}</span>\n    <span class=\"caption fade-3\">{{ item.createdAt | customDate }}</span>\n</div>\n<p class=\"name button-1\">\n    <ng-container [ngSwitch]=\"true\">\n        <a *ngSwitchCase=\"!TYPE_MAP[item.type].custom\" [routerLink]=\"url\" [fragment]=\"fragment\">{{ TYPE_MAP[item.type].message | translate }}</a>\n        <a *ngSwitchCase=\"item.type === 'content_report'\" [href]=\"body.url\">{{ TYPE_MAP[item.type].message | translate }}</a>\n        <span *ngSwitchCase=\"item.type === 'account_banned' || item.type === 'account_unbanned'\">{{ TYPE_MAP[item.type].message | translate }}</span>\n        <ng-container *ngSwitchDefault>{{ item.type }}</ng-container>\n    </ng-container>\n</p>\n<div>\n    <ng-container [ngSwitch]=\"bodyType\">\n        <ng-container *ngSwitchCase=\"notificationBodyType.USER_BODY\" [ngTemplateOutlet]=\"userBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.COMMENT_BODY\" [ngTemplateOutlet]=\"commentBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.SHORT_POST_BODY\" [ngTemplateOutlet]=\"shortPostBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.POST_BODY\" [ngTemplateOutlet]=\"postBody\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.REPORT\" [ngTemplateOutlet]=\"report\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.ACCOUNT_BANNED\" [ngTemplateOutlet]=\"accountBanned\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.ACCOUNT_UNBANNED\" [ngTemplateOutlet]=\"accountUnbanned\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.WATCHED_COMMENT_REPLY\" [ngTemplateOutlet]=\"watchedCommentReply\"></ng-container>\n        <ng-container *ngSwitchCase=\"notificationBodyType.COMMENT_MENTION\" [ngTemplateOutlet]=\"commentMention\"></ng-container>\n        <ng-container *ngSwitchDefault>{{ item.body | json }}</ng-container>\n    </ng-container>\n</div>\n\n<!-- TEMPLATES -->\n<ng-template #commentMention>\n    <div class=\"subtitle-2\">\n        <a class=\"button-1\" [routerLink]=\"['/user', item.body.owner.id]\">{{ item.body.owner.info | personName }}</a>\n        <span class=\"subtitle-2\"> {{ 'COMMON.ANOTHER_USER_MENTIONED' | translate }} </span>\n        <a class=\"button-1\" [routerLink]=\"['/news', item.body.context.id]\" [fragment]=\"'comment-' + item.body.id\">{{ 'COMMON.COMMENTS' | translate }}</a>\n    </div>\n    <p class=\"caption fade-2\" [innerHTML]=\"item.body.html\"></p>\n</ng-template>\n\n<ng-template #watchedCommentReply>\n    <div class=\"subtitle-2\">\n        <a class=\"button-1\" [routerLink]=\"['/user', item.body.reply.owner.id]\">{{ item.body.reply.owner.info | personName }}</a>\n        <span class=\"fade-0\">{{ 'COMMON.REPLIED' | translate }}</span>\n        <a class=\"button-1\" [routerLink]=\"['/news', item.body.parent.context.id]\" [fragment]=\"'comment-' + item.body.parent.id\">{{ 'COMMON.COMMENTS' | translate }}</a>\n        <span class=\"fade-0\">{{ 'COMMON.TO_PUBLICATION' | translate }}</span>\n        <a class=\"button-1\" [routerLink]=\"['/news', item.body.parent.context.id]\" [fragment]=\"'comment-' + item.body.reply.id\">{{ item.body.parent.context.title }}</a>\n    </div>\n</ng-template>\n\n<ng-template #userBody>\n    <div class=\"v-center margin-bottom-10\">\n        <app-ui-icon class=\"margin-right-10\" [src]=\"body.info.picture\" [size]=\"'small'\"\n                     [textAlternative]=\"body.info | personName\"></app-ui-icon>\n        <span class=\"subtitle-1\">{{ body.info | personName }}</span>\n    </div>\n    <span class=\"caption btn\" style=\"color: #92929D\" [routerLink]=\"url\">{{ 'COMMON.TO_YOUR_PROFILE' | translate }}</span>\n</ng-template>\n\n<ng-template #commentBody>\n    <div class=\"subtitle-2\">\n        <a class=\"button-1\" [routerLink]=\"['/', 'user', body.owner.id]\">{{ body.owner.info | personName }}</a>\n        <span class=\"fade-0\"> {{ 'COMMON.MADE_A_COMMENT' | translate }} </span>\n        <a class=\"button-1\" [routerLink]=\"['/', 'news', body.context.id]\">{{ body.context.title }}</a>\n    </div>\n</ng-template>\n\n<ng-template #postBody>\n    <div class=\"subtitle-2 margin-bottom-10\">\n        <a class=\"button-1\" [routerLink]=\"['/', 'user', body.owner.id]\">{{ body.owner.info | personName }}</a>\n        &ensp;<span class=\"fade-0\">&ensp;{{ 'COMMON.AWAITING_POSTING' | translate }} </span>\n        <a class=\"button-1\" [routerLink]=\"['/', 'news', body.id]\">{{ body.info.title || ('COMMON.UNTITLED_ARTICLE' | translate) }}</a>\n        <div *ngIf=\"body.info.topics\" style=\"display: inline-block;\"><span *ngIf=\"body.info.topics[0]\" class=\"fade-0\"> в тему </span></div>\n        <span *ngIf=\"body.info.topics\" class=\"button-1\">{{ body.info.topics[0] ? ' ' + body.info.topics[0].name : ' (Автор не указал тему)' }}</span>\n    </div>\n    <span class=\"caption btn\" style=\"color: #92929D\" [routerLink]=\"['/', 'news', body.id]\">{{ 'COMMON.GO_TO' | translate }}</span>\n</ng-template>\n\n<ng-template #report>\n    <div class=\"subtitle-2 margin-bottom-10\">\n        <p *ngIf=\"body.entity.name && body.entity.id\">\n            <span class=\"fade-0\">{{ 'COMMON.COMPLIANT_ABOUT' | translate }}</span>\n            <a class=\"button-1\" [href]=\"body.url\">{{ body.entity.name + ' '  + body.entity.idMeta }} </a>\n            <span *appRoleGuard=\"'EDITOR$'; and body.owner\" class=\"fade-0\">{{ 'COMMON.FROM_USER' | translate }} </span>\n            <a *appRoleGuard=\"'EDITOR$'; and body.owner\" class=\"button-1\" [routerLink]=\"['/user/', body.owner.id]\">{{ body.owner.info | personName }} </a>\n        </p>\n        <div *ngIf=\"body.message\">\n            <span class=\"subtitle-1\">{{ 'COMMON.FROM_USER' | translate }}</span>\n            <span>{{ body.message }}</span>\n        </div>\n    </div>\n    <a class=\"caption btn\" [href]=\"body.url\" style=\"color: #92929D\">{{'COMMON.GO_TO' | translate}}</a>\n</ng-template>\n\n<ng-template #shortPostBody>\n    <p class=\"subtitle-2\" [routerLink]=\"['/news', body.id]\">{{ body.info.title }}</p>\n</ng-template>\n\n<ng-template #accountBanned>\n    <p class=\"subtitle-2 margin-bottom-10\" >{{ 'COMMON.RECOVER_PRIVILLEGES' | translate }}</p>\n    <span class=\"caption btn\" style=\"color: #92929D\" [routerLink]=\"['/terms']\">Правила сайта</span>\n</ng-template>\n\n<ng-template #accountUnbanned>\n    <p class=\"subtitle-2\">{{ 'COMMON.PRIVILLEGES_RECOVERED' | translate }}</p>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserNotificationsPageComponent } from './user-notifications-page.component';\nimport { UsersResolverService } from '@shared/services/users-resolver.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserNotificationsPageComponent,\n    resolve: { data: UsersResolverService }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserNotificationsPageRoutingModule { }\n","import { IToggleItem } from '@shared/interfaces/toggle-item.interface';\n\nexport const NOTIFICATIONS_RANGES: IToggleItem<never, { order: string }>[] = [\n    {\n        id: 0,\n        text: 'COMMON.ALL',\n        payload: 'EVERYTHING',\n    },\n    {\n        id: 1,\n        text: 'COMMON.UNREAD',\n        payload: 'UNREAD',\n    },\n    {\n        id: 2,\n        text: 'COMMON.SYSTEM_NOTIFICATIONS',\n        payload: 'SYSTEM_GROUP',\n    },\n    {\n        id: 3,\n        text: 'COMMON.COMMENTS',\n        payload: 'COMMENTS_GROUP',\n    },\n    {\n        id: 4,\n        text: 'COMMON.PUBLICATIONS_',\n        payload: 'PUBLICATIONS_GROUP',\n    },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserNotificationsPageRoutingModule } from './user-notifications-page-routing.module';\nimport { UserNotificationsPageComponent } from './user-notifications-page.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { RangesModule } from '@shared/modules/ranges/ranges.module';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { UserHeaderModule } from '@modules/user/user-header/user-header.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LayoutModule } from '@layout/layout.module';\nimport { CommonDirectivesModule } from '@shared/directives/directives.module';\nimport { PersonNamePipe } from '@shared/pipes/person-name.pipe';\n\n\n@NgModule({\n  declarations: [UserNotificationsPageComponent, NotificationComponent],\n  imports: [\n    CommonModule,\n    CommonDirectivesModule,\n    UserNotificationsPageRoutingModule,\n    RangesModule,\n    SharedUiModule,\n    SharedComponentsModule,\n    SharedPipesModule,\n    SvgModule,\n    UserHeaderModule,\n    TranslateModule.forChild(),\n    LayoutModule,\n  ],\n  providers: [\n    PersonNamePipe\n  ]\n})\nexport class UserNotificationsPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { INotification } from '@api/schemas/notification/notification.interface';\nimport { NOTIFICATIONS_RANGES } from './notifications-ranges.const';\nimport { IToggleItem } from '@shared/interfaces/toggle-item.interface';\nimport { NotificationsService } from '@api/routes/notifications.service';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { NotificationUpdateService } from '@shared/services/notification-update.service';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-notifications-page',\n  templateUrl: './user-notifications-page.component.html',\n  styleUrls: ['./user-notifications-page.component.scss']\n})\nexport class UserNotificationsPageComponent extends AbstractComponent implements OnInit {\n  public readonly ranges: IToggleItem<never, { order: string }>[] = NOTIFICATIONS_RANGES;\n\n  public maxPages = 0;\n  public page = 0;\n  public isLoadingNextPage = false;\n  public notifications: INotification[] = [];\n\n  public selectedRange: IToggleItem = this.ranges[0];\n  public activeRange = 0;\n\n  constructor(private readonly notificationsService: NotificationsService,\n              private readonly sidebarWrapperService: SidebarWrapperService,\n              public readonly notificationUpdateService: NotificationUpdateService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$\n        .next({\n          article: false,\n          trending: true,\n          navigation: true,\n          live: false,\n          showSidebar: true\n        });\n    });\n  }\n\n  public appendPage(page: number): void {\n    this.isLoadingNextPage = true;\n    this.notificationsService.get$(page, this.selectedRange ? this.selectedRange.payload : null)\n      .pipe(takeUntil(this.ngOnDestroy$))\n      .subscribe((response: IPageResponse<INotification>) => {\n      this.isLoadingNextPage = false;\n      this.page = response.page;\n      this.maxPages = response.totalPages;\n      this.notificationUpdateService.add(response.content as any);\n    });\n  }\n\n  public rangeEvent(range: IToggleItem): void {\n    this.selectedRange = range;\n    this.activeRange = range.id;\n    this.notificationUpdateService.clear();\n    this.notificationUpdateService.updateCount();\n    this.appendPage(0);\n  }\n}\n","<app-user-header></app-user-header>\n\n<app-ranges [ranges]=\"ranges\" [activeRange]=\"activeRange\" (toggleRange)=\"rangeEvent($event)\"></app-ranges>\n<ul class=\"block-card item-space-20\">\n    <li *ngFor=\"let item of (notificationUpdateService.notifications$ | async)\">\n        <div class=\"border-bottom\">\n            <app-notification [data]=\"item\"></app-notification>\n        </div>\n    </li>\n</ul>\n<app-pagination [page]=\"page\"\n                [maxPages]=\"maxPages\"\n                [enabled]=\"!isLoadingNextPage\"\n                (onPage)=\"appendPage($event)\">\n</app-pagination>\n"]}