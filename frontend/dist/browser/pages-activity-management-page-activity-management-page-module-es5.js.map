{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/activity-management-page/components/activity-block/activity-block.component.ts","webpack:///src/app/modules/dashboard/pages/activity-management-page/components/activity-block/activity-block.component.html","webpack:///src/app/modules/dashboard/pages/activity-management-page/activity-management-page.module.ts","webpack:///src/app/modules/dashboard/pages/activity-management-page/activity-management-page-routing.module.ts","webpack:///src/app/modules/dashboard/shared/classes/dashboard-constants.class.ts","webpack:///src/app/modules/dashboard/pages/activity-management-page/activity-management-page.component.ts","webpack:///src/app/modules/dashboard/pages/activity-management-page/activity-management-page.component.html"],"names":["ActivityBlockComponent","showReq","ngOnDestroy","range$","next","RangeParamsConstant","show","emit","selector","templateUrl","styleUrls","changeDetection","OnPush","stat$","ActivityManagementPageModule","declarations","imports","routes","path","component","ActivityManagementPageRoutingModule","forChild","exports","DashboardConstants","SelectItemConstant","title","id","payload","before","after","checkbox","TagsStatConstant","all","ActivityConstant","count","users","companies","registrations","presence","activity","materials","articles","comments","news","ActivityManagementPageComponent","administrationService","sidebarWrapperService","ngOnInit","setTimeout","params$","article","trending","navigation","live","showSidebar","getStats","range","getValue","getActivity$","pipe","ngOnDestroy$","subscribe","res"],"mappings":"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","file":"pages-activity-management-page-activity-management-page-module-es5.js","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { DashboardConstants } from '@modules/dashboard/shared/classes/dashboard-constants.class';\nimport { IActivityView } from '@api/schemas/dashboard/activity-view.interface';\nimport { IRangeParams } from '@modules/dashboard/shared/ui/dashboard-range/range-params.interface';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-activity-block',\n  templateUrl: './activity-block.component.html',\n  styleUrls: ['./activity-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActivityBlockComponent implements OnDestroy {\n  @Input() public stat$: BehaviorSubject<IActivityView>;\n  @Input() public range$: BehaviorSubject<IRangeParams>;\n\n  @Output() public readonly showReq: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnDestroy(): void {\n    if (this.range$) {\n      this.range$.next(DashboardConstants.RangeParamsConstant);\n    }\n  }\n\n  public show(): void {\n    this.showReq.emit();\n  }\n}\n","<form class=\"admin-form\">\n    <fieldset class=\"admin-form__fieldset\">\n        <legend class=\"admin-form__legend\">Аудитория портала</legend>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">Всего <br>пользователей</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).count.all\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">Частные пользователи</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).count.users\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">{{ 'COMMON.COMPANIES' | translate}}</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).count.companies\">\n            </span>\n        </label>\n        <div class=\"admin-input-row\">\n            <button class=\"btn admin-btn_white admin-btn_m\" (click)=\"show()\">Показать</button>\n        </div>\n    </fieldset>\n    <hr class=\"admin-hr\">\n    <app-dashboard-range [params$]=\"range$\"></app-dashboard-range>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\"><b>Всего новых регистраций</b></span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).registrations.all\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">Частные пользователи</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).registrations.users\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">{{ 'COMMON.COMPANIES' | translate}}</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).registrations.companies\">\n            </span>\n        </label>\n    </fieldset>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\"><b>Присутствие </b> <small> [заходили хотя бы 1 раз за период]</small></span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).presence.all\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">Частные пользователи</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).presence.users\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">{{ 'COMMON.COMPANIES' | translate}}</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).presence.companies\">\n            </span>\n        </label>\n    </fieldset>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\"><b>Активность </b> <small> [хотя бы 1 публикация за период]</small></span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).activity.all\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">Частные пользователи</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).activity.users\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">{{ 'COMMON.COMPANIES' | translate}}</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).activity.companies\">\n            </span>\n        </label>\n    </fieldset>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\"><b>{{ 'COMMON.PUBLICATIONS_' | translate}} / {{ 'COMMON.COMMENTS' | translate}} / {{ 'COMMON.NEWS' | translate}}</b></span>\n            <span class=\"admin-input-row__inputwrap\">\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.all.articles\">\n                /\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.all.comments\">\n                /\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.all.news\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">Частные пользователи</span>\n            <span class=\"admin-input-row__inputwrap\">\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.users.articles\">\n                /\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.users.comments\">\n                /\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.users.news\">\n            </span>\n        </label>\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title admin-input-row__title_m\">{{ 'COMMON.COMPANIES' | translate}}</span>\n            <span class=\"admin-input-row__inputwrap\">\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.companies.articles\">\n                /\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.companies.comments\">\n                /\n                <input type=\"text\" class=\"admin-input\" disabled=\"true\" name=\"\" [value]=\"(stat$ | async).materials.companies.news\">\n            </span>\n        </label>\n    </fieldset>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActivityManagementPageRoutingModule } from './activity-management-page-routing.module';\nimport { ActivityManagementPageComponent } from './activity-management-page.component';\nimport { ActivityBlockComponent } from './components/activity-block/activity-block.component';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardRangeModule } from '@modules/dashboard/shared/ui/dashboard-range/dashboard-range.module';\n\n@NgModule({\n  declarations: [ActivityManagementPageComponent, ActivityBlockComponent],\n  imports: [CommonModule, ActivityManagementPageRoutingModule, FormsModule, DashboardRangeModule, TranslateModule],\n})\nexport class ActivityManagementPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ActivityManagementPageComponent } from './activity-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActivityManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActivityManagementPageRoutingModule {}\n","import { IActivityView } from '@api/schemas/dashboard/activity-view.interface';\nimport { IStatTags } from '../../pages/tags-management-page/components/statistic-tags-block/stat-tags.interface';\nimport { ISelectItem } from '../ui/dashboard-select/select-item.interface';\nimport { IRangeParams } from '../ui/dashboard-range/range-params.interface';\n\nexport class DashboardConstants {\n  public static SelectItemConstant: ISelectItem = {\n    title: null,\n    id: null,\n    payload: null,\n  };\n\n  public static RangeParamsConstant: IRangeParams = {\n    before: null,\n    after: null,\n    checkbox: null,\n  };\n\n  public static TagsStatConstant: IStatTags = {\n    all: null,\n    new: null,\n  };\n\n  public static ActivityConstant: IActivityView = {\n    count: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    registrations: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    presence: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    activity: {\n      all: null,\n      users: null,\n      companies: null,\n    },\n    materials: {\n      all: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n      users: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n      companies: {\n        articles: null,\n        comments: null,\n        news: null,\n      },\n    },\n  };\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardConstants } from '@modules/dashboard/shared/classes/dashboard-constants.class';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { takeUntil } from 'rxjs/operators';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { IActivityView } from '@api/schemas/dashboard/activity-view.interface';\nimport { IRangeParams } from '@modules/dashboard/shared/ui/dashboard-range/range-params.interface';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-activity-management-page',\n  templateUrl: './activity-management-page.component.html',\n  styleUrls: ['./activity-management-page.component.scss'],\n})\nexport class ActivityManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public stat$: BehaviorSubject<IActivityView> = new BehaviorSubject<IActivityView>(DashboardConstants.ActivityConstant);\n  public range$: BehaviorSubject<IRangeParams> = new BehaviorSubject<IRangeParams>(DashboardConstants.RangeParamsConstant);\n\n  constructor(\n    private readonly administrationService: AdministrationService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.getStats();\n  }\n\n  public getStats(): void {\n    const range = this.range$.getValue();\n    if (range.checkbox) {\n      this.administrationService.getActivity$(range.before, range.after)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((res: IActivityView) => this.stat$.next(res));\n    } else {\n        this.administrationService.getActivity$()\n            .pipe(takeUntil(this.ngOnDestroy$))\n            .subscribe((res: IActivityView) => this.stat$.next(res));\n    }\n  }\n}\n","<app-activity-block [range$]=\"range$\" [stat$]=\"stat$\" (showReq)=\"getStats()\"></app-activity-block>\n"]}