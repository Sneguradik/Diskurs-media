{"version":3,"sources":["webpack:///src/app/shared/ui/info-header/info-header.module.ts","webpack:///src/app/shared/utils/not-found.operator.ts","webpack:///src/app/shared/ui/info-header/info-header.component.ts","webpack:///src/app/shared/ui/info-header/info-header.component.html"],"names":["InfoHeaderModule","forChild","declarations","exports","imports","notFound","router","error","status","navigateByUrl","InfoHeaderComponent","responsive","subscribed","isMe","subscribe","edit","subFunc","emit","doEdit","selector","templateUrl","styleUrls","changeDetection","OnPush","bgImage","profileImage","profileText"],"mappings":"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","file":"default~pages-topic-page-topic-page-module~pages-user-comments-page-user-comments-page-module~pages-~3a7e322c-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoHeaderComponent } from './info-header.component';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { NgScrollbarModule } from 'ngx-scrollbar';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedUiModule } from '../shared-ui.module';\n\n\n\n@NgModule({\n  declarations: [InfoHeaderComponent],\n  exports: [InfoHeaderComponent],\n  imports: [\n    CommonModule,\n    SvgModule,\n    NgScrollbarModule,\n    TranslateModule.forChild(),\n    SharedUiModule\n  ]\n})\nexport class InfoHeaderModule { }\n","import { OperatorFunction, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nexport function notFound(router: Router): OperatorFunction<any, any> {\n    return catchError((error: HttpErrorResponse) => {\n        if (error.status === 404 || error.status === 422) {\n            router.navigateByUrl('/404');\n        }\n        return throwError(error);\n    });\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { ResponsiveService } from '@app/services/responsive.service';\n\n@Component({\n  selector: 'app-ui-info-header',\n  templateUrl: './info-header.component.html',\n  styleUrls: ['./info-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InfoHeaderComponent {\n  @Input() public bgImage: string;\n  @Input() public profileImage: string;\n  @Input() public profileText: string;\n  @Input() public subscribed = false;\n  @Input() public isMe = false;\n\n  @Output() public readonly subscribe: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public readonly edit: EventEmitter<void> = new EventEmitter<void>();\n\n  public userId: number;\n\n  constructor(public readonly responsive: ResponsiveService) {}\n\n  public subFunc(): void {\n    this.subscribe.emit();\n    this.subscribed = !this.subscribed;\n  }\n\n  public doEdit(): void {\n    this.edit.emit();\n  }\n}\n","<div class=\"container\">\n    <div class=\"top\">\n        <img *ngIf=\"bgImage\" [src]=\"bgImage\">\n        <img *ngIf=\"!bgImage\" [src]=\"'assets/default.png'\">\n        <div class=\"top-content\">\n            <div class=\"user-icon\">\n                <app-ui-icon *ngIf=\"!(responsive.lt.medium | async)\" [src]=\"profileImage\" [textAlternative]=\"profileText\" [size]=\"'xlarge'\"></app-ui-icon>\n                <app-ui-icon *ngIf=\"responsive.lt.medium | async\" [src]=\"profileImage\" [textAlternative]=\"profileText\" [size]=\"'large'\"></app-ui-icon>\n            </div>\n            <div class=\"upper\">\n                <div class=\"name\">\n                    <div class=\"content\" style=\"max-width: 290px !important; word-wrap: break-word;\">\n                        <ng-content *ngIf=\"!(responsive.lt.medium | async)\" select=\".info-header-name\"></ng-content>\n                        <ng-content *ngIf=\"responsive.lt.medium | async\" select=\".info-header-name-small\"></ng-content>\n                    </div>\n                </div>\n                <div class=\"sub\">\n                    <div *ngIf=\"!(responsive.lt.medium | async) && subscribed == false  && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <div class=\"inner\">\n                            <span>{{ 'COMMON.SUBSCRIBE' | translate }}</span>\n                            <svg name=\"btn-add\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"!(responsive.lt.medium | async) && subscribed == true && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <div class=\"inner\">\n                            <span style=\"color: #92929D !important\">{{ 'COMMON.YOU_ARE_ALREADY' | translate }}</span>\n                            <svg name=\"tick\" size=\"15\" style=\"width: 15px !important; height: 15px !important\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"!(responsive.lt.medium | async) && isMe\" class=\"content btn\" (click)=\"doEdit()\">\n                        <div class=\"inner\">\n                            <span style=\"color: #92929D !important\">{{ 'COMMON.EDIT' | translate }}</span>\n                            <svg name=\"edit-new\"></svg>\n                        </div>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && subscribed == false && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <svg name=\"btn-add\" size=\"35\"></svg>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && subscribed == true && !isMe\" class=\"content btn\" (click)=\"subFunc()\">\n                        <svg name=\"btn-cross\" size=\"35\"></svg>\n                    </div>\n                    <div *ngIf=\"(responsive.lt.medium | async) && isMe\" class=\"content btn\" (click)=\"doEdit()\">\n                        <svg name=\"edit-new\" size=\"25\"></svg>\n                    </div>\n                </div>\n            </div>\n            <div class=\"down\">\n                <ng-content *ngIf=\"!(responsive.lt.medium | async)\" select=\".info-header-down\"></ng-content>\n                <ng-content *ngIf=\"responsive.lt.medium | async\" select=\".info-header-down-small\"></ng-content>\n            </div>\n        </div>\n    </div>\n    <div class=\"desc\">\n        <ng-content select=\".info-header-desc\"></ng-content>\n    </div>\n    <div class=\"bar\">\n        <div *ngIf=\"!(responsive.lt.medium | async)\">\n            <ng-content *ngTemplateOutlet=\"bar\"></ng-content>\n        </div>\n        <ng-scrollbar *ngIf=\"responsive.lt.medium | async\" [track]=\"'horizontal'\" style=\"height: 64px;\">\n            <ng-content *ngTemplateOutlet=\"bar\"></ng-content>\n        </ng-scrollbar>\n    </div>\n</div>\n\n<ng-template #bar>\n    <ng-content select=\".info-header-bar\"></ng-content>\n</ng-template>\n"]}