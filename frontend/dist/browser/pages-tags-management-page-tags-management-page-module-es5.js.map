{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/tags-management-page/tags-filters.interface.ts","webpack:///src/app/modules/dashboard/pages/tags-management-page/tags-management-page-routing.module.ts","webpack:///src/app/modules/dashboard/pages/tags-management-page/tags-management-page.component.ts","webpack:///src/app/modules/dashboard/pages/tags-management-page/tags-management-page.component.html","webpack:///src/app/modules/dashboard/pages/tags-management-page/tags-management-page.module.ts","webpack:///src/app/modules/dashboard/pages/tags-management-page/tags-navs.const.ts","webpack:///src/app/modules/dashboard/pages/tags-management-page/components/all-tags-block/all-tags-block.component.ts","webpack:///src/app/modules/dashboard/pages/tags-management-page/components/all-tags-block/all-tags-block.component.html","webpack:///src/app/modules/dashboard/pages/tags-management-page/components/statistic-tags-block/statistic-tags-block.component.ts","webpack:///src/app/modules/dashboard/pages/tags-management-page/components/statistic-tags-block/statistic-tags-block.component.html"],"names":["tagsFilters","translateService","title","id","payload","Date","now","instant","routes","path","component","TagsManagementPageRoutingModule","forChild","imports","exports","TagsManagementPageComponent","tagsService","administrationService","sidebarWrapperService","navs","filters","selectedNav","selectedFilter","tags$","tagsPage","allTags$","total","pages","stat$","TagsStatConstant","range$","RangeParamsConstant","contentLoading","ngOnInit","setTimeout","params$","next","article","trending","navigation","live","showSidebar","getTags","getStats","selectNav","nav","clearTags","selectFilter","filter","refresh","allTags","getValue","getTags$","pipe","ngOnDestroy$","subscribe","tags","totalPages","content","deleteTag","delete$","tag","meta","range","checkbox","getStats$","before","after","res","count","selector","templateUrl","styleUrls","TagsManagementPageModule","declarations","TAGS_NAVS","AllTagsBlockComponent","nextPageReq","deleteReq","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","loadNextPage","emit","delete","item","changeDetection","OnPush","StatisticTagsBlockComponent","showReq","ngOnDestroy","show"],"mappings":"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","file":"pages-tags-management-page-tags-management-page-module-es5.js","sourcesContent":["import { TranslateService } from '@ngx-translate/core';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\n\nexport const tagsFilters = (translateService: TranslateService): ISelectItem[] => {\n    return [\n        {\n            title: 'По количеству за 30 дней',\n            id: 0,\n            payload: 'order=Frequency&after=' + (Date.now() - 1000 * 60 * 60 * 24 * 30),\n        },\n        {\n            title: 'По количеству за 90 дней',\n            id: 1,\n            payload: 'order=Frequency&after=' + (Date.now() - 1000 * 60 * 60 * 24 * 90),\n        },\n        {\n            title: translateService.instant('COMMON.FOR_THE_WHOLE_TIME'),\n            id: 2,\n            payload: 'order=Frequency',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_A_TO_Z_'),\n            id: 3,\n            payload: 'order=name&asc=true&locale=RUSSIAN',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_Z_TO_A_'),\n            id: 4,\n            payload: 'order=name&locale=RUSSIAN',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_A_TO_Z'),\n            id: 5,\n            payload: 'order=name&asc=true&locale=ENGLISH',\n        },\n        {\n            title: translateService.instant('COMMON.FROM_Z_TO_A'),\n            id: 6,\n            payload: 'order=name&locale=ENGLISH',\n        },\n    ];\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TagsManagementPageComponent } from './tags-management-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TagsManagementPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TagsManagementPageRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { DashboardConstants } from '@modules/dashboard/shared/classes/dashboard-constants.class';\nimport { PageableContent } from '@shared/classes/pageable-conetnt.class';\nimport { ITagDashboardView } from '@api/schemas/dashboard/tag-dashboard-view.interface';\nimport { ITagsStatistic } from '@api/schemas/dashboard/tags-statistics.interface';\nimport { TagsService } from '@api/routes/tags.service';\nimport { AdministrationService } from '@api/routes/administration.service';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { TAGS_NAVS } from './tags-navs.const';\nimport { tagsFilters } from './tags-filters.interface';\nimport { ITotalTags } from './total-tags.interface';\nimport { takeUntil } from 'rxjs/operators';\nimport { ITabsNavItem } from '@modules/dashboard/shared/ui/dashboard-tabs/tabs-nav-item.interface';\nimport { ISelectItem } from '@modules/dashboard/shared/ui/dashboard-select/select-item.interface';\nimport { IRangeParams } from '@modules/dashboard/shared/ui/dashboard-range/range-params.interface';\nimport { SidebarWrapperService } from '@layout/sidebar-wrapper/sidebar-wrapper.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { IStatTags } from '@modules/dashboard/pages/tags-management-page/components/statistic-tags-block/stat-tags.interface';\n\n@Component({\n  selector: 'app-tags-management-page',\n  templateUrl: './tags-management-page.component.html',\n  styleUrls: ['./tags-management-page.component.scss'],\n})\nexport class TagsManagementPageComponent extends AbstractComponent implements OnInit, OnDestroy {\n  public readonly navs: ITabsNavItem[] = TAGS_NAVS;\n  public readonly filters: ISelectItem[] = tagsFilters(this.translateService);\n\n  public selectedNav: ITabsNavItem = this.navs[0];\n  public selectedFilter: ISelectItem = this.filters[3];\n\n  public tags$: BehaviorSubject<ITagDashboardView[]> = new BehaviorSubject<ITagDashboardView[]>([]);\n  public tagsPage = 0;\n  public allTags$: BehaviorSubject<ITotalTags> = new BehaviorSubject<ITotalTags>({\n    total: null,\n    pages: null\n  });\n\n  public stat$: BehaviorSubject<IStatTags> = new BehaviorSubject<IStatTags>(DashboardConstants.TagsStatConstant);\n  public range$: BehaviorSubject<IRangeParams> = new BehaviorSubject<IRangeParams>(DashboardConstants.RangeParamsConstant);\n\n  public contentLoading = false;\n\n  constructor(\n    private readonly tagsService: TagsService,\n    private readonly administrationService: AdministrationService,\n    private readonly translateService: TranslateService,\n    private readonly sidebarWrapperService: SidebarWrapperService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.sidebarWrapperService.params$.next({ article: false, trending: false, navigation: false, live: false, showSidebar: false });\n    });\n    this.getTags();\n    this.getStats();\n  }\n\n  public selectNav(nav: ITabsNavItem): void {\n    this.selectedNav = nav;\n    if (nav.id === 1) {\n      this.getStats();\n    } else {\n      this.clearTags();\n      this.getTags();\n    }\n  }\n\n  public selectFilter(filter: ISelectItem): void {\n    this.selectedFilter = filter;\n  }\n\n  public refresh(filter?: ISelectItem): void {\n    if (filter) {\n      this.selectedFilter = filter;\n    }\n    this.clearTags();\n    this.getTags();\n  }\n\n  public getTags(): void {\n    const allTags = this.allTags$.getValue();\n    if ((allTags.total === null || this.tagsPage + 1 <= allTags.pages) && !this.contentLoading) {\n      this.contentLoading = true;\n      this.administrationService.getTags$(this.tagsPage, this.selectedFilter.payload)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((tags: PageableContent<ITagDashboardView> | any) => {\n        this.allTags$.next({\n          total: tags.total,\n          pages: tags.totalPages,\n        });\n        this.tags$.next([...this.tags$.getValue(), ...tags.content]);\n        this.tagsPage++;\n        this.contentLoading = false;\n      });\n    }\n  }\n\n  public clearTags(): void {\n    this.tags$.next([]);\n    this.tagsPage = 0;\n    this.getTags();\n  }\n\n  public deleteTag(id: number): void {\n    this.tagsService.delete$(id).pipe(takeUntil(this.ngOnDestroy$)).subscribe(() =>\n      this.tags$.next(this.tags$.getValue().filter((tag: ITagDashboardView) => tag.meta.id !== id))\n    );\n  }\n\n  public getStats(): void {\n    const range = this.range$.getValue();\n    if (range.checkbox) {\n      this.administrationService.getStats$(range.before, range.after)\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((res: ITagsStatistic) => this.stat$.next(res.count));\n    } else {\n      this.administrationService.getStats$()\n          .pipe(takeUntil(this.ngOnDestroy$))\n          .subscribe((res: ITagsStatistic) => {\n            this.stat$.next(res.count);\n          });\n    }\n  }\n}\n","<app-dashboard-tabs [navs]=\"navs\"\n                    [filters]=\"filters\"\n                    [activeFilter]=\"selectedFilter\"\n                    (selectedNav)=\"selectNav($event)\"\n                    (showReq)=\"refresh($event)\">\n    <app-all-tags-block *ngIf=\"selectedNav.id === 0\"\n                        [tags$]=\"tags$\"\n                        [allTags$]=\"allTags$\"\n                        (nextPageReq)=\"getTags()\"\n                        (deleteReq)=\"deleteTag($event.id)\">\n    </app-all-tags-block>\n    <app-statistic-tags-block *ngIf=\"selectedNav.id === 1\"\n                              [range$]=\"range$\"\n                              [stat$]=\"stat$\"\n                              (showReq)=\"getStats()\">\n    </app-statistic-tags-block>\n</app-dashboard-tabs>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TagsManagementPageRoutingModule } from './tags-management-page-routing.module';\nimport { TagsManagementPageComponent } from './tags-management-page.component';\n\nimport { AllTagsBlockComponent } from './components/all-tags-block/all-tags-block.component';\nimport { StatisticTagsBlockComponent } from './components/statistic-tags-block/statistic-tags-block.component';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DashboardRangeModule } from '@modules/dashboard/shared/ui/dashboard-range/dashboard-range.module';\nimport { DashboardTabsModule } from '@modules/dashboard/shared/ui/dashboard-tabs/dashboard-tabs.module';\n\n@NgModule({\n  declarations: [TagsManagementPageComponent, AllTagsBlockComponent, StatisticTagsBlockComponent],\n  imports: [CommonModule, TagsManagementPageRoutingModule, DashboardTabsModule, FormsModule, DashboardRangeModule, TranslateModule],\n})\nexport class TagsManagementPageModule {}\n","import { ITabsNavItem } from '@modules/dashboard/shared/ui/dashboard-tabs/tabs-nav-item.interface';\n\n\nexport const TAGS_NAVS: ITabsNavItem[] = [\n    {\n        title: 'Теги',\n        id: 0,\n        filters: true,\n    },\n    {\n        title: 'Статистика',\n        id: 1,\n        filters: false,\n    },\n];\n","import { Component, Input, Output, EventEmitter, HostListener, ChangeDetectionStrategy } from '@angular/core';\nimport { ITagDashboardView } from '@api/schemas/dashboard/tag-dashboard-view.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { ITotalTags } from '@modules/dashboard/pages/tags-management-page/total-tags.interface';\nimport { IDeletionTagInterface } from '@api/schemas/dashboard/deletion-tag.interface';\n\n@Component({\n  selector: 'app-all-tags-block',\n  templateUrl: './all-tags-block.component.html',\n  styleUrls: ['./all-tags-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AllTagsBlockComponent {\n  @Input() public tags$: BehaviorSubject<ITagDashboardView[]>;\n  @Input() public allTags$: BehaviorSubject<ITotalTags>;\n\n  @Output() private readonly nextPageReq: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private readonly deleteReq: EventEmitter<IDeletionTagInterface> = new EventEmitter<IDeletionTagInterface>();\n\n  constructor() {}\n\n  @HostListener('window:scroll', [])  public onScroll(): void {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      this.loadNextPage();\n    }\n  }\n\n  public loadNextPage(): void {\n    this.nextPageReq.emit();\n  }\n\n  public delete(item: ITagDashboardView): void {\n    this.deleteReq.emit({ id: item.meta.id });\n  }\n}\n","<form class=\"admin-form\">\n    <label class=\"admin-input-row\">\n        <span class=\"admin-input-row__title\">Общее количество</span>\n        <span class=\"admin-input-row__inputgroup\">\n            <input type=\"text\" class=\"admin-input admin-input_m\" disabled=\"true\" [value]=\"(allTags$ | async).total\">\n        </span>\n    </label>\n    <fieldset class=\"admin-form__fieldset\">\n        <table class=\"admin-form__tab\">\n            <thead>\n                <tr>\n                    <th>Тег</th>\n                    <th>Частота</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let tag of (tags$ | async)\">\n                    <td>{{ '# ' + tag.content }}</td>\n                    <td>\n                        <input type=\"text\" class=\"admin-input admin-input_short admin-input-row__input\" disabled=\"true\" [value]=\"tag.frequency\">\n                    </td>\n                    <td>\n                        <button class=\"btn admin-form__del\" (click)=\"delete(tag)\">\n                            <svg id=\"btn-cross\" viewBox=\"0 0 26 26\" width=\"24px\" height=\"24px\">\n                                <path d=\"M1.5 13C1.5 6.64873 6.64873 1.5 13 1.5C19.3513 1.5 24.5 6.64873 24.5 13C24.5 19.3513 19.3513 24.5 13 24.5C6.64873 24.5 1.5 19.3513 1.5 13Z\" fill=\"white\" stroke=\"#F0F0F0\"></path>\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.0015 11.9898L16.5371 8.45431C16.816 8.17537 17.2683 8.17537 17.5472 8.45431C17.8262 8.73326 17.8262 9.18552 17.5472 9.46447L14.0117 13L17.5472 16.5355C17.8262 16.8145 17.8262 17.2667 17.5472 17.5457C17.2683 17.8246 16.816 17.8246 16.5371 17.5457L13.0015 14.0102L9.466 17.5457C9.18705 17.8246 8.73479 17.8246 8.45584 17.5457C8.1769 17.2667 8.1769 16.8145 8.45584 16.5355L11.9914 13L8.45584 9.46447C8.1769 9.18552 8.1769 8.73326 8.45584 8.45431C8.73479 8.17537 9.18705 8.17537 9.466 8.45431L13.0015 11.9898Z\" fill=\"#00B7FF\"></path>\n                            </svg>\n                        </button>\n                    </td>\n                </tr>                   \n            </tbody>\n        </table>\n    </fieldset>\n</form>\n","import { Component, Input, Output, EventEmitter, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { DashboardConstants } from '@modules/dashboard/shared/classes/dashboard-constants.class';\nimport { IStatTags } from './stat-tags.interface';\nimport { IRangeParams } from '@modules/dashboard/shared/ui/dashboard-range/range-params.interface';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-statistic-tags-block',\n  templateUrl: './statistic-tags-block.component.html',\n  styleUrls: ['./statistic-tags-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StatisticTagsBlockComponent implements OnDestroy {\n  @Input() public stat$: BehaviorSubject<IStatTags>;\n  @Input() public range$: BehaviorSubject<IRangeParams>;\n\n  @Output() public readonly showReq: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor() {}\n\n  ngOnDestroy(): void {\n    this.range$.next(DashboardConstants.RangeParamsConstant);\n  }\n\n  public show(): void {\n    this.showReq.emit();\n  }\n}\n","<form class=\"admin-form\">\n    <app-dashboard-range [params$]=\"range$\"></app-dashboard-range>\n    <fieldset class=\"admin-form__fieldset\">\n        <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Всего тегов</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_short admin-input-row__input\" disabled=\"true\" [value]=\"(stat$ | async).all\">\n            </span>\n        </label>\n      <label class=\"admin-input-row\">\n            <span class=\"admin-input-row__title\">Новых</span>\n            <span class=\"admin-input-row__inputgroup\">\n                <input type=\"text\" class=\"admin-input admin-input_short admin-input-row__input\" disabled=\"true\" [value]=\"(stat$ | async).new\">\n            </span>\n      </label>\n    </fieldset>\n    <div class=\"admin-input-row\">\n        <button class=\"btn admin-btn_white admin-btn_m\" (click)=\"show()\">Показать</button>\n    </div>\n</form>\n"]}