{"version":3,"sources":["webpack:///src/app/shared/services/users-resolver.service.ts","webpack:///src/app/modules/user/user-header/user-header.component.ts","webpack:///src/app/modules/user/user-header/user-header.component.html","webpack:///src/app/shared/utils/id-map.operator.ts","webpack:///src/app/modules/user/user-header/user-header.module.ts"],"names":["UsersResolverService","usersService","router","resolve","route","getSingle$","params","id","pipe","providedIn","UserHeaderComponent","sessionService","feedService","companiesService","dynamicMetaTagsService","eventsService","jobsService","headerStatsSyncService","perms","notificationUpdateService","activatedRoute","commentCount$","draftCount$","promotedCount$","isMe$","unreadCount","ngOnInit","setCoreParams","setParams","getMainData","ngOnDestroy","setToDefault","idOrName$","paramMap","urlArray","url","split","user$","id$","user","meta","me$","info","username","ngOnDestroy$","subscribe","pageId$","me","count$","author","stage","DRAFT","bookmark","bookmarked","getBookmarked$","articles","events","jobs","total","authorInfo","isMe","loggedIn$","value","userId","company","subEvent$","type","status","subscribers","you","isCompany","roles","includes","jobCount$","jobCountNew$","eventCount$","update","page","next","snapshot","data","metaInfo$","title","tags","property","content","name","bio","picture","subFunc","subscribe$","selector","templateUrl","styleUrls","stats$","idMap","get","test","parseInt","UserHeaderModule","forChild","declarations","exports","imports"],"mappings":"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","file":"default~pages-user-comments-page-user-comments-page-module~pages-user-drafts-page-user-drafts-page-m~a99588bb-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { UsersService } from '@api/routes/users.service';\nimport { Observable } from 'rxjs';\nimport { notFound } from '@shared/utils/not-found.operator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersResolverService implements Resolve<IUserViewFull> {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly router: Router\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IUserViewFull> {\n    return this.usersService.getSingle$(route.params.id).pipe(notFound(this.router));\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UsersService } from '@api/routes/users.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SessionService } from '@app/services/session.service';\nimport { Observable, combineLatest, ReplaySubject } from 'rxjs';\nimport { IUserViewFull } from '@api/schemas/user/user-view-full.interface';\nimport { takeUntil, map, filter, switchMap, tap, mergeMap } from 'rxjs/operators';\nimport { AbstractComponent } from '@shared/classes/abstract-component.class';\nimport { FeedService } from '@api/routes/feed.service';\nimport { CompaniesService } from '@api/routes/companies.service';\nimport { PublicationStageEnum } from '@api/schemas/article/publication-stage.enum';\nimport { NotificationUpdateService } from '@shared/services/notification-update.service';\nimport { PermissionService } from '@app/services/permission/permission.service';\nimport { DynamicMetaTagsService } from '@layout/dynamic-meta-tags/dynamic-meta-tags.service';\nimport { IUserView } from '@api/schemas/user/user-view.interface';\nimport { environment } from '@env';\nimport { idMap } from '@shared/utils/id-map.operator';\nimport { EventsService } from '@api/routes/events.service';\nimport { JobsService } from '@api/routes/jobs.service';\nimport { IEventView } from '@api/schemas/event/event-view.interface';\nimport { IPageResponse } from '@api/schemas/page/page-response.interface';\nimport { IJobView } from '@api/schemas/job/job-view.interface';\nimport { HeaderStatsSyncService } from '@layout/shared/services/header-stats-sync.service';\nimport { Select } from '@ngxs/store';\nimport { USER_STATS_STATE_TOKEN } from '@app/store/user-stats/user-stats.state';\nimport { IUserStatsState } from '@app/store/user-stats/interfaces/user-stats-state.interface';\n\n@Component({\n  selector: 'app-user-header',\n  templateUrl: './user-header.component.html',\n  styleUrls: ['./user-header.component.scss']\n})\nexport class UserHeaderComponent extends AbstractComponent implements OnInit, OnDestroy {\n  @Select(USER_STATS_STATE_TOKEN) public stats$: Observable<IUserStatsState>;\n\n  public readonly commentCount$: ReplaySubject<number> = new ReplaySubject<number>(1);\n  public readonly draftCount$: ReplaySubject<number> = new ReplaySubject<number>(1);\n  public readonly promotedCount$: ReplaySubject<number> = new ReplaySubject<number>(1);\n  public readonly isMe$: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n\n  public user$: Observable<IUserViewFull>;\n  public me$: Observable<boolean>;\n  public idOrName$: Observable<string | number>;\n  public id$: Observable<number>;\n\n  public authorInfo: IUserViewFull;\n  public isMe: boolean;\n  public url: string;\n\n  public unreadCount = 0;\n\n  public eventCount$: Observable<number>;\n  public jobCount$: Observable<number>;\n\n  constructor(\n    protected readonly usersService: UsersService,\n    protected readonly sessionService: SessionService,\n    private readonly feedService: FeedService,\n    private readonly companiesService: CompaniesService,\n    private readonly dynamicMetaTagsService: DynamicMetaTagsService,\n    private readonly eventsService: EventsService,\n    private readonly jobsService: JobsService,\n    public readonly headerStatsSyncService: HeaderStatsSyncService,\n    public readonly router: Router,\n    public readonly perms: PermissionService,\n    public readonly notificationUpdateService: NotificationUpdateService,\n    public readonly activatedRoute: ActivatedRoute\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.setCoreParams();\n    this.setParams();\n    this.getMainData();\n  }\n\n  ngOnDestroy(): void {\n    this.dynamicMetaTagsService.setToDefault();\n    super.ngOnDestroy();\n  }\n\n  private setCoreParams(): void {\n    this.idOrName$ = this.activatedRoute.paramMap.pipe(\n      tap(() => {\n        const urlArray: string[] = this.router.url.split('/');\n        this.url = '/' + urlArray[1] + '/' + urlArray[2];\n      }),\n      idMap()\n    );\n    this.user$ = this.idOrName$.pipe(mergeMap((id: string | number) => this.usersService.getSingle$(id)), tap(() => this.getMainData()));\n    this.id$ = this.user$.pipe(map((user: IUserViewFull) => user.meta.id));\n    this.me$ = combineLatest([this.idOrName$, this.sessionService.user$]).pipe(\n      map(([id, user]: [string | number, IUserViewFull]) => {\n        return (user && id === 'me') || id === user.info.username || id === user.meta.id;\n      }),\n    );\n  }\n\n  private setParams(): void {\n    this.id$.pipe(\n      switchMap((id: number) => this.usersService.commentCount$(id)),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(this.commentCount$);\n    const pageId$ = combineLatest([this.sessionService.user$, this.id$]);\n    pageId$.pipe(\n      filter(([me, id]: [IUserViewFull, number]) => me.meta.id === id),\n      switchMap(([, id]: [any, number]) => this.feedService.count$({ author: id, stage: [PublicationStageEnum.DRAFT] })),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(this.draftCount$);\n    this.id$.pipe(\n      switchMap((author: number) => combineLatest([\n        this.feedService.count$({ bookmark: true, bookmarked: author }),\n        this.eventsService.getBookmarked$(author, 0),\n        this.jobsService.getBookmarked$(author, 0)\n      ])),\n      map(([articles, events, jobs]: [number, IPageResponse<IEventView>, IPageResponse<IJobView>]) =>\n        articles + events.total + jobs.total),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe(this.promotedCount$);\n    this.user$.pipe(takeUntil(this.ngOnDestroy$)).subscribe((user: IUserViewFull) => {\n      this.authorInfo = user;\n      this.isMe = this.sessionService.loggedIn$.value && user.meta.id === this.sessionService.userId;\n      if (user.info.company) {\n        this.headerStatsSyncService.subEvent$.pipe(\n          filter(([type, id, ]: ['topic' | 'company', number, boolean]) => type === 'company' && id === this.authorInfo.meta.id),\n          tap(([, , status]: ['topic' | 'company', number, boolean]) => this.authorInfo = {\n            ...this.authorInfo,\n            subscribers: {\n              ...this.authorInfo.subscribers,\n              you: status,\n            }\n          }),\n          takeUntil(this.ngOnDestroy$)\n        ).subscribe();\n      }\n      if (user.info.company.isCompany || user.roles?.includes('ROLE_SUPERUSER')) {\n        this.jobCount$ = this.companiesService.jobCountNew$(user.meta.id);\n        this.eventCount$ = this.companiesService.eventCount$(user.meta.id);\n      } else {\n        this.jobCount$ = null;\n        this.eventCount$ = null;\n      }\n      if (this.isMe) {\n        this.notificationUpdateService.update();\n      }\n    });\n    combineLatest([this.user$, this.sessionService.user$]).pipe(\n      map(([page, user]: [IUserViewFull, IUserViewFull]) => page?.meta.id === user?.meta.id),\n      takeUntil(this.ngOnDestroy$)\n    ).subscribe((isMe: boolean) => {\n      this.isMe$.next(isMe);\n    });\n  }\n\n  private getMainData(): void {\n    const user: IUserView = this.activatedRoute.snapshot.data.data;\n    this.dynamicMetaTagsService.metaInfo$.next({\n      title: user.info.username,\n      tags: [\n        { property: 'og:title', content: user.info.username },\n        { name: 'description', content: user.info.bio },\n        { property: 'og:description', content: user.info.bio },\n        { property: 'og:image', content: user.info.picture },\n        { property: 'og:url', content: environment.url + this.router.url },\n        { property: 'og:type', content: 'website' },\n        { property: 'og:site_name', content: 'Diskurs.Media' },\n        { name: 'twitter:card', content: 'summary' },\n        { name: 'twitter:title', content: user.info.username },\n        { name: 'twitter:description', content: user.info.bio },\n        { name: 'twitter:image', content: user.info.picture }\n      ]\n    });\n  }\n\n  public subFunc(): void {\n    this.usersService.subscribe$(this.authorInfo.meta.id, this.authorInfo.subscribers.you).pipe(takeUntil(this.ngOnDestroy$)).subscribe();\n    this.authorInfo = {\n      ...this.authorInfo,\n      subscribers: {\n        ...this.authorInfo.subscribers,\n        you: !this.authorInfo.subscribers.you,\n      },\n    };\n    if (this.authorInfo.info.company.isCompany) {\n      this.headerStatsSyncService.subEvent$.next(['company', this.authorInfo.meta.id, this.authorInfo.subscribers.you]);\n    }\n  }\n}\n","<app-ui-info-header class=\"css-block margin-bottom-44\"\n                    *ngIf=\"authorInfo\"\n                    [bgImage]=\"authorInfo.profile.cover\"\n                    [profileImage]=\"authorInfo.info.picture\"\n                    [profileText]=\"authorInfo.info | personName\"\n                    [isMe]=\"isMe$ | async\"\n                    [subscribed]=\"authorInfo.subscribers.you\"\n                    (edit)=\"router.navigate([url, 'edit'], { relativeTo: activatedRoute })\"\n                    (subscribe)=\"subFunc()\">\n    <div class=\"info-header-name\">\n        <div>{{ authorInfo.info | personName }}</div>\n        <div *ngIf=\"authorInfo.info.username\" class=\"nickname\">\n            @{{ authorInfo.info.username }}\n        </div>\n    </div>\n    <div class=\"info-header-name-small\" style=\"min-width: 150px;\">\n        <div>{{ authorInfo.info | personName }}</div>\n        <div *ngIf=\"authorInfo.info.username\" class=\"nickname\">\n            @{{ authorInfo.info.username }}\n        </div>\n    </div>\n    <div class=\"info-header-down subtitle-1\">\n        <div *ngIf=\"!(isMe$ | async) && !authorInfo.info.company.isCompany\" class=\"stats-item\">\n          {{ 'COMMON.AUTHORS_RATING' | translate }}\n            <span class=\"stats-item__value\">{{ authorInfo.rating > 0 ? '+' : '' }}{{ authorInfo.rating }}</span>\n        </div>\n        <div *ngIf=\"authorInfo.info.company.isCompany\" class=\"stats-item\">\n            <span class=\"fade-1 subtitle-1 font-1 blue\">{{ 'COMMON.COMPANYS_BLOG' | translate }}</span>\n        </div>\n        <div *ngIf=\"(isMe$ | async) && !authorInfo.info.company.isCompany\" class=\"stats-item\">\n            {{ 'COMMON.MY_RATING' | translate }}\n            &nbsp;<span class=\"stats-item__value\">{{ authorInfo.rating > 0 ? '+' : '' }}{{ authorInfo.rating }}</span>\n        </div>\n        <div class=\"subs flex-item subscribe\">\n            <span class=\"fade-1 subtitle-1 font-1\">{{ 'COMMON.SUBSCRIBERS' | translate }}</span>&nbsp;\n            <span class=\"fade-1 subtitle-1 font-1 blue\">{{ authorInfo.subscribers.count }}</span>\n        </div>\n        <app-action-menu-user *ngIf=\"!(isMe$ | async) && perms.isLoggedIn\" class=\"flex-item\" [data]=\"authorInfo\"\n            (gone)=\"this.router.navigate([authorInfo.info.company.isCompany ? '/companies' : '/authors'])\"></app-action-menu-user>\n        <div *ngIf=\"(isMe$ | async)\" class=\"notifications flex-item\" >\n            <a [routerLink]=\"[url, 'notifications']\">\n                <svg name=\"bell\" class=\"f-gray\" size=\"26\"></svg>\n                <ng-container *ngIf=\"(notificationUpdateService.unreadNotifications$ | async) as unreadCount\">\n                    <sup *ngIf=\"unreadCount > 0\" class=\"count\">{{ unreadCount > 99 ? '99+' : unreadCount }}</sup>\n                </ng-container>\n            </a>\n            \n        </div>\n    </div>\n    <div class=\"info-header-down-small\">\n        <div class=\"subs flex-item\">\n            <div *ngIf=\"!authorInfo.info.company.isCompany\" class=\"stats-item\">\n                <span class=\"fade-1 subtitle-1 font-1 subscribe-margin\">{{ 'COMMON.AUTHORS_RATING' | translate }}</span>\n                <span class=\"stats-item__value\">{{ authorInfo.rating > 0 ? '+' : '' }}{{ authorInfo.rating }}</span>\n            </div>\n            <span *ngIf=\"authorInfo.info.company.isCompany\" class=\"fade-1 subtitle-1 font-1 blue\">{{ 'COMMON.COMPANYS_BLOG' | translate }}</span>\n        </div>\n        <div class=\"subs flex-item\">\n          <span class=\"fade-1 subtitle-1 font-1 subscribe-margin\">{{ 'COMMON.SUBSCRIBERS' | translate }}</span>\n          <span class=\"fade-1 subtitle-1 font-1 blue\">{{ authorInfo.subscribers.count }}</span>\n        </div>\n        <app-action-menu-user *ngIf=\"!(isMe$ | async) && perms.isLoggedIn\" class=\"flex-item\" [data]=\"authorInfo\"\n            (gone)=\"this.router.navigate([authorInfo.info.company.isCompany ? '/companies' : '/authors'])\"></app-action-menu-user>\n        <div *ngIf=\"(isMe$ | async)\" class=\"notifications flex-item\" >\n            <a [routerLink]=\"[url, 'notifications']\">\n                <svg name=\"bell\" class=\"f-gray\" size=\"26\"></svg>\n                <ng-container *ngIf=\"(notificationUpdateService.unreadNotifications$ | async) as unreadCount\">\n                    <sup *ngIf=\"unreadCount > 0\" class=\"count\">{{ unreadCount > 99 ? '99+' : unreadCount }}</sup>\n                </ng-container>\n            </a>\n        </div>\n        <app-action-menu-user *appLoggedIn class=\"flex-item\" [data]=\"authorInfo\"\n            (gone)=\"this.router.navigate([authorInfo.info.company.isCompany ? '/companies' : '/authors'])\"></app-action-menu-user>\n    </div>\n    <div class=\"info-header-desc\">\n        <div class=\"fade-1 font-2 body-2\" style=\"white-space: pre-line\">\n            {{ authorInfo.info.bio || 'Описание профиля отсутствует.' }}\n        </div>\n        <div *ngIf=\"(authorInfo.info.company.isCompany && authorInfo.info.company.confirmed) || authorInfo.roles?.includes('ROLE_SUPERUSER')\" class=\"events-jobs\">\n            <a *ngIf=\"eventCount$ | async; let eventCount\" class=\"item item-inherit\" [routerLink]=\"[url, 'events']\" routerLinkActive=\"selected\">{{ 'COMMON.EVENT_' | translate }} <br><span class=\"blue\">({{ eventCount }})</span>\n            </a>\n            <a *ngIf=\"jobCount$ | async; let jobCount\" class=\"item\" [routerLink]=\"[url, 'jobs']\" routerLinkActive=\"selected\">{{ 'COMMON.VACANCIES_' | translate }}<br><span\n                class=\"blue\">({{ jobCount }})</span></a>\n        </div>\n    </div>\n    <div class=\"info-header-bar\">\n        <a class=\"flex-item btn\" [class.blue]=\"rlaPosts.isActive\" [routerLink]=\"[url, 'posts']\" routerLinkActive #rlaPosts=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.PUBLICATIONS_' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaPosts.isActive\">{{ authorInfo.postCount }}</span>\n            </div>\n        </a>\n        <a *ngIf=\"isMe$ | async\" class=\"flex-item btn\" [class.blue]=\"rlaDrafts.isActive\" class=\"flex-item btn\" [routerLink]=\"[url, 'drafts']\" routerLinkActive #rlaDrafts=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.DRAFTS' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaDrafts.isActive\">{{ draftCount$ | async }}</span>\n            </div>\n        </a>\n        <a class=\"flex-item btn\"  [class.blue]=\"rlaComments.isActive\" [routerLink]=\"[url, 'comments']\" routerLinkActive #rlaComments=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.COMMENTS' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaComments.isActive\">{{ commentCount$ | async }}</span>\n            </div>\n        </a>\n        <a class=\"flex-item btn\" [class.blue]=\"rlaPromoted.isActive\" [routerLink]=\"[url, 'promoted']\" routerLinkActive #rlaPromoted=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.FAVORITES' | translate }}</span>\n                <br>\n                <span class=\"font-1 fade-1 h5 button-1 numbers\"\n                    [class.blue]=\"rlaPromoted.isActive\">{{ this.isMe ? (stats$ | async).promoted : (promotedCount$ | async) }}</span>\n            </div>\n        </a>\n        \n        <a class=\"flex-item btn\" [routerLink]=\"[url, 'info']\" routerLinkActive #rlaInfo=\"routerLinkActive\">\n            <div>\n                <span class=\"font-1 fade-1 h5 button-1\">{{ 'COMMON.INFORMATION' | translate }}</span>\n                <br>\n                <svg class=\"numbers\"\n                    [name]=\"rlaInfo.isActive ? 'chevron/down-fill' : 'btn-expand-h'\"></svg>\n            </div>\n        </a>\n        \n    </div>\n</app-ui-info-header>\n","import { OperatorFunction } from 'rxjs';\nimport { ParamMap } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\nexport function idMap(): OperatorFunction<ParamMap, string | number> {\n    return map((value: ParamMap) => {\n        const id: string = value.get('id');\n        return !/^\\d+$/.test(id) ? id : parseInt(id, 10);\n    });\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserHeaderComponent } from './user-header.component';\nimport { SharedUiModule } from '@shared/ui/shared-ui.module';\nimport { SharedPipesModule } from '@shared/pipes/shared-pipes.module';\nimport { InfoHeaderModule } from '@shared/ui/info-header/info-header.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { SvgModule } from '@shared/modules/svg/svg.module';\nimport { SharedComponentsModule } from '@shared/components/shared-components.module';\n\n\n\n@NgModule({\n  declarations: [UserHeaderComponent],\n  exports: [UserHeaderComponent],\n  imports: [\n    CommonModule,\n    SharedUiModule,\n    SharedPipesModule,\n    InfoHeaderModule,\n    TranslateModule.forChild(),\n    RouterModule,\n    SvgModule,\n    SharedComponentsModule\n  ]\n})\nexport class UserHeaderModule { }\n"]}