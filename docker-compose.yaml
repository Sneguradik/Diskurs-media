version: '3'

services:
  postgres:
    image: postgres:15.2
    container_name: postgres
    environment:
      POSTGRES_DB: "yacht"
      POSTGRES_USER: "yacht"
      POSTGRES_PASSWORD: "yacht2023"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ../ops/backend/Dockerfile
    depends_on:
      - postgres
    env_file:
      - ./ops/.env
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`75.101.174.115`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=http"
      - "traefik.http.services.backend.loadbalancer.server.port=8081"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ../ops/frontend/Dockerfile
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`75.101.174.115`) && (PathPrefix(`/`) && !PathPrefix(`/api`))"
      - "traefik.http.routers.frontend.entrypoints=http"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443

volumes:
  postgres_data:

